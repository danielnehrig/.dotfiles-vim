!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
#jasmine_content	jasmine/src/html/_HTMLReporter.scss	/^  #jasmine_content {$/;"	i
$	vim-easymotion/t/easymotion_spec.vim	/^        normal \$$/;"	m
$	vim-easymotion/t/easymotion_spec.vim	/^        normal! \$$/;"	m
$	vim-easymotion/t/operator_pending_spec.vim	/^        normal! \$$/;"	m
,	vim-easymotion/t/easymotion_spec.vim	/^        map , <Plug>(easymotion-prev)$/;"	m
,	vim-easymotion/t/easymotion_spec.vim	/^        normal ,$/;"	m
.align	vim-css3-syntax/test/test.css	/^.align {$/;"	c
.animations	vim-css3-syntax/test/test.css	/^.animations {$/;"	c
.background	vim-css3-syntax/test/test.css	/^.background {$/;"	c
.box	vim-css3-syntax/test/test.css	/^.box {$/;"	c
.break	vim-css3-syntax/test/test.css	/^.break {$/;"	c
.cascade-3	vim-css3-syntax/test/test.css	/^.cascade-3 {$/;"	c
.cascade-4	vim-css3-syntax/test/test.css	/^.cascade-4 {$/;"	c
.colors	vim-css3-syntax/test/test.css	/^.colors {$/;"	c
.compositing	vim-css3-syntax/test/test.css	/^.compositing {$/;"	c
.conditional	vim-css3-syntax/test/test.css	/^  .conditional {$/;"	c
.content	vim-css3-syntax/test/test.css	/^.content {$/;"	c
.counter-style	vim-css3-syntax/test/test.css	/^.counter-style {$/;"	c
.display	vim-css3-syntax/test/test.css	/^.display {$/;"	c
.exclusions	vim-css3-syntax/test/test.css	/^.exclusions {$/;"	c
.flexbox	vim-css3-syntax/test/test.css	/^.flexbox {$/;"	c
.fonts	vim-css3-syntax/test/test.css	/^.fonts {$/;"	c
.gcpm	vim-css3-syntax/test/test.css	/^.gcpm::footnote-call,$/;"	c
.gcpm	vim-css3-syntax/test/test.css	/^.gcpm::footnote-marker {$/;"	c
.grid	vim-css3-syntax/test/test.css	/^.grid {$/;"	c
.html5-elements	vim-css3-syntax/test/test.css	/^.html5-elements,$/;"	c
.images	vim-css3-syntax/test/test.css	/^.images {$/;"	c
.inline	vim-css3-syntax/test/test.css	/^.inline {$/;"	c
.jasmine-alert	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-alert .jasmine-bar,$/;"	c
.jasmine-banner	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-banner .jasmine-title {$/;"	c
.jasmine-banner	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-banner .jasmine-version {$/;"	c
.jasmine-banner	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-banner {$/;"	c
.jasmine-banner	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-banner,$/;"	c
.jasmine-bar	jasmine/src/html/_HTMLReporter.scss	/^    .jasmine-bar.jasmine-menu.jasmine-failure-list,$/;"	c
.jasmine-bar	jasmine/src/html/_HTMLReporter.scss	/^    .jasmine-bar.jasmine-menu.jasmine-spec-list,$/;"	c
.jasmine-bar	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-bar {$/;"	c
.jasmine-description	jasmine/src/html/_HTMLReporter.scss	/^      .jasmine-description {$/;"	c
.jasmine-description	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-description + .jasmine-suite {$/;"	c
.jasmine-duration	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-duration {$/;"	c
.jasmine-failures	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-failures {$/;"	c
.jasmine-payload	jasmine/src/html/_HTMLReporter.scss	/^    .jasmine-payload {$/;"	c
.jasmine-result-message	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-result-message span.jasmine-result {$/;"	c
.jasmine-result-message	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-result-message {$/;"	c
.jasmine-result-message	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-result-message,$/;"	c
.jasmine-results	jasmine/src/html/_HTMLReporter.scss	/^    .jasmine-results .jasmine-failures {$/;"	c
.jasmine-results	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-results {$/;"	c
.jasmine-run-options	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-run-options {$/;"	c
.jasmine-spec	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-spec .jasmine-description,$/;"	c
.jasmine-spec-detail	jasmine/src/html/_HTMLReporter.scss	/^    .jasmine-spec-detail {$/;"	c
.jasmine-spec-detail	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-spec-detail .jasmine-description,$/;"	c
.jasmine-stack-trace	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-stack-trace {$/;"	c
.jasmine-suite	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-suite {$/;"	c
.jasmine-summary	jasmine/src/html/_HTMLReporter.scss	/^    .jasmine-summary {$/;"	c
.jasmine-summary	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-summary {$/;"	c
.jasmine-summary	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-summary,$/;"	c
.jasmine-symbol-summary	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-symbol-summary {$/;"	c
.jasmine-symbol-summary	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-symbol-summary,$/;"	c
.jasmine-trigger	jasmine/src/html/_HTMLReporter.scss	/^    .jasmine-trigger {$/;"	c
.jasmine-version	jasmine/src/html/_HTMLReporter.scss	/^  .jasmine-version {$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter #jasmine_content { position: fixed; right: 100%; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-banner .jasmine-title { background: url('data:image\/png;base64,iVBORw0KGgoAAAANSUhEUgAAAFoAAAAZCAMAAACGusnyAAACdlBMVEX\/\/\/\/\/AP+AgICqVaqAQICZM5mAVYCSSZKAQICOOY6ATYCLRouAQICJO4mSSYCIRIiPQICHPIeOR4CGQ4aMQICGPYaLRoCFQ4WKQICPPYWJRYCOQoSJQICNPoSIRICMQoSHQICHRICKQoOHQICKPoOJO4OJQYOMQICMQ4CIQYKLQICIPoKLQ4CKQICNPoKJQISMQ4KJQoSLQYKJQISLQ4KIQoSKQYKIQICIQISMQoSKQYKLQIOLQoOJQYGLQIOKQIOMQoGKQYOLQYGKQIOLQoGJQYOJQIOKQYGJQIOKQoGKQIGLQIKLQ4KKQoGLQYKJQIGKQYKJQIGKQIKJQoGKQYKLQIGKQYKLQIOJQoKKQoOJQYKKQIOJQoKKQoOKQIOLQoKKQYOLQYKJQIOKQoKKQYKKQoKJQYOKQYKLQIOKQoKLQYOKQYKLQIOJQoGKQYKJQYGJQoGKQYKLQoGLQYGKQoGJQYKKQYGJQIKKQoGJQYKLQIKKQYGLQYKKQYGKQYGKQYKJQYOKQoKJQYOKQYKLQYOLQYOKQYKLQYOKQoKKQYKKQYOKQYOJQYKKQYKLQYKKQIKKQoKKQYKKQYKKQoKJQIKKQYKLQYKKQYKKQIKKQYKKQYKKQYKKQIKKQYKJQYGLQYGKQYKKQYKKQYGKQIKKQYGKQYOJQoKKQYOLQYKKQYOKQoKKQYKKQoKKQYKKQYKJQYKLQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKJQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKLQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKKQYKmIDpEAAAA0XRSTlMAAQIDBAUGBwgJCgsMDQ4PEBESExQVFhcYGRobHB0eHyAiIyQlJycoKissLS4wMTQ1Njc4OTo7PDw+P0BCQ0RISUpLTE1OUFNUVVdYWFlaW15fYGFiY2ZnaGlqa2xtb3BxcnN0dnh5ent8fX5\/gIGChIWIioyNjo+QkZOUlZaYmZqbnJ2eoKGio6WmqKmsra6vsLGztre4ubq7vL2+wMHDxMjJysvNzs\/Q0dLU1tfY2dvc3t\/g4eLj5ebn6Onq6+zt7u\/w8vP09fb3+Pn6+\/z9\/vkVQXAAAAMaSURBVHhe5dXxV1N1GMfxz2ABbDgIAm5VDJOyVDIJLUMaVpBWUZUaGbmqoGpZRSiGiRWp6KoZ5AB0ZY50RImZQIlahKkMYXv\/R90dBvET\/rJfOr3Ouc8v99zPec59zvf56j+vYKlViSf7250X4Mr3O29Tgq08BdGB4DhcekEJ5YkQKFsgWZdtj9JpV+I8xPjLFqkrsEIqO8PHSpis36jWazcqjEsfJjkvRssVU37SdIOu4XCf5vEJPsnwJpnRNU9JmxhMk8l1gehIrq7hTFjzOD+Vf88629qKMJVNltInFeRexRQyJlNeqd1iGDlSzrIUIyXbyFfm3RYprcQRe7lqtWyGYbfc6dT0R2vmdOOkX3u55C1rP37ftiH+tDby4r\/RBT0w8TyEkr+epB9XgPDmSYYWbrhCuFYaIyw3fDQAXTnSkh+ANofiHmWf9l+FY1I90FdQTetstO00o23novzVsJ7uB3\/C5TkbjRwZ5JerwV4iRWq9HFbFMaK\/d0TYqayRiQPuIxxS3Bu8JWU90\/60tKi7vkhaznez0a\/TbVOKj5CaOZh6fWG6\/Lyv9B\/ZLR1gw\/S\/fpbeVD3MCW1li6SvWDOn65tr99\/uvWtBS0XDm4s1t+sOHpG0kpBKx\/l77wOSnxLpcx6TXmXLTPQOKYOf9Q1dfr8\/SJ2mFdCvl1Yl93DiHUZvXeLJbGSzYu5gVJ2slbSakOR8dxCq5adQ2oFLqsE9Ex3L4qQO0eOPeU5x56bypXp4onSEb5OkICX6lDat55TeoztNKQcJaakrz9KCb95oD69IKq+yKW4XPjknaS52V0TZqE2cTtXjcHSCRmUO88e+85hj3EP74i9p8pylw7lxgMDyyl6OV7ZejnjNMfatu87LxRbH0IS35gt2a4ZjmGpVBdKK3Wr6INk8jWWSGqbA55CKgjBRC6E9w78ydTg3ABS3AFV1QN0Y4Aa2pgEjWnQURj9L0ayK6R2ysEqxHUKzYnLvvyU+i9KM2JHJzE4vyZOyDcOwOsySajeLPc8sNvPJkFlyJd20wpqAzZeAfZ3oWybxd+P\/3j+SG3uSBdf2VQAAAABJRU5ErkJggg==') no-repeat; background: url('data:image\/svg+xml;base64,') no-repeat, none; -moz-background-size: 100%; -o-background-size: 100%; -webkit-background-size: 100%; background-size: 100%; display: block; float: left; width: 90px; height: 25px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-banner .jasmine-version { margin-left: 14px; position: relative; top: 6px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-banner { margin-top: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-banner { position: relative; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-banner, .jasmine_html-reporter .jasmine-symbol-summary, .jasmine_html-reporter .jasmine-summary, .jasmine_html-reporter .jasmine-result-message, .jasmine_html-reporter .jasmine-spec .jasmine-description, .jasmine_html-reporter .jasmine-spec-detail .jasmine-description, .jasmine_html-reporter .jasmine-alert .jasmine-bar, .jasmine_html-reporter .jasmine-stack-trace { padding-left: 9px; padding-right: 9px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar a { color: white; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar { line-height: 28px; font-size: 14px; display: block; color: #eee; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar.jasmine-errored { background-color: #ca3a11; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar.jasmine-failed { background-color: #ca3a11; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar.jasmine-menu a { color: #333; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar.jasmine-menu { background-color: #fff; color: #aaa; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar.jasmine-passed { background-color: #007069; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-bar.jasmine-skipped { background-color: #bababa; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-description + .jasmine-suite { margin-top: 0; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-duration { color: #fff; float: right; line-height: 28px; padding-right: 9px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-failures .jasmine-spec-detail .jasmine-description a { color: white; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-failures .jasmine-spec-detail .jasmine-description { background-color: #ca3a11; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-failures .jasmine-spec-detail { margin-bottom: 28px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-result-message span.jasmine-result { display: block; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-result-message { padding-top: 14px; color: #333; white-space: pre; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-results { margin-top: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-run-options .jasmine-payload { position: absolute; display: none; right: -1px; border: 1px solid #8a4182; background-color: #eee; white-space: nowrap; padding: 4px 8px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-run-options .jasmine-payload.jasmine-open { display: block; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-run-options .jasmine-trigger { cursor: pointer; padding: 8px 16px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-run-options { float: right; margin-right: 5px; border: 1px solid #8a4182; color: #8a4182; position: relative; line-height: 20px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-stack-trace { margin: 5px 0 0 0; max-height: 224px; overflow: auto; line-height: 18px; color: #666; border: 1px solid #ddd; background: white; white-space: pre; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-suite a { color: #333; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-suite { margin-top: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary li.jasmine-disabled a { color: #bababa; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary li.jasmine-empty a { color: #ba9d37; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary li.jasmine-failed a { color: #ca3a11; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary li.jasmine-passed a { color: #007069; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary li.jasmine-pending a { color: #ba9d37; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary ul { list-style-type: none; margin-left: 14px; padding-top: 0; padding-left: 0; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary ul.jasmine-suite { margin-top: 7px; margin-bottom: 7px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-summary { margin-top: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li { display: inline-block; height: 10px; width: 14px; font-size: 16px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-disabled { font-size: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-disabled:before { color: #bababa; content: "\\02022"; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-empty { font-size: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-empty:before { color: #ba9d37; content: "\\02022"; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-failed { line-height: 9px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-failed:before { color: #ca3a11; content: "\\d7"; font-weight: bold; margin-left: -1px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-passed { font-size: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-passed:before { color: #007069; content: "\\02022"; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-pending { line-height: 17px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary li.jasmine-pending:before { color: #ba9d37; content: "*"; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-symbol-summary { overflow: hidden; *zoom: 1; margin: 14px 0; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter .jasmine-version { color: #aaa; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter a { text-decoration: none; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter a:hover { text-decoration: underline; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter p, .jasmine_html-reporter h1, .jasmine_html-reporter h2, .jasmine_html-reporter h3, .jasmine_html-reporter h4, .jasmine_html-reporter h5, .jasmine_html-reporter h6 { margin: 0; line-height: 14px; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter { background-color: #eee; padding: 5px; margin: -8px; font-size: 11px; font-family: Monaco, "Lucida Console", monospace; line-height: 14px; color: #333; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter.jasmine-failure-list .jasmine-bar.jasmine-menu.jasmine-spec-list, .jasmine_html-reporter.jasmine-failure-list .jasmine-summary { display: none; }$/;"	c
.jasmine_html-reporter	jasmine/lib/jasmine-core/jasmine.css	/^.jasmine_html-reporter.jasmine-spec-list .jasmine-bar.jasmine-menu.jasmine-failure-list, .jasmine_html-reporter.jasmine-spec-list .jasmine-results .jasmine-failures { display: none; }$/;"	c
.jasmine_html-reporter	jasmine/src/html/_HTMLReporter.scss	/^.jasmine_html-reporter {$/;"	c
.line-grid	vim-css3-syntax/test/test.css	/^.line-grid {$/;"	c
.lists	vim-css3-syntax/test/test.css	/^.lists::marker {$/;"	c
.masking	vim-css3-syntax/test/test.css	/^.masking {$/;"	c
.multicol	vim-css3-syntax/test/test.css	/^.multicol {$/;"	c
.overflow	vim-css3-syntax/test/test.css	/^.overflow {$/;"	c
.page	vim-css3-syntax/test/test.css	/^.page {$/;"	c
.page-floats-3	vim-css3-syntax/test/test.css	/^.page-floats-3 {$/;"	c
.positioning	vim-css3-syntax/test/test.css	/^.positioning {$/;"	c
.pseudo	vim-css3-syntax/test/test.css	/^.pseudo::grammer-error,$/;"	c
.pseudo	vim-css3-syntax/test/test.css	/^.pseudo::selection,$/;"	c
.pseudo	vim-css3-syntax/test/test.css	/^.pseudo::spelling-error,$/;"	c
.pseuod	vim-css3-syntax/test/test.css	/^.pseuod::placeholder {$/;"	c
.regions	vim-css3-syntax/test/test.css	/^.regions:region {$/;"	c
.round-display-1	vim-css3-syntax/test/test.css	/^  .round-display-1 {$/;"	c
.ruby	vim-css3-syntax/test/test.css	/^.ruby {$/;"	c
.scoping	vim-css3-syntax/test/test.css	/^.scoping \/deep\/ span {$/;"	c
.scoping	vim-css3-syntax/test/test.css	/^.scoping::content,$/;"	c
.scoping	vim-css3-syntax/test/test.css	/^.scoping::shadow,$/;"	c
.scoping	vim-css3-syntax/test/test.css	/^.scoping:host,$/;"	c
.scoping	vim-css3-syntax/test/test.css	/^.scoping:host-context,$/;"	c
.scoping	vim-css3-syntax/test/test.css	/^.scoping:scope-context div,$/;"	c
.scping	vim-css3-syntax/test/test.css	/^.scping:host(.foo),$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:checked,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:disabled,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:empty,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:enabled,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:first-of-type,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:indeterminate,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:last-child,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:last-of-type,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:matches(:hover, :focus),$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:not([DISABLED]) {$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:nth-child(2n+1),$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:nth-last-child(-n+2),$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:nth-last-of-type(n+2),$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:nth-of-type(2n+1),$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:only-child,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:only-of-type,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:root,$/;"	c
.selectors3	vim-css3-syntax/test/test.css	/^.selectors3:target,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4 | h1,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:active-drop-target,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:any-link,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:blank,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:column(p, li, dt, dd) {$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:current(p, li, dt, dd),$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:current,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:default,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:dir(ltr),$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:future,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:in-range,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:invalid,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:invalid-drop-target,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:local-link(0),$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:local-link,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:nth-column(2n+1),$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:nth-last-column(-n+2),$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:nth-last-match(-n+2),$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:nth-match(2n+1),$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:optional,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:out-of-range,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:past,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:placeholder-shown,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:read-only,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:read-write,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:required,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:scope,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:user-error,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:valid,$/;"	c
.selectors4	vim-css3-syntax/test/test.css	/^.selectors4:valid-drop-target,$/;"	c
.shapes	vim-css3-syntax/test/test.css	/^.shapes {$/;"	c
.sizing	vim-css3-syntax/test/test.css	/^.sizing {$/;"	c
.snappoints	vim-css3-syntax/test/test.css	/^.snappoints {$/;"	c
.speech	vim-css3-syntax/test/test.css	/^.speech {$/;"	c
.text-3	vim-css3-syntax/test/test.css	/^.text-3 {$/;"	c
.text-4	vim-css3-syntax/test/test.css	/^.text-4 {$/;"	c
.text-decor-3	vim-css3-syntax/test/test.css	/^.text-decor-3 {$/;"	c
.transforms	vim-css3-syntax/test/test.css	/^.transforms {$/;"	c
.transitions	vim-css3-syntax/test/test.css	/^.transitions {$/;"	c
.ui-3	vim-css3-syntax/test/test.css	/^.ui-3 {$/;"	c
.ui-4	vim-css3-syntax/test/test.css	/^.ui-4 {$/;"	c
.values	vim-css3-syntax/test/test.css	/^.values {$/;"	c
.variables	vim-css3-syntax/test/test.css	/^.variables {$/;"	c
.will-change	vim-css3-syntax/test/test.css	/^.will-change {$/;"	c
.writing-modes	vim-css3-syntax/test/test.css	/^.writing-modes {$/;"	c
/	vim-easymotion/t/easymotion_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/	vim-easymotion/t/smartsign_spec.vim	/^        map \/ <Plug>(easymotion-sn)$/;"	m
/,,1	vim-easymotion/t/smartsign_spec.vim	/^        normal \/,,1$/;"	m
/,<1	vim-easymotion/t/smartsign_spec.vim	/^        normal \/,<1$/;"	m
0	vim-easymotion/t/easymotion_spec.vim	/^        normal! 0$/;"	m
0	vim-easymotion/t/operator_pending_spec.vim	/^        normal! 0$/;"	m
0	vim-easymotion/t/smartsign_spec.vim	/^        normal! 0$/;"	m
2,	vim-easymotion/t/easymotion_spec.vim	/^        normal 2,$/;"	m
2jdd	git-gutter/test/testHunkRevertNearbyHunk.vim	/^normal 2jdd$/;"	m
2jdd	git-gutter/test/testHunkStageNearbyHunk.vim	/^normal 2jdd$/;"	m
3;	vim-easymotion/t/easymotion_spec.vim	/^        normal 3;$/;"	m
4,	vim-easymotion/t/easymotion_spec.vim	/^        normal 4,$/;"	m
5G	git-gutter/test/testHunkOutsideNoop.vim	/^normal 5G$/;"	m
5Gi*	git-gutter/test/testEditAmbiguousFile.vim	/^normal 5Gi*$/;"	m
5Gi*	git-gutter/test/testHunkRevert.vim	/^normal 5Gi*$/;"	m
5Gi*	git-gutter/test/testHunkStage.vim	/^normal 5Gi*$/;"	m
5Go*	git-gutter/test/testKeepModified.vim	/^normal 5Go*$/;"	m
5Go*	git-gutter/test/testKeepOpMarks.vim	/^normal 5Go*$/;"	m
;	vim-easymotion/t/easymotion_spec.vim	/^        map ; <Plug>(easymotion-next)$/;"	m
;	vim-easymotion/t/easymotion_spec.vim	/^        normal ;$/;"	m
<C-G>S	vim-surround/plugin/surround.vim	/^    imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>c	vim-capslock/plugin/capslock.vim	/^imap <C-G>c <Plug>CapsLockToggle$/;"	m
<C-G>s	vim-surround/plugin/surround.vim	/^    imap      <C-G>s <Plug>Isurround$/;"	m
<C-L>	vim-capslock/plugin/capslock.vim	/^  imap <C-L> <Plug>CapsLockToggle$/;"	m
<C-S>	vim-surround/plugin/surround.vim	/^      imap    <C-S> <Plug>Isurround$/;"	m
<Leader><Leader>	vim-easymotion/plugin/EasyMotion.vim	/^            map <Leader><Leader> <Plug>(easymotion-prefix)$/;"	m
<Leader>b	vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>b <Plug>(easymotion-iskeyword-b)$/;"	m
<Leader>hp	git-gutter/plugin/gitgutter.vim	/^    nmap <Leader>hp <Plug>GitGutterPreviewHunk$/;"	m
<Leader>hr	git-gutter/plugin/gitgutter.vim	/^    nmap <Leader>hr <Plug>GitGutterRevertHunk$/;"	m
<Leader>hs	git-gutter/plugin/gitgutter.vim	/^    nmap <Leader>hs <Plug>GitGutterStageHunk$/;"	m
<Leader>ig	vim-indent-guides/plugin/indent_guides.vim	/^  nmap <silent><unique> <Leader>ig <Plug>IndentGuidesToggle$/;"	m
<Leader>w	vim-easymotion/t/easymotion_spec.vim	/^        map <Leader>w <Plug>(easymotion-iskeyword-w)$/;"	m
<Plug>(easymotion-activate)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-activate) :<C-u>call EasyMotion#activate(0)<CR>$/;"	m
<Plug>(easymotion-dotrepeat)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-dotrepeat)$/;"	m
<Plug>(easymotion-next)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-next)$/;"	m
<Plug>(easymotion-prev)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-prev)$/;"	m
<Plug>(easymotion-repeat)	vim-easymotion/plugin/EasyMotion.vim	/^noremap  <silent><Plug>(easymotion-repeat)$/;"	m
<Plug>AngularGfJump	vim-angular/plugin/angular.vim	/^nnoremap <silent> <Plug>AngularGfJump :<C-U>exe <SID>FindFileBasedOnAngularServiceUnderCursor('open')<CR>$/;"	m
<Plug>AngularGfSplit	vim-angular/plugin/angular.vim	/^nnoremap <silent> <Plug>AngularGfSplit :<C-U>exe <SID>FindFileBasedOnAngularServiceUnderCursor('split')<CR>$/;"	m
<Plug>AngularGfTabjump	vim-angular/plugin/angular.vim	/^nnoremap <silent> <Plug>AngularGfTabjump :<C-U>exe <SID>FindFileBasedOnAngularServiceUnderCursor('tabedit')<CR>$/;"	m
<Plug>CSurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>CSurround  :<C-U>call <SID>changesurround(1)<CR>$/;"	m
<Plug>CapsLockDisable	vim-capslock/plugin/capslock.vim	/^cnoremap <silent> <Plug>CapsLockDisable <C-R>=<SID>disable('c')<CR>$/;"	m
<Plug>CapsLockDisable	vim-capslock/plugin/capslock.vim	/^inoremap <silent> <Plug>CapsLockDisable <C-R>=<SID>disable('i')<CR>$/;"	m
<Plug>CapsLockDisable	vim-capslock/plugin/capslock.vim	/^nnoremap <silent> <Plug>CapsLockDisable :<C-U>call <SID>disable('i')<CR>$/;"	m
<Plug>CapsLockEnable	vim-capslock/plugin/capslock.vim	/^cnoremap <silent> <Plug>CapsLockEnable  <C-R>=<SID>enable('c')<CR>$/;"	m
<Plug>CapsLockEnable	vim-capslock/plugin/capslock.vim	/^inoremap <silent> <Plug>CapsLockEnable  <C-R>=<SID>enable('i')<CR>$/;"	m
<Plug>CapsLockEnable	vim-capslock/plugin/capslock.vim	/^nnoremap <silent> <Plug>CapsLockEnable  :<C-U>call <SID>enable('i',1)<CR>$/;"	m
<Plug>CapsLockToggle	vim-capslock/plugin/capslock.vim	/^cnoremap <silent> <Plug>CapsLockToggle  <C-R>=<SID>toggle('c')<CR>$/;"	m
<Plug>CapsLockToggle	vim-capslock/plugin/capslock.vim	/^inoremap <silent> <Plug>CapsLockToggle  <C-R>=<SID>toggle('i')<CR>$/;"	m
<Plug>CapsLockToggle	vim-capslock/plugin/capslock.vim	/^nnoremap <silent> <Plug>CapsLockToggle  :<C-U>call <SID>toggle('i',1)<CR>$/;"	m
<Plug>Csurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>GitGutterNextHunk	git-gutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterNextHunk &diff ? ']c' : ":\\<C-U>execute v:count1 . 'GitGutterNextHunk'\\<CR>"$/;"	m
<Plug>GitGutterPrevHunk	git-gutter/plugin/gitgutter.vim	/^nnoremap <silent> <expr> <Plug>GitGutterPrevHunk &diff ? '[c' : ":\\<C-U>execute v:count1 . 'GitGutterPrevHunk'\\<CR>"$/;"	m
<Plug>GitGutterPreviewHunk	git-gutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterPreviewHunk :GitGutterPreviewHunk<CR>$/;"	m
<Plug>GitGutterRevertHunk	git-gutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterRevertHunk  :GitGutterRevertHunk<CR>$/;"	m
<Plug>GitGutterStageHunk	git-gutter/plugin/gitgutter.vim	/^nnoremap <silent> <Plug>GitGutterStageHunk   :GitGutterStageHunk<CR>$/;"	m
<Plug>ISurround	vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>IndentGuidesDisable	vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesDisable :IndentGuidesDisable<CR>$/;"	m
<Plug>IndentGuidesEnable	vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesEnable  :IndentGuidesEnable<CR>$/;"	m
<Plug>IndentGuidesToggle	vim-indent-guides/plugin/indent_guides.vim	/^nnoremap <unique><script> <Plug>IndentGuidesToggle  :IndentGuidesToggle<CR>$/;"	m
<Plug>Isurround	vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>SurroundRepeat	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>SurroundRepeat .$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^inoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>a$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^nnoremap <unique> <script> <Plug>ToggleBackground <SID>TogBG$/;"	m
<Plug>ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^vnoremap <unique> <script> <Plug>ToggleBackground <ESC><SID>TogBG<ESC>gv$/;"	m
<Plug>VSurround	vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<SID>:	vim-fugitive/plugin/fugitive.vim	/^nnoremap <SID>: :<C-U><C-R>=v:count ? v:count : ''<CR>$/;"	m
<SID>TogBG	vim-colors-solarized/autoload/togglebg.vim	/^noremap <SID>TogBG  :call <SID>TogBG()<CR>$/;"	m
AddHighlighting	nerdtree-git/nerdtree_plugin/git_status.vim	/^augroup AddHighlighting$/;"	a
AddHighlighting	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:AddHighlighting()$/;"	f
AddLine	vim-easymotion/t/easymotion_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	vim-easymotion/t/operator_pending_spec.vim	/^function! AddLine(str)$/;"	f
AddLine	vim-easymotion/t/smartsign_spec.vim	/^function! AddLine(str)$/;"	f
AddScopedTags	vim-tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AddToClasspath	syntastic/syntax_checkers/java/javac.vim	/^function! s:AddToClasspath(classpath, path) " {{{2$/;"	f
AdditionalColors	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:AdditionalColors()$/;"	f
Alternate	vim-angular/plugin/angular.vim	/^function! s:Alternate(cmd) abort$/;"	f
AngularRunSpec	vim-angular/plugin/angular.vim	/^function! s:AngularRunSpec() abort$/;"	f
AngularRunSpecBlock	vim-angular/plugin/angular.vim	/^function! s:AngularRunSpecBlock() abort$/;"	f
AngularRunSpecOrBlock	vim-angular/plugin/angular.vim	/^function! s:AngularRunSpecOrBlock(jasminekeyword) abort$/;"	f
Any	jasmine/src/core/asymmetric_equality/Any.js	/^  }$/;"	c
Any.asymmetricMatch	jasmine/src/core/asymmetric_equality/Any.js	/^  Any.prototype.asymmetricMatch = function(other) {$/;"	m
Any.jasmineToString	jasmine/src/core/asymmetric_equality/Any.js	/^  Any.prototype.jasmineToString = function() {$/;"	m
Anything	jasmine/src/core/asymmetric_equality/Anything.js	/^  function Anything() {}$/;"	c
Anything.asymmetricMatch	jasmine/src/core/asymmetric_equality/Anything.js	/^  Anything.prototype.asymmetricMatch = function(other) {$/;"	m
Anything.jasmineToString	jasmine/src/core/asymmetric_equality/Anything.js	/^  Anything.prototype.jasmineToString = function() {$/;"	m
Args	syntastic/syntax_checkers/html/tidy.vim	/^function! s:Args() " {{{2$/;"	f
ArrayContaining	jasmine/src/core/asymmetric_equality/ArrayContaining.js	/^  }$/;"	c
ArrayContaining.asymmetricMatch	jasmine/src/core/asymmetric_equality/ArrayContaining.js	/^  ArrayContaining.prototype.asymmetricMatch = function(other) {$/;"	m
ArrayContaining.jasmineToString	jasmine/src/core/asymmetric_equality/ArrayContaining.js	/^  ArrayContaining.prototype.jasmineToString = function () {$/;"	m
AutoUpdate	vim-tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname, force) abort$/;"	f
BaseTag.New	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.New(name) abort dict$/;"	f
BaseTag._getPrefix	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() abort dict$/;"	f
BaseTag._init	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) abort dict$/;"	f
BaseTag.closeFold	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() abort dict$/;"	f
BaseTag.getClosedParentTline	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() abort dict$/;"	f
BaseTag.getPrototype	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype(short) abort dict$/;"	f
BaseTag.initFoldState	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() abort dict$/;"	f
BaseTag.isFoldable	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() abort dict$/;"	f
BaseTag.isFolded	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() abort dict$/;"	f
BaseTag.isKindheader	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() abort dict$/;"	f
BaseTag.isNormalTag	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() abort dict$/;"	f
BaseTag.isPseudoTag	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() abort dict$/;"	f
BaseTag.openFold	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() abort dict$/;"	f
BaseTag.openParents	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() abort dict$/;"	f
BaseTag.setFolded	vim-tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) abort dict$/;"	f
Blame	vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Bookmark.AddBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot, nerdtree)$/;"	f
Bookmark.GetSelected	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.ToRoot(name, nerdtree)$/;"	f
Bookmark.Write	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.activate(nerdtree, ...)$/;"	f
Bookmark.compareTo	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.getNode(nerdtree, searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.open	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.open(nerdtree, ...)$/;"	f
Bookmark.openInNewTab	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.toRoot(nerdtree)$/;"	f
Bookmark.validate	nerdtree/lib/nerdtree/bookmark.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufEnterHook	syntastic/plugin/syntastic.vim	/^function! s:BufEnterHook() abort " {{{2$/;"	f
BufReadIndex	vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex() abort$/;"	f
BufReadIndexFile	vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile() abort$/;"	f
BufReadObject	vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject() abort$/;"	f
BufReadPostHook	syntastic/plugin/syntastic.vim	/^function! s:BufReadPostHook() abort " {{{2$/;"	f
BufWriteIndexFile	vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile() abort$/;"	f
BufWritePostHook	syntastic/plugin/syntastic.vim	/^function! s:BufWritePostHook() abort " {{{2$/;"	f
CONFIG_FILE	javascript-libraries-syntax.vim/Makefile	/^CONFIG_FILE=config.mk$/;"	m
CURL_OPT	javascript-libraries-syntax.vim/Makefile	/^CURL_OPT=$/;"	m
CacheErrors	syntastic/plugin/syntastic.vim	/^function! s:CacheErrors(checker_names) abort " {{{2$/;"	f
CallTracker.all	jasmine/src/core/CallTracker.js	/^    this.all = function() {$/;"	m
CallTracker.allArgs	jasmine/src/core/CallTracker.js	/^    this.allArgs = function() {$/;"	m
CallTracker.any	jasmine/src/core/CallTracker.js	/^    this.any = function() {$/;"	m
CallTracker.argsFor	jasmine/src/core/CallTracker.js	/^    this.argsFor = function(index) {$/;"	m
CallTracker.count	jasmine/src/core/CallTracker.js	/^    this.count = function() {$/;"	m
CallTracker.first	jasmine/src/core/CallTracker.js	/^    this.first = function() {$/;"	m
CallTracker.mostRecent	jasmine/src/core/CallTracker.js	/^    this.mostRecent = function() {$/;"	m
CallTracker.reset	jasmine/src/core/CallTracker.js	/^    this.reset = function() {$/;"	m
Cancell	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:Cancell() " {{{$/;"	f
CapsLockStatusline	vim-capslock/plugin/capslock.vim	/^function! CapsLockStatusline(...) abort$/;"	f
CheckExCtagsVersion	vim-tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output) abort$/;"	f
CheckFTCtags	vim-tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype) abort$/;"	f
CheckForExCtags	vim-tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags(silent) abort$/;"	f
CheckMouseClick	vim-tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick() abort$/;"	f
ClassSep	syntastic/syntax_checkers/java/javac.vim	/^function! s:ClassSep() " {{{2$/;"	f
ClearCache	syntastic/plugin/syntastic.vim	/^function! s:ClearCache() abort " {{{2$/;"	f
ClearMatches	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:ClearMatches()$/;"	f
Clock.Clock.return.slice	jasmine/src/core/Clock.js	/^      return Array.prototype.slice.call(argsObj, n);$/;"	m
Clock.argSlice	jasmine/src/core/Clock.js	/^    function argSlice(argsObj, n) {$/;"	f
Clock.clearInterval	jasmine/src/core/Clock.js	/^    function clearInterval(id) {$/;"	f
Clock.clearTimeout	jasmine/src/core/Clock.js	/^    function clearTimeout(id) {$/;"	f
Clock.legacyIE	jasmine/src/core/Clock.js	/^    function legacyIE() {$/;"	f
Clock.originalTimingFunctionsIntact	jasmine/src/core/Clock.js	/^    function originalTimingFunctionsIntact() {$/;"	f
Clock.replace	jasmine/src/core/Clock.js	/^    function replace(dest, source) {$/;"	f
Clock.return	jasmine/src/core/Clock.js	/^    function argSlice(argsObj, n) {$/;"	c
Clock.setInterval	jasmine/src/core/Clock.js	/^    function setInterval(fn, interval) {$/;"	f
Clock.setTimeout	jasmine/src/core/Clock.js	/^    function setTimeout(fn, delay) {$/;"	f
CloseFold	vim-tagbar/autoload/tagbar.vim	/^function! s:CloseFold() abort$/;"	f
CloseWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:CloseWindow() abort$/;"	f
Commit	vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args, ...) abort$/;"	f
CommitComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareByKind	vim-tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2) abort$/;"	f
CompareByLine	vim-tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2) abort$/;"	f
CompilerSet	vim-haml/compiler/haml.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompilerSet	vim-haml/compiler/sass.vim	/^  command -nargs=* CompilerSet setlocal <args>$/;"	c
CompleteCheckerName	syntastic/plugin/syntastic.vim	/^function! s:CompleteCheckerName(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
CompleteFiletypes	syntastic/plugin/syntastic.vim	/^function! s:CompleteFiletypes(argLead, cmdLine, cursorPos) abort " {{{2$/;"	f
ConsoleReporter.colored	jasmine/lib/console/console.js	/^    function colored(color, str) {$/;"	f
ConsoleReporter.colored	jasmine/src/console/ConsoleReporter.js	/^    function colored(color, str) {$/;"	f
ConsoleReporter.indent	jasmine/lib/console/console.js	/^    function indent(str, spaces) {$/;"	f
ConsoleReporter.indent	jasmine/src/console/ConsoleReporter.js	/^    function indent(str, spaces) {$/;"	f
ConsoleReporter.jasmineDone	jasmine/lib/console/console.js	/^    this.jasmineDone = function() {$/;"	m
ConsoleReporter.jasmineDone	jasmine/src/console/ConsoleReporter.js	/^    this.jasmineDone = function() {$/;"	m
ConsoleReporter.jasmineStarted	jasmine/lib/console/console.js	/^    this.jasmineStarted = function() {$/;"	m
ConsoleReporter.jasmineStarted	jasmine/src/console/ConsoleReporter.js	/^    this.jasmineStarted = function() {$/;"	m
ConsoleReporter.plural	jasmine/lib/console/console.js	/^    function plural(str, count) {$/;"	f
ConsoleReporter.plural	jasmine/src/console/ConsoleReporter.js	/^    function plural(str, count) {$/;"	f
ConsoleReporter.printNewline	jasmine/lib/console/console.js	/^    function printNewline() {$/;"	f
ConsoleReporter.printNewline	jasmine/src/console/ConsoleReporter.js	/^    function printNewline() {$/;"	f
ConsoleReporter.repeat	jasmine/lib/console/console.js	/^    function repeat(thing, times) {$/;"	f
ConsoleReporter.repeat	jasmine/src/console/ConsoleReporter.js	/^    function repeat(thing, times) {$/;"	f
ConsoleReporter.specDone	jasmine/lib/console/console.js	/^    this.specDone = function(result) {$/;"	m
ConsoleReporter.specDone	jasmine/src/console/ConsoleReporter.js	/^    this.specDone = function(result) {$/;"	m
ConsoleReporter.specFailureDetails	jasmine/lib/console/console.js	/^    function specFailureDetails(result) {$/;"	f
ConsoleReporter.specFailureDetails	jasmine/src/console/ConsoleReporter.js	/^    function specFailureDetails(result) {$/;"	f
ConsoleReporter.suiteDone	jasmine/lib/console/console.js	/^    this.suiteDone = function(result) {$/;"	m
ConsoleReporter.suiteDone	jasmine/src/console/ConsoleReporter.js	/^    this.suiteDone = function(result) {$/;"	m
ConsoleReporter.suiteFailureDetails	jasmine/lib/console/console.js	/^    function suiteFailureDetails(result) {$/;"	f
ConsoleReporter.suiteFailureDetails	jasmine/src/console/ConsoleReporter.js	/^    function suiteFailureDetails(result) {$/;"	f
Core	jasmine/lib/jasmine-core.rb	/^  module Core$/;"	m	class:Jasmine
Core	jasmine/lib/jasmine-core/__init__.py	/^from .core import Core/;"	i
Core	jasmine/lib/jasmine-core/core.py	/^class Core(object):$/;"	c
Core	jasmine/lib/jasmine-core/version.rb	/^  module Core$/;"	m	class:Jasmine
CorrectFocusOnStartup	vim-tagbar/autoload/tagbar.vim	/^function! s:CorrectFocusOnStartup() abort$/;"	f
CreateAutocommands	vim-tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands() abort$/;"	f
CreateCoordKeyDict	vim-easymotion/autoload/EasyMotion.vim	/^function! s:CreateCoordKeyDict(groups, ...)$/;"	f
CreatePseudoTag	vim-tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo) abort$/;"	f
Creator.BufNamePrefix	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.BufNamePrefix()$/;"	f
Creator.CreateMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateMirror()$/;"	f
Creator.CreateTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateTabTree(name)$/;"	f
Creator.CreateWindowTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.CreateWindowTree(dir)$/;"	f
Creator.New	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.New()$/;"	f
Creator.ToggleTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.ToggleTabTree(dir)$/;"	f
Creator._bindMappings	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._bindMappings()$/;"	f
Creator._broadcastInitEvent	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._broadcastInitEvent()$/;"	f
Creator._createNERDTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createNERDTree(path, type)$/;"	f
Creator._createTreeWin	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._createTreeWin()$/;"	f
Creator._isBufHidden	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._isBufHidden(nr)$/;"	f
Creator._nextBufferName	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferName()$/;"	f
Creator._nextBufferNumber	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._nextBufferNumber()$/;"	f
Creator._pathForString	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._pathForString(str)$/;"	f
Creator._removeTreeBufForTab	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._removeTreeBufForTab()$/;"	f
Creator._setCommonBufOptions	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setCommonBufOptions()$/;"	f
Creator._setupStatusline	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._setupStatusline()$/;"	f
Creator._tabpagevar	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._tabpagevar(tabnr, var)$/;"	f
Creator._uniq	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator._uniq(list)$/;"	f
Creator.createMirror	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createMirror()$/;"	f
Creator.createTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createTabTree(name)$/;"	f
Creator.createWindowTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.createWindowTree(dir)$/;"	f
Creator.toggleTabTree	nerdtree/lib/nerdtree/creator.vim	/^function! s:Creator.toggleTabTree(dir)$/;"	f
CtagsErrMsg	vim-tagbar/autoload/tagbar.vim	/^function! s:CtagsErrMsg(errmsg, infomsg, silent, ...) abort$/;"	f
CursorHoldUpdate	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:CursorHoldUpdate()$/;"	f
CursorPos	vim-easymotion/t/easymotion_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	vim-easymotion/t/operator_pending_spec.vim	/^function! CursorPos()$/;"	f
CursorPos	vim-easymotion/t/smartsign_spec.vim	/^function! CursorPos()$/;"	f
DEPEND_DIR	javascript-libraries-syntax.vim/Makefile	/^DEPEND_DIR=\/tmp\/vim-deps$/;"	m
DIRS	javascript-libraries-syntax.vim/Makefile	/^DIRS=`ls -1F | grep \/ | sed -e 's\/\\\/\/\/'`$/;"	m
Date	jasmine/lib/jasmine-core/json2.js	/^    if (typeof Date.prototype.toJSON !== 'function') {$/;"	c
Date.toJSON	jasmine/lib/jasmine-core/json2.js	/^        Date.prototype.toJSON = function () {$/;"	m
DelayedFunctionScheduler.deleteFromLookup	jasmine/src/core/DelayedFunctionScheduler.js	/^    function deleteFromLookup(key) {$/;"	f
DelayedFunctionScheduler.forEachFunction	jasmine/src/core/DelayedFunctionScheduler.js	/^    function forEachFunction(funcsToRun, callback) {$/;"	f
DelayedFunctionScheduler.indexOfFirstToPass	jasmine/src/core/DelayedFunctionScheduler.js	/^    function indexOfFirstToPass(array, testFn) {$/;"	f
DelayedFunctionScheduler.reschedule	jasmine/src/core/DelayedFunctionScheduler.js	/^    function reschedule(scheduledFn) {$/;"	f
DelayedFunctionScheduler.runScheduledFunctions	jasmine/src/core/DelayedFunctionScheduler.js	/^    function runScheduledFunctions(endTime) {$/;"	f
DetectFiletype	vim-tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr) abort$/;"	f
DetectJS	vim-javascript-syntax/ftdetect/javascript.vim	/^function! s:DetectJS()$/;"	f
Diff	vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(vert,keepfocus,...) abort$/;"	f
DirComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
Dispatch	vim-fugitive/plugin/fugitive.vim	/^function! s:Dispatch(bang, args)$/;"	f
DotPromptUser	vim-easymotion/autoload/EasyMotion.vim	/^function! s:DotPromptUser(groups) "{{{$/;"	f
Dump	git-gutter/test/helper.vim	/^function! Dump(text, filename)$/;"	f
DumpGitDiff	git-gutter/test/helper.vim	/^function! DumpGitDiff(filename)$/;"	f
DumpGitDiffStaged	git-gutter/test/helper.vim	/^function! DumpGitDiffStaged(filename)$/;"	f
DumpSigns	git-gutter/test/helper.vim	/^function! DumpSigns(filename)$/;"	f
EMCommandLineMap	vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineMap$/;"	c
EMCommandLineNoreMap	vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineNoreMap$/;"	c
EMCommandLineUnMap	vim-easymotion/plugin/EasyMotion.vim	/^\\   EMCommandLineUnMap$/;"	c
EasyMotion	vim-easymotion/autoload/EasyMotion.vim	/^function! s:EasyMotion(regexp, direction, visualmode, is_inclusive, ...) " {{{$/;"	f
EasyMotion#DotRepeat	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#DotRepeat() " {{{$/;"	f
EasyMotion#E	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#E(visualmode, direction) " {{{$/;"	f
EasyMotion#EK	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EK(visualmode, direction) " {{{$/;"	f
EasyMotion#EL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EL(visualmode, direction) " {{{$/;"	f
EasyMotion#EW	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#EW(visualmode, direction) " {{{$/;"	f
EasyMotion#Eol	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Eol(visualmode, direction) " {{{$/;"	f
EasyMotion#JK	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JK(visualmode, direction) " {{{$/;"	f
EasyMotion#JumpToAnywhere	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#JumpToAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#LineAnywhere	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#LineAnywhere(visualmode, direction) " {{{$/;"	f
EasyMotion#NextPrevious	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#NextPrevious(visualmode, direction) " {{{$/;"	f
EasyMotion#Repeat	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Repeat(visualmode) " {{{$/;"	f
EasyMotion#S	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#S(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#SL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#SL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#Search	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Search(visualmode, direction, respect_direction) " {{{$/;"	f
EasyMotion#Sol	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#Sol(visualmode, direction) " {{{$/;"	f
EasyMotion#T	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#T(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#TL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#TL(num_strokes, visualmode, direction) " {{{$/;"	f
EasyMotion#User	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#User(pattern, visualmode, direction, inclusive, ...) " {{{$/;"	f
EasyMotion#WB	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WB(visualmode, direction) " {{{$/;"	f
EasyMotion#WBK	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBK(visualmode, direction) " {{{$/;"	f
EasyMotion#WBL	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBL(visualmode, direction) " {{{$/;"	f
EasyMotion#WBW	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#WBW(visualmode, direction) " {{{$/;"	f
EasyMotion#activate	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#activate(is_visual) "{{{$/;"	f
EasyMotion#attach_active_autocmd	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#attach_active_autocmd() "{{{$/;"	f
EasyMotion#cmigemo#getMigemoPattern	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#getMigemoPattern(input) "{{{$/;"	f
EasyMotion#cmigemo#system	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! EasyMotion#cmigemo#system(...) "{{{$/;"	f
EasyMotion#command_line#GetInput	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#GetInput(num_strokes, prev, direction) "{{{$/;"	f
EasyMotion#command_line#cmap	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cmap(args)$/;"	f
EasyMotion#command_line#cnoremap	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cnoremap(args)$/;"	f
EasyMotion#command_line#cunmap	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! EasyMotion#command_line#cunmap(lhs)$/;"	f
EasyMotion#go	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#go(...) abort$/;"	f
EasyMotion#helper#VarReset	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#VarReset(var, ...) "{{{$/;"	f
EasyMotion#helper#get_char_by_coord	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#get_char_by_coord(coord) "{{{$/;"	f
EasyMotion#helper#include_multibyte_char	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#include_multibyte_char(str) "{{{$/;"	f
EasyMotion#helper#is_folded	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_folded(line) "{{{$/;"	f
EasyMotion#helper#is_greater_coords	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#is_greater_coords(coords1, coords2) "{{{$/;"	f
EasyMotion#helper#load_migemo_dict	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#load_migemo_dict() "{{{$/;"	f
EasyMotion#helper#mode	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#mode(flag) "{{{$/;"	f
EasyMotion#helper#should_case_sensitive	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#should_case_sensitive(input, is_search) "{{{$/;"	f
EasyMotion#helper#silent_feedkeys	vim-easymotion/autoload/EasyMotion/helper.vim	/^function! EasyMotion#helper#silent_feedkeys(expr, name, ...) "{{{$/;"	f
EasyMotion#helper#strchars	vim-easymotion/autoload/EasyMotion/helper.vim	/^    function! EasyMotion#helper#strchars(str)$/;"	f
EasyMotion#highlight#InitHL	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#InitHL(group, colors) " {{{$/;"	f
EasyMotion#highlight#add_color_group	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_color_group(new_groups) "{{{$/;"	f
EasyMotion#highlight#add_highlight	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_highlight(re, group) "{{{$/;"	f
EasyMotion#highlight#add_pos_highlight	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#add_pos_highlight(line_num, col_num, group) "{{{$/;"	f
EasyMotion#highlight#attach_autocmd	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#attach_autocmd() "{{{$/;"	f
EasyMotion#highlight#capture	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#capture(hlname) "{{{$/;"	f
EasyMotion#highlight#delete_highlight	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#delete_highlight(...) "{{{$/;"	f
EasyMotion#highlight#init	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#init() "{{{$/;"	f
EasyMotion#highlight#load	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#load()$/;"	f
EasyMotion#highlight#turn_off	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_off(hl) "{{{$/;"	f
EasyMotion#highlight#turn_on	vim-easymotion/autoload/EasyMotion/highlight.vim	/^function! EasyMotion#highlight#turn_on(hl) "{{{$/;"	f
EasyMotion#init	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#init()$/;"	f
EasyMotion#is_active	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#is_active() "{{{$/;"	f
EasyMotion#migemo#cp932#load_dict	vim-easymotion/autoload/EasyMotion/migemo/cp932.vim	/^function! EasyMotion#migemo#cp932#load_dict()$/;"	f
EasyMotion#migemo#eucjp#load_dict	vim-easymotion/autoload/EasyMotion/migemo/eucjp.vim	/^function! EasyMotion#migemo#eucjp#load_dict()$/;"	f
EasyMotion#migemo#utf8#load_dict	vim-easymotion/autoload/EasyMotion/migemo/utf8.vim	/^function! EasyMotion#migemo#utf8#load_dict()$/;"	f
EasyMotion#reset	vim-easymotion/autoload/EasyMotion.vim	/^function! EasyMotion#reset()$/;"	f
EasyMotion#sticky_table#jp	vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#jp = {$/;"	v
EasyMotion#sticky_table#us	vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let EasyMotion#sticky_table#us = {$/;"	v
EasyMotionInitHL	vim-easymotion/autoload/EasyMotion/highlight.vim	/^augroup EasyMotionInitHL$/;"	a
Edit	vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditClasspath	syntastic/syntax_checkers/java/javac.vim	/^function! s:EditClasspath() " {{{2$/;"	f
EditComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditConfig	syntastic/syntax_checkers/java/javac.vim	/^function! s:EditConfig() " {{{2$/;"	f
EditRunComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
Emmet	vim-emmet/plugin/emmet.vim	/^  command! -nargs=1 Emmet call emmet#expandAbbr(4, <q-args>)$/;"	c
EmmetInstall	vim-emmet/plugin/emmet.vim	/^command! -nargs=0 -bar EmmetInstall call <SID>install_plugin(get(g:, 'user_emmet_mode', 'a'), 1)$/;"	c
EmmetUnitTest	vim-emmet/unittest.vim	/^command! -nargs=* -complete=customlist,<SID>emmet_unittest_complete EmmetUnitTest call s:do_tests(<f-args>)$/;"	c
Env.Env.defaultResourcesForRunnable.resources.spies	jasmine/src/core/Env.js	/^      var resources = {spies: [], customEqualityTesters: [], customMatchers: {}};$/;"	p
Env.addCustomEqualityTester	jasmine/src/core/Env.js	/^    this.addCustomEqualityTester = function(tester) {$/;"	m
Env.addMatchers	jasmine/src/core/Env.js	/^    this.addMatchers = function(matchersToAdd) {$/;"	m
Env.currentRunnable	jasmine/src/core/Env.js	/^    var currentRunnable = function() {$/;"	m
Env.currentSuite	jasmine/src/core/Env.js	/^    var currentSuite = function() {$/;"	m
Env.defaultResourcesForRunnable	jasmine/src/core/Env.js	/^    var defaultResourcesForRunnable = function(id, parentRunnableId) {$/;"	m
Env.expectationFactory	jasmine/src/core/Env.js	/^    var expectationFactory = function(actual, spec) {$/;"	m
Env.expectationFactory.addExpectationResult	jasmine/src/core/Env.js	/^      function addExpectationResult(passed, result) {$/;"	f
Env.getNextSuiteId	jasmine/src/core/Env.js	/^    var getNextSuiteId = function() {$/;"	m
Env.specFilter	jasmine/src/core/Env.js	/^    this.specFilter = function() {$/;"	m
Errors	syntastic/plugin/syntastic.vim	/^command! -bar Errors              call SyntasticErrors()$/;"	c
EscapeCtagsCmd	vim-tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...) abort$/;"	f
Event.New	nerdtree/lib/nerdtree/event.vim	/^function! s:Event.New(nerdtree, subject, action, params) abort$/;"	f
ExceptionFormatter.stack	jasmine/src/core/ExceptionFormatter.js	/^    this.stack = function(error) {$/;"	m
ExecuteCtags	vim-tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd) abort$/;"	f
ExecuteCtagsOnFile	vim-tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, realfname, typeinfo) abort$/;"	f
ExecuteInTree	vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExitingOneLineScope	vim-javascript/indent/javascript.vim	/^function s:ExitingOneLineScope(lnum)$/;"	f
Expectation	jasmine/src/core/Expectation.js	/^  }$/;"	c
Expectation.Factory	jasmine/src/core/Expectation.js	/^  };$/;"	f
Expectation.addCoreMatchers	jasmine/src/core/Expectation.js	/^  };$/;"	f
Expectation.wrapCompare	jasmine/src/core/Expectation.js	/^  Expectation.prototype.wrapCompare = function(name, matcherFactory) {$/;"	m
ExpectationFailed	jasmine/src/core/errors.js	/^  function ExpectationFailed() {}$/;"	c
ExpectationFailed.constructor	jasmine/src/core/errors.js	/^  ExpectationFailed.prototype.constructor = ExpectationFailed;$/;"	m
F	vim-easymotion/t/easymotion_spec.vim	/^        map F <Plug>(easymotion-F)$/;"	m
F/	vim-easymotion/t/easymotion_spec.vim	/^        map F\/ <Plug>(easymotion-Fn)$/;"	m
FGForBG	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:FGForBG(color)$/;"	f
FH	vim-easymotion/t/easymotion_spec.vim	/^        normal FH$/;"	m
FILES	javascript-libraries-syntax.vim/Makefile	/^FILES=`ls -1 | grep '.vim$$'`$/;"	m
Faa	vim-easymotion/t/easymotion_spec.vim	/^        normal Faa$/;"	m
Fb	vim-easymotion/t/easymotion_spec.vim	/^        normal Fb$/;"	m
Fba	vim-easymotion/t/easymotion_spec.vim	/^        normal Fba$/;"	m
Fha	vim-easymotion/t/easymotion_spec.vim	/^        normal Fha$/;"	m
FileInfo.New	vim-tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype, typeinfo) abort dict$/;"	f
FileInfo.clearOldFolds	vim-tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() abort dict$/;"	f
FileInfo.closeKindFold	vim-tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) abort dict$/;"	f
FileInfo.openKindFold	vim-tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) abort dict$/;"	f
FileInfo.reset	vim-tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() abort dict$/;"	f
FileInfo.sortTags	vim-tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() abort dict$/;"	f
FileRead	vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead() abort$/;"	f
FileUpdate	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:FileUpdate(fname)$/;"	f
Find	vim-angular/plugin/angular.vim	/^function! s:Find(...) abort$/;"	f
FindFileBasedOnAngularServiceUnderCursor	vim-angular/plugin/angular.vim	/^function! s:FindFileBasedOnAngularServiceUnderCursor(cmd) abort$/;"	f
FinishCommit	vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit() abort$/;"	f
FirstLetterOf	vim-angular/plugin/angular.vim	/^function! s:FirstLetterOf(sourcestring) abort$/;"	f
Fixedgq	vim-javascript/indent/javascript.vim	/^function! Fixedgq(lnum, count)$/;"	f
FlagSet.New	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.New()$/;"	f
FlagSet._flagsForScope	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet._flagsForScope(scope)$/;"	f
FlagSet.addFlag	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.addFlag(scope, flag)$/;"	f
FlagSet.clearFlags	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.clearFlags(scope)$/;"	f
FlagSet.removeFlag	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.removeFlag(scope, flag)$/;"	f
FlagSet.renderToString	nerdtree/lib/nerdtree/flag_set.vim	/^function! s:FlagSet.renderToString()$/;"	f
ForwardToZshChecker	syntastic/syntax_checkers/sh/sh.vim	/^function! s:ForwardToZshChecker() " {{{2$/;"	f
Fpa	vim-easymotion/t/easymotion_spec.vim	/^        normal Fpa$/;"	m
Fpb	vim-easymotion/t/easymotion_spec.vim	/^        normal Fpb$/;"	m
Fpc	vim-easymotion/t/easymotion_spec.vim	/^        normal Fpc$/;"	m
GF	vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GFInit	vim-fugitive/plugin/fugitive.vim	/^function! s:GFInit(...) abort$/;"	f
GIT_SOURCES	javascript-libraries-syntax.vim/Makefile	/^GIT_SOURCES=$/;"	m
GenerateSrcPaths	vim-angular/plugin/angular.vim	/^function! s:GenerateSrcPaths(currentpath, appbasepath, testbasepath) abort$/;"	f
GenerateTestPaths	vim-angular/plugin/angular.vim	/^function! s:GenerateTestPaths(currentpath, appbasepath, testbasepath) abort$/;"	f
GetChar	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetChar() " {{{$/;"	f
GetDialect	syntastic/syntax_checkers/asm/gcc.vim	/^function! s:GetDialect() " {{{2$/;"	f
GetFileWinnr	vim-tagbar/autoload/tagbar.vim	/^function! s:GetFileWinnr(fileinfo) abort$/;"	f
GetHamlIndent	vim-haml/indent/haml.vim	/^function! GetHamlIndent()$/;"	f
GetJavascriptIndent	vim-javascript/indent/javascript.vim	/^function GetJavascriptIndent()$/;"	f
GetMSL	vim-javascript/indent/javascript.vim	/^function s:GetMSL(lnum, in_one_line_scope)$/;"	f
GetMakeprg	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetMakeprg() " {{{2$/;"	f
GetMavenClasspath	syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenClasspath() " {{{2$/;"	f
GetMavenProperties	syntastic/syntax_checkers/java/javac.vim	/^function! s:GetMavenProperties() " {{{2$/;"	f
GetNearbyTag	vim-tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag(all, forcecurrent, ...) abort$/;"	f
GetOcamlBuildMakeprg	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlBuildMakeprg() " {{{2$/;"	f
GetOcamlcMakeprg	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOcamlcMakeprg() " {{{2$/;"	f
GetOtherMakeprg	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! s:GetOtherMakeprg() " {{{2$/;"	f
GetProfile	syntastic/syntax_checkers/glsl/cgc.vim	/^function! s:GetProfile() " {{{2$/;"	f
GetSassIndent	vim-haml/indent/sass.vim	/^function! GetSassIndent()$/;"	f
GetShell	syntastic/syntax_checkers/sh/sh.vim	/^function! s:GetShell() " {{{2$/;"	f
GetSupportedFiletypes	vim-tagbar/autoload/tagbar.vim	/^function! s:GetSupportedFiletypes() abort$/;"	f
GetTagInfo	vim-tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo) abort$/;"	f
GetValaModules	syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaModules() " {{{2$/;"	f
GetValaVapiDirs	syntastic/syntax_checkers/vala/valac.vim	/^function! s:GetValaVapiDirs() " {{{2$/;"	f
GetVarIndent	vim-javascript/indent/javascript.vim	/^function s:GetVarIndent(lnum)$/;"	f
GetVisualStartPosition	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GetVisualStartPosition(c_pos, v_start, v_end, search_direction) "{{{$/;"	f
Git	vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang, args) abort$/;"	f
GitComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A, L, P) abort$/;"	f
GitGutter	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutter    call gitgutter#process_buffer(bufnr(''), 0)$/;"	c
GitGutterAll	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterAll call gitgutter#all()$/;"	c
GitGutterDebug	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterDebug call gitgutter#debug#debug()$/;"	c
GitGutterDisable	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterDisable call gitgutter#disable()$/;"	c
GitGutterEnable	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterEnable  call gitgutter#enable()$/;"	c
GitGutterGetHunkSummary	git-gutter/plugin/gitgutter.vim	/^function! GitGutterGetHunkSummary()$/;"	f
GitGutterGetHunks	git-gutter/plugin/gitgutter.vim	/^function! GitGutterGetHunks()$/;"	f
GitGutterLineHighlightsDisable	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsDisable call gitgutter#line_highlights_disable()$/;"	c
GitGutterLineHighlightsEnable	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsEnable  call gitgutter#line_highlights_enable()$/;"	c
GitGutterLineHighlightsToggle	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterLineHighlightsToggle  call gitgutter#line_highlights_toggle()$/;"	c
GitGutterNextHunk	git-gutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterNextHunk call gitgutter#hunk#next_hunk(<count>)$/;"	c
GitGutterPrevHunk	git-gutter/plugin/gitgutter.vim	/^command -bar -count=1 GitGutterPrevHunk call gitgutter#hunk#prev_hunk(<count>)$/;"	c
GitGutterPreviewHunk	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterPreviewHunk call gitgutter#preview_hunk()$/;"	c
GitGutterRevertHunk	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterRevertHunk  call gitgutter#revert_hunk()$/;"	c
GitGutterSignsDisable	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsDisable call gitgutter#signs_disable()$/;"	c
GitGutterSignsEnable	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsEnable  call gitgutter#signs_enable()$/;"	c
GitGutterSignsToggle	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterSignsToggle  call gitgutter#signs_toggle()$/;"	c
GitGutterStageHunk	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterStageHunk   call gitgutter#stage_hunk()$/;"	c
GitGutterToggle	git-gutter/plugin/gitgutter.vim	/^command -bar GitGutterToggle  call gitgutter#toggle()$/;"	c
GotoFileWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:GotoFileWindow(fileinfo, ...) abort$/;"	f
GotoNextFold	vim-tagbar/autoload/tagbar.vim	/^function! s:GotoNextFold() abort$/;"	f
GotoNextToplevelTag	vim-tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction) abort$/;"	f
GotoPrevFold	vim-tagbar/autoload/tagbar.vim	/^function! s:GotoPrevFold() abort$/;"	f
Grep	vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(cmd,bang,arg) abort$/;"	f
GroupingAlgorithmOriginal	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmOriginal(targets, keys)$/;"	f
GroupingAlgorithmSCTree	vim-easymotion/autoload/EasyMotion.vim	/^function! s:GroupingAlgorithmSCTree(targets, keys) "{{{$/;"	f
HexForHSLValue	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:HexForHSLValue(h,s,l)$/;"	f
HexForRGBValue	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:HexForRGBValue(r,g,b)$/;"	f
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	vim-javascript-syntax/syntax/javascript.vim	/^		command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim-javascript-syntax/syntax/javascript.vim	/^		command -nargs=+ HiLink hi link <args>$/;"	c
HiLink	vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	vim-javascript/syntax/javascript.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HighlightTag	vim-tagbar/autoload/tagbar.vim	/^function! s:HighlightTag(openfolds, ...) abort$/;"	f
HtmlReporter.clearPrior	jasmine/lib/jasmine-core/jasmine-html.js	/^    function clearPrior() {$/;"	f
HtmlReporter.clearPrior	jasmine/src/html/HtmlReporter.js	/^    function clearPrior() {$/;"	f
HtmlReporter.createDom	jasmine/lib/jasmine-core/jasmine-html.js	/^    function createDom(type, attrs, childrenVarArgs) {$/;"	f
HtmlReporter.createDom	jasmine/src/html/HtmlReporter.js	/^    function createDom(type, attrs, childrenVarArgs) {$/;"	f
HtmlReporter.defaultQueryString	jasmine/lib/jasmine-core/jasmine-html.js	/^    function defaultQueryString(key, value) {$/;"	f
HtmlReporter.defaultQueryString	jasmine/src/html/HtmlReporter.js	/^    function defaultQueryString(key, value) {$/;"	f
HtmlReporter.find	jasmine/lib/jasmine-core/jasmine-html.js	/^    function find(selector) {$/;"	f
HtmlReporter.find	jasmine/src/html/HtmlReporter.js	/^    function find(selector) {$/;"	f
HtmlReporter.initialize	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.initialize = function() {$/;"	m
HtmlReporter.initialize	jasmine/src/html/HtmlReporter.js	/^    this.initialize = function() {$/;"	m
HtmlReporter.jasmineDone	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.jasmineDone = function(doneResult) {$/;"	m
HtmlReporter.jasmineDone	jasmine/src/html/HtmlReporter.js	/^    this.jasmineDone = function(doneResult) {$/;"	m
HtmlReporter.jasmineDone.summaryList	jasmine/lib/jasmine-core/jasmine-html.js	/^      function summaryList(resultsTree, domParent) {$/;"	f
HtmlReporter.jasmineDone.summaryList	jasmine/src/html/HtmlReporter.js	/^      function summaryList(resultsTree, domParent) {$/;"	f
HtmlReporter.jasmineStarted	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.jasmineStarted = function(options) {$/;"	m
HtmlReporter.jasmineStarted	jasmine/src/html/HtmlReporter.js	/^    this.jasmineStarted = function(options) {$/;"	m
HtmlReporter.noExpectations	jasmine/lib/jasmine-core/jasmine-html.js	/^    function noExpectations(result) {$/;"	f
HtmlReporter.noExpectations	jasmine/src/html/HtmlReporter.js	/^    function noExpectations(result) {$/;"	f
HtmlReporter.pluralize	jasmine/lib/jasmine-core/jasmine-html.js	/^    function pluralize(singular, count) {$/;"	f
HtmlReporter.pluralize	jasmine/src/html/HtmlReporter.js	/^    function pluralize(singular, count) {$/;"	f
HtmlReporter.seedHref	jasmine/lib/jasmine-core/jasmine-html.js	/^    function seedHref(seed) {$/;"	f
HtmlReporter.seedHref	jasmine/src/html/HtmlReporter.js	/^    function seedHref(seed) {$/;"	f
HtmlReporter.setMenuModeTo	jasmine/lib/jasmine-core/jasmine-html.js	/^    function setMenuModeTo(mode) {$/;"	f
HtmlReporter.setMenuModeTo	jasmine/src/html/HtmlReporter.js	/^    function setMenuModeTo(mode) {$/;"	f
HtmlReporter.specDone	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.specDone = function(result) {$/;"	m
HtmlReporter.specDone	jasmine/src/html/HtmlReporter.js	/^    this.specDone = function(result) {$/;"	m
HtmlReporter.specHref	jasmine/lib/jasmine-core/jasmine-html.js	/^    function specHref(result) {$/;"	f
HtmlReporter.specHref	jasmine/src/html/HtmlReporter.js	/^    function specHref(result) {$/;"	f
HtmlReporter.specStarted	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.specStarted = function(result) {$/;"	m
HtmlReporter.specStarted	jasmine/src/html/HtmlReporter.js	/^    this.specStarted = function(result) {$/;"	m
HtmlReporter.suiteDone	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.suiteDone = function(result) {$/;"	m
HtmlReporter.suiteDone	jasmine/src/html/HtmlReporter.js	/^    this.suiteDone = function(result) {$/;"	m
HtmlReporter.suiteStarted	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.suiteStarted = function(result) {$/;"	m
HtmlReporter.suiteStarted	jasmine/src/html/HtmlReporter.js	/^    this.suiteStarted = function(result) {$/;"	m
IgnoreError	syntastic/syntax_checkers/html/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
IgnoreError	syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:IgnoreError(text) " {{{2$/;"	f
InMultiVarStatement	vim-javascript/indent/javascript.vim	/^function s:InMultiVarStatement(lnum)$/;"	f
InOneLineScope	vim-javascript/indent/javascript.vim	/^function s:InOneLineScope(lnum)$/;"	f
IndentGuidesDisable	vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesDisable call s:IndentGuidesDisable()$/;"	c
IndentGuidesDisable	vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesDisable()$/;"	f
IndentGuidesEnable	vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesEnable  call s:IndentGuidesEnable()$/;"	c
IndentGuidesEnable	vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesEnable()$/;"	f
IndentGuidesToggle	vim-indent-guides/plugin/indent_guides.vim	/^command! -bar IndentGuidesToggle  call s:IndentGuidesToggle()$/;"	c
IndentGuidesToggle	vim-indent-guides/plugin/indent_guides.vim	/^function! s:IndentGuidesToggle()$/;"	f
IndentWithContinuation	vim-javascript/indent/javascript.vim	/^function s:IndentWithContinuation(lnum, ind, width)$/;"	f
Init	vim-tagbar/autoload/tagbar.vim	/^function! s:Init(silent) abort$/;"	f
InitTypes	vim-tagbar/autoload/tagbar.vim	/^function! s:InitTypes() abort$/;"	f
InitVariable	vim-indent-guides/plugin/indent_guides.vim	/^function s:InitVariable(var, value)$/;"	f
InitWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose) abort$/;"	f
IsInMultilineComment	vim-javascript/indent/javascript.vim	/^function s:IsInMultilineComment(lnum, col)$/;"	f
IsInString	vim-javascript/indent/javascript.vim	/^function s:IsInString(lnum, col)$/;"	f
IsInStringOrComment	vim-javascript/indent/javascript.vim	/^function s:IsInStringOrComment(lnum, col)$/;"	f
IsLineComment	vim-javascript/indent/javascript.vim	/^function s:IsLineComment(lnum, col)$/;"	f
IsShellValid	syntastic/syntax_checkers/sh/sh.vim	/^function! s:IsShellValid() " {{{2$/;"	f
IsValidFile	vim-tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype) abort$/;"	f
JSON.parse.walk	jasmine/lib/jasmine-core/json2.js	/^            function walk(holder, key) {$/;"	f
JSON.stringify	jasmine/lib/jasmine-core/json2.js	/^        };$/;"	f
Jasmine	jasmine/lib/jasmine-core.rb	/^module Jasmine$/;"	m
Jasmine	jasmine/lib/jasmine-core/version.rb	/^module Jasmine$/;"	m
JavaScriptFold	vim-javascript-syntax/syntax/javascript.vim	/^function! JavaScriptFold()$/;"	f
JsApiReporter.executionTime	jasmine/src/core/JsApiReporter.js	/^    this.executionTime = function() {$/;"	m
JsApiReporter.jasmineDone	jasmine/src/core/JsApiReporter.js	/^    this.jasmineDone = function(runDetails) {$/;"	m
JsApiReporter.specDone	jasmine/src/core/JsApiReporter.js	/^    this.specDone = function(result) {$/;"	m
JsApiReporter.specResults	jasmine/src/core/JsApiReporter.js	/^    this.specResults = function(index, length) {$/;"	m
JsApiReporter.specs	jasmine/src/core/JsApiReporter.js	/^    this.specs = function() {$/;"	m
JsApiReporter.status	jasmine/src/core/JsApiReporter.js	/^    this.status = function() {$/;"	m
JsApiReporter.storeSuite	jasmine/src/core/JsApiReporter.js	/^    function storeSuite(result) {$/;"	f
JsApiReporter.suiteDone	jasmine/src/core/JsApiReporter.js	/^    this.suiteDone = function(result) {$/;"	m
JsApiReporter.suiteResults	jasmine/src/core/JsApiReporter.js	/^    this.suiteResults = function(index, length) {$/;"	m
JsApiReporter.suiteStarted	jasmine/src/core/JsApiReporter.js	/^    this.suiteStarted = function(result) {$/;"	m
JsApiReporter.suites	jasmine/src/core/JsApiReporter.js	/^    this.suites = function() {$/;"	m
JumpInit	vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit(...) abort$/;"	f
JumpToTag	vim-tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar) abort$/;"	f
KeyMap.Add	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Add(keymap)$/;"	f
KeyMap.All	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.FindFor	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.FindFor(key, scope)$/;"	f
KeyMap.Invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Invoke(key)$/;"	f
KeyMap.Remove	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.Remove(key, scope)$/;"	f
KeyMap.bind	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.bind()$/;"	f
KeyMap.invoke	nerdtree/lib/nerdtree/key_map.vim	/^function! s:KeyMap.invoke(...)$/;"	f
KindheaderTag.closeFold	vim-tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() abort dict$/;"	f
KindheaderTag.getPrototype	vim-tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype(short) abort dict$/;"	f
KindheaderTag.isFoldable	vim-tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() abort dict$/;"	f
KindheaderTag.isFolded	vim-tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() abort dict$/;"	f
KindheaderTag.isKindheader	vim-tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() abort dict$/;"	f
KindheaderTag.openFold	vim-tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() abort dict$/;"	f
KindheaderTag.toggleFold	vim-tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() abort dict$/;"	f
LineHasOpeningBrackets	vim-javascript/indent/javascript.vim	/^function s:LineHasOpeningBrackets(lnum)$/;"	f
LoadConfigFile	syntastic/syntax_checkers/java/javac.vim	/^function! s:LoadConfigFile() " {{{2$/;"	f
LoadUserTypeDefs	vim-tagbar/autoload/tagbar.vim	/^function! s:LoadUserTypeDefs(...) abort$/;"	f
Log	vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd, line1, line2, ...) abort$/;"	f
MKFILES	javascript-libraries-syntax.vim/Makefile	/^MKFILES=Makefile `ls -1 | grep '.mk$$'`$/;"	m
MapKeys	vim-tagbar/autoload/tagbar.vim	/^function! s:MapKeys() abort$/;"	f
Match	vim-javascript/indent/javascript.vim	/^function s:Match(lnum, regex)$/;"	f
MatchColorValue	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:MatchColorValue(color, part)$/;"	f
MavenOutputDirectory	syntastic/syntax_checkers/java/javac.vim	/^function! s:MavenOutputDirectory() " {{{2$/;"	f
MenuController.New	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	nerdtree/lib/nerdtree/menu_controller.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	nerdtree/lib/nerdtree/menu_item.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Merge	vim-fugitive/plugin/fugitive.vim	/^function! s:Merge(cmd, bang, args) abort$/;"	f
Message	vim-easymotion/autoload/EasyMotion.vim	/^function! s:Message(message) " {{{$/;"	f
MockDate.FakeDate	jasmine/src/core/MockDate.js	/^    function FakeDate() {$/;"	f
MockDate.FakeDate	jasmine/src/core/MockDate.js	/^    function createDateProperties() {$/;"	c
MockDate.MockDate.FakeDate	jasmine/src/core/MockDate.js	/^    function createDateProperties() {$/;"	c
MockDate.MockDate.MockDate.FakeDate	jasmine/src/core/MockDate.js	/^    function createDateProperties() {$/;"	f
MockDate.createDateProperties	jasmine/src/core/MockDate.js	/^    function createDateProperties() {$/;"	f
Modules	syntastic/syntax_checkers/yaml/yamlxs.vim	/^function s:Modules()$/;"	f
Move	vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination) abort$/;"	f
MoveComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P) abort$/;"	f
NAME	javascript-libraries-syntax.vim/Makefile	/^NAME=`basename \\`pwd\\``$/;"	m
NAME	javascript-libraries-syntax.vim/config.mk	/^NAME=javascript-libraries-syntax.vim$/;"	m
NERDTree	nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree.AddPathFilter	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.AddPathFilter(callback)$/;"	f
NERDTree.Close	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.Close()$/;"	f
NERDTree.CloseIfQuitOnOpen	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CloseIfQuitOnOpen()$/;"	f
NERDTree.CursorToBookmarkTable	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToBookmarkTable()$/;"	f
NERDTree.CursorToTreeWin	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.CursorToTreeWin()$/;"	f
NERDTree.ExistsForBuf	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForBuf()$/;"	f
NERDTree.ExistsForTab	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ExistsForTab()$/;"	f
NERDTree.ForCurrentBuf	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentBuf()$/;"	f
NERDTree.ForCurrentTab	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.ForCurrentTab()$/;"	f
NERDTree.GetWinNum	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.GetWinNum()$/;"	f
NERDTree.IsOpen	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.IsOpen()$/;"	f
NERDTree.MustBeOpen	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.MustBeOpen()$/;"	f
NERDTree.New	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.New(path, type)$/;"	f
NERDTree.PathFilters	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.PathFilters()$/;"	f
NERDTree.changeRoot	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.changeRoot(node)$/;"	f
NERDTree.getRoot	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.getRoot()$/;"	f
NERDTree.isTabTree	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isTabTree()$/;"	f
NERDTree.isWinTree	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.isWinTree()$/;"	f
NERDTree.previousBuf	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.previousBuf()$/;"	f
NERDTree.render	nerdtree/lib/nerdtree/nerdtree.vim	/^function! s:NERDTree.render()$/;"	f
NERDTreeAddKeyMap	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddPathFilter	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddPathFilter(callback)$/;"	f
NERDTreeAddSubmenu	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeCWD	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeCWD()$/;"	f
NERDTreeCacheDirtyDir	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeCacheDirtyDir(pathStr)$/;"	f
NERDTreeCopyNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFocus	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeFocus()$/;"	f
NERDTreeGetCWDGitStatus	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetCWDGitStatus()$/;"	f
NERDTreeGetFileGitStatusKey	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetFileGitStatusKey(us, them)$/;"	f
NERDTreeGetGitStatusPrefix	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGetGitStatusPrefix(path)$/;"	f
NERDTreeGetIndicator	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGetIndicator(statusKey)$/;"	f
NERDTreeGitStatusKeyMapping	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeGitStatusKeyMapping()$/;"	f
NERDTreeGitStatusRefresh	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! g:NERDTreeGitStatusRefresh()$/;"	f
NERDTreeGitStatusRefreshListener	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! NERDTreeGitStatusRefreshListener(event)$/;"	f
NERDTreeHijackNetrw	nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeListNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNode()$/;"	f
NERDTreeListNodeWin32	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeListNodeWin32()$/;"	f
NERDTreeMoveNode	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeTrimDoubleQuotes	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:NERDTreeTrimDoubleQuotes(pathStr)$/;"	f
NeoCompleteBufferMakeCache	vim-neocomplete/plugin/neocomplete/buffer.vim	/^      \\ NeoCompleteBufferMakeCache$/;"	c
NeoCompleteClean	vim-neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteClean$/;"	c
NeoCompleteDictionaryMakeCache	vim-neocomplete/plugin/neocomplete/dictionary.vim	/^      \\ NeoCompleteDictionaryMakeCache$/;"	c
NeoCompleteDisable	vim-neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteDisable$/;"	c
NeoCompleteEnable	vim-neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteEnable$/;"	c
NeoCompleteLock	vim-neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteLock$/;"	c
NeoCompleteSetFileType	vim-neocomplete/plugin/neocomplete.vim	/^command! -nargs=1 -bar -complete=filetype NeoCompleteSetFileType$/;"	c
NeoCompleteTagMakeCache	vim-neocomplete/plugin/neocomplete/tag.vim	/^      \\ NeoCompleteTagMakeCache$/;"	c
NeoCompleteToggle	vim-neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteToggle$/;"	c
NeoCompleteUnlock	vim-neocomplete/plugin/neocomplete.vim	/^command! -nargs=0 -bar NeoCompleteUnlock$/;"	c
NewTags	syntastic/syntax_checkers/html/tidy.vim	/^function! s:NewTags(name) " {{{2$/;"	f
NextNormalWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:NextNormalWindow() abort$/;"	f
NormalTag.getPrototype	vim-tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype(short) abort dict$/;"	f
NormalTag.isNormalTag	vim-tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() abort dict$/;"	f
NormalTag.str	vim-tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str(longsig, full) abort dict$/;"	f
NormalTag.strfmt	vim-tagbar/autoload/tagbar.vim	/^function! s:NormalTag.strfmt() abort dict$/;"	f
Notifier.AddListener	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.AddListener(event, funcname)$/;"	f
Notifier.GetListenersForEvent	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersForEvent(name)$/;"	f
Notifier.GetListenersMap	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.GetListenersMap()$/;"	f
Notifier.NotifyListeners	nerdtree/lib/nerdtree/notifier.vim	/^function! s:Notifier.NotifyListeners(event, path, nerdtree, params)$/;"	f
ObjectContaining	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^  }$/;"	c
ObjectContaining.asymmetricMatch	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^  ObjectContaining.prototype.asymmetricMatch = function(other) {$/;"	m
ObjectContaining.jasmineToString	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^  ObjectContaining.prototype.jasmineToString = function() {$/;"	m
OpenFold	vim-tagbar/autoload/tagbar.vim	/^function! s:OpenFold() abort$/;"	f
OpenParents	vim-tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...) abort$/;"	f
OpenWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags) abort$/;"	f
Opener.New	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.New(path, opts)$/;"	f
Opener._bufInWindows	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._bufInWindows(bnum)$/;"	f
Opener._checkToCloseTree	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._checkToCloseTree(newtab)$/;"	f
Opener._firstUsableWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._firstUsableWindow()$/;"	f
Opener._gotoTargetWin	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._gotoTargetWin()$/;"	f
Opener._isWindowUsable	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._isWindowUsable(winnumber)$/;"	f
Opener._newSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newSplit()$/;"	f
Opener._newVSplit	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._newVSplit()$/;"	f
Opener._openDirectory	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openDirectory(node)$/;"	f
Opener._openFile	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._openFile()$/;"	f
Opener._previousWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._previousWindow()$/;"	f
Opener._restoreCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._restoreCursorPos()$/;"	f
Opener._reuseWindow	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._reuseWindow()$/;"	f
Opener._saveCursorPos	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener._saveCursorPos()$/;"	f
Opener.open	nerdtree/lib/nerdtree/opener.vim	/^function! s:Opener.open(target)$/;"	f
OrderedDict	jasmine/lib/jasmine-core/core.py	/^    from collections import OrderedDict$/;"	i
OrderedDict	jasmine/lib/jasmine-core/core.py	/^    from ordereddict import OrderedDict$/;"	i
PWD	javascript-libraries-syntax.vim/Makefile	/^PWD=`pwd`$/;"	m
ParseTagline	vim-tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo) abort$/;"	f
Path.AbsolutePathFor	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.New(path)$/;"	f
Path.Resolve	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Resolve(path)$/;"	f
Path.Slash	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._escChars	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._escChars()$/;"	f
Path._ignorePatternMatches	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._ignorePatternMatches(pattern)$/;"	f
Path._str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	nerdtree/lib/nerdtree/path.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.cacheDisplayString() abort$/;"	f
Path.changeToDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.createParentDirectories	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.createParentDirectories(path)$/;"	f
Path.delete	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.displayString()$/;"	f
Path.edit	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.edit()$/;"	f
Path.equals	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortKey	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortKey()$/;"	f
Path.getSortOrderIndex	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.ignore(nerdtree)$/;"	f
Path.isAncestor	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isAncestor(path)$/;"	f
Path.isUnder	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.isUnixHiddenFile	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenFile()$/;"	f
Path.isUnixHiddenPath	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.isUnixHiddenPath()$/;"	f
Path.readInfoFromDisk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refresh(nerdtree)$/;"	f
Path.refreshFlags	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.refreshFlags(nerdtree)$/;"	f
Path.rename	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.strTrunk()$/;"	f
Path.tabnr	nerdtree/lib/nerdtree/path.vim	/^function! s:Path.tabnr()$/;"	f
Player	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Player.js	/^function Player() {$/;"	f
Player	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Player.js	/^}$/;"	c
Player	jasmine/lib/jasmine-core/example/src/Player.js	/^function Player() {$/;"	f
Player	jasmine/lib/jasmine-core/example/src/Player.js	/^}$/;"	c
Player.makeFavorite	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Player.js	/^Player.prototype.makeFavorite = function() {$/;"	m
Player.makeFavorite	jasmine/lib/jasmine-core/example/src/Player.js	/^Player.prototype.makeFavorite = function() {$/;"	m
Player.pause	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Player.js	/^Player.prototype.pause = function() {$/;"	m
Player.pause	jasmine/lib/jasmine-core/example/src/Player.js	/^Player.prototype.pause = function() {$/;"	m
Player.play	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Player.js	/^Player.prototype.play = function(song) {$/;"	m
Player.play	jasmine/lib/jasmine-core/example/src/Player.js	/^Player.prototype.play = function(song) {$/;"	m
Player.resume	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Player.js	/^Player.prototype.resume = function() {$/;"	m
Player.resume	jasmine/lib/jasmine-core/example/src/Player.js	/^Player.prototype.resume = function() {$/;"	m
PrettyPrinter	jasmine/src/core/PrettyPrinter.js	/^  }$/;"	c
PrettyPrinter.emitArray	jasmine/src/core/PrettyPrinter.js	/^  PrettyPrinter.prototype.emitArray = j$.unimplementedMethod_;$/;"	m
PrettyPrinter.emitObject	jasmine/src/core/PrettyPrinter.js	/^  PrettyPrinter.prototype.emitObject = j$.unimplementedMethod_;$/;"	m
PrettyPrinter.emitScalar	jasmine/src/core/PrettyPrinter.js	/^  PrettyPrinter.prototype.emitScalar = j$.unimplementedMethod_;$/;"	m
PrettyPrinter.emitString	jasmine/src/core/PrettyPrinter.js	/^  PrettyPrinter.prototype.emitString = j$.unimplementedMethod_;$/;"	m
PrettyPrinter.format	jasmine/src/core/PrettyPrinter.js	/^  PrettyPrinter.prototype.format = function(value) {$/;"	m
PrettyPrinter.iterateObject	jasmine/src/core/PrettyPrinter.js	/^  PrettyPrinter.prototype.iterateObject = function(obj, fn) {$/;"	m
PrevNonBlankNonString	vim-javascript/indent/javascript.vim	/^function s:PrevNonBlankNonString(lnum)$/;"	f
PreviewCSSColor	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:PreviewCSSColor(str)$/;"	f
PrintHelp	vim-tagbar/autoload/tagbar.vim	/^function! s:PrintHelp() abort$/;"	f
PrintKinds	vim-tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo) abort$/;"	f
PrintTag	vim-tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, is_first, fileinfo, typeinfo) abort$/;"	f
ProcessByLine	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:ProcessByLine(w)$/;"	f
ProcessFile	vim-tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype) abort$/;"	f
ProcessPseudoChildren	vim-tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo) abort$/;"	f
ProcessPseudoTag	vim-tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo) abort$/;"	f
Prompt	vim-easymotion/autoload/EasyMotion.vim	/^function! s:Prompt(message) " {{{$/;"	f
PromptUser	vim-easymotion/autoload/EasyMotion.vim	/^function! s:PromptUser(groups) "{{{$/;"	f
PseudoTag.isPseudoTag	vim-tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() abort dict$/;"	f
PseudoTag.strfmt	vim-tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.strfmt() abort dict$/;"	f
QueryString.fullStringWithNewParam	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.fullStringWithNewParam = function(key, value) {$/;"	m
QueryString.fullStringWithNewParam	jasmine/src/html/QueryString.js	/^    this.fullStringWithNewParam = function(key, value) {$/;"	m
QueryString.getParam	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.getParam = function(key) {$/;"	m
QueryString.getParam	jasmine/src/html/QueryString.js	/^    this.getParam = function(key) {$/;"	m
QueryString.queryStringToParamMap	jasmine/lib/jasmine-core/jasmine-html.js	/^    function queryStringToParamMap() {$/;"	f
QueryString.queryStringToParamMap	jasmine/src/html/QueryString.js	/^    function queryStringToParamMap() {$/;"	f
QueryString.toQueryString	jasmine/lib/jasmine-core/jasmine-html.js	/^    function toQueryString(paramMap) {$/;"	f
QueryString.toQueryString	jasmine/src/html/QueryString.js	/^    function toQueryString(paramMap) {$/;"	f
QueueRunner	jasmine/src/core/QueueRunner.js	/^  function QueueRunner(attrs) {$/;"	c
QueueRunner.execute	jasmine/src/core/QueueRunner.js	/^  QueueRunner.prototype.execute = function() {$/;"	m
QueueRunner.run	jasmine/src/core/QueueRunner.js	/^  QueueRunner.prototype.run = function(queueableFns, recursiveIndex) {$/;"	m
QuitIfOnlyWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow() abort$/;"	f
QuitPreHook	syntastic/plugin/syntastic.vim	/^function! s:QuitPreHook() abort " {{{2$/;"	f
README_FILES	javascript-libraries-syntax.vim/Makefile	/^README_FILES=`ls -1 | grep -i readme`$/;"	m
RECORD_FILE	javascript-libraries-syntax.vim/Makefile	/^RECORD_FILE=.record$/;"	m
RECORD_SCRIPT	javascript-libraries-syntax.vim/Makefile	/^RECORD_SCRIPT=.mkrecord$/;"	m
RehighlightBlame	vim-fugitive/plugin/fugitive.vim	/^function! s:RehighlightBlame() abort$/;"	f
RemoteComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:RemoteComplete(A, L, P) abort$/;"	f
Remove	vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force) abort$/;"	f
RemoveCarriageReturn	syntastic/syntax_checkers/java/javac.vim	/^function! s:RemoveCarriageReturn(line) " {{{2$/;"	f
RemoveTrailingComments	vim-javascript/indent/javascript.vim	/^function s:RemoveTrailingComments(content)$/;"	f
RenderContent	vim-tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...) abort$/;"	f
RenderKeepView	vim-tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...) abort$/;"	f
ReplaceCmd	vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReportDispatcher.dispatch	jasmine/src/core/ReportDispatcher.js	/^    function dispatch(method, args) {$/;"	f
RestoreColors	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:RestoreColors()$/;"	f
RestoreSession	vim-tagbar/autoload/tagbar.vim	/^function! s:RestoreSession() abort$/;"	f
RestoreValue	vim-easymotion/autoload/EasyMotion.vim	/^function! s:RestoreValue() "{{{$/;"	f
ResultsNode.last	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.last = function() {$/;"	m
ResultsNode.last	jasmine/src/html/ResultsNode.js	/^    this.last = function() {$/;"	m
RevisionComplete	vim-fugitive/plugin/fugitive.vim	/^function! s:RevisionComplete(A, L, P) abort$/;"	f
SHELL	javascript-libraries-syntax.vim/Makefile	/^SHELL=bash$/;"	m
SID	nerdtree-git/nerdtree_plugin/git_status.vim	/^function s:SID()$/;"	f
SID	nerdtree/autoload/nerdtree/ui_glue.vim	/^function s:SID()$/;"	f
SaveClasspath	syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveClasspath() " {{{2$/;"	f
SaveConfig	syntastic/syntax_checkers/java/javac.vim	/^function! s:SaveConfig() " {{{2$/;"	f
SaveValue	vim-easymotion/autoload/EasyMotion.vim	/^function! s:SaveValue() "{{{$/;"	f
SearchDict	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict() "{{{$/;"	f
SearchDict2	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:SearchDict2(name) "{{{$/;"	f
SearchUpForPattern	vim-angular/plugin/angular.vim	/^function! s:SearchUpForPattern(pattern) abort$/;"	f
SelectJavascript	vim-javascript/ftdetect/javascript.vim	/^fun! s:SelectJavascript()$/;"	f
SetCompilerType	syntastic/syntax_checkers/fortran/gfortran.vim	/^function! s:SetCompilerType(exe) " {{{2$/;"	f
SetFoldLevel	vim-tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level, force) abort$/;"	f
SetFoldLevelRecursive	vim-tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level) abort$/;"	f
SetLines	vim-easymotion/autoload/EasyMotion.vim	/^function! s:SetLines(lines, key) " {{{$/;"	f
SetOption	vim-colors-solarized/colors/solarized.vim	/^function! s:SetOption(name,default)$/;"	f
SetStatusLine	vim-tagbar/autoload/tagbar.vim	/^function! s:SetStatusLine(current)$/;"	f
Setup	git-gutter/test/helper.vim	/^function! Setup()$/;"	f
SetupListeners	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:SetupListeners()$/;"	f
ShowInPreviewWin	vim-tagbar/autoload/tagbar.vim	/^function! s:ShowInPreviewWin() abort$/;"	f
ShowPrototype	vim-tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype(short) abort$/;"	f
ShrinkIfExpanded	vim-tagbar/autoload/tagbar.vim	/^function! s:ShrinkIfExpanded() abort$/;"	f
SolarizedHiTrail	vim-colors-solarized/colors/solarized.vim	/^augroup SolarizedHiTrail$/;"	a
SolarizedHiTrail	vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedHiTrail()$/;"	f
SolarizedMenu	vim-colors-solarized/colors/solarized.vim	/^function! SolarizedMenu()$/;"	f
SolarizedOptions	vim-colors-solarized/colors/solarized.vim	/^    command SolarizedOptions :call s:SolarizedOptions()$/;"	c
SolarizedOptions	vim-colors-solarized/colors/solarized.vim	/^function! s:SolarizedOptions()$/;"	f
Song	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Song.js	/^function Song() {$/;"	f
Song	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Song.js	/^}$/;"	c
Song	jasmine/lib/jasmine-core/example/src/Song.js	/^function Song() {$/;"	f
Song	jasmine/lib/jasmine-core/example/src/Song.js	/^}$/;"	c
Song.persistFavoriteStatus	jasmine/lib/jasmine-core/example/node_example/lib/jasmine_examples/Song.js	/^Song.prototype.persistFavoriteStatus = function(value) {$/;"	m
Song.persistFavoriteStatus	jasmine/lib/jasmine-core/example/src/Song.js	/^Song.prototype.persistFavoriteStatus = function(value) {$/;"	m
SortTags	vim-tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod) abort$/;"	f
Spec	jasmine/src/core/Spec.js	/^  }$/;"	c
Spec.addExpectationResult	jasmine/src/core/Spec.js	/^  Spec.prototype.addExpectationResult = function(passed, data, isError) {$/;"	m
Spec.disable	jasmine/src/core/Spec.js	/^  Spec.prototype.disable = function() {$/;"	m
Spec.execute	jasmine/src/core/Spec.js	/^  Spec.prototype.execute = function(onComplete, enabled) {$/;"	m
Spec.expect	jasmine/src/core/Spec.js	/^  Spec.prototype.expect = function(actual) {$/;"	m
Spec.getFullName	jasmine/src/core/Spec.js	/^  Spec.prototype.getFullName = function() {$/;"	m
Spec.getResult	jasmine/src/core/Spec.js	/^  Spec.prototype.getResult = function() {$/;"	m
Spec.isExecutable	jasmine/src/core/Spec.js	/^  Spec.prototype.isExecutable = function() {$/;"	m
Spec.isPendingSpecException	jasmine/src/core/Spec.js	/^  Spec.pendingSpecExceptionMessage = '=> marked Pending';$/;"	f
Spec.onException	jasmine/src/core/Spec.js	/^  Spec.prototype.onException = function onException(e) {$/;"	m
Spec.pend	jasmine/src/core/Spec.js	/^  Spec.prototype.pend = function(message) {$/;"	m
Spec.status	jasmine/src/core/Spec.js	/^  Spec.prototype.status = function(enabled) {$/;"	m
SplitClasspath	syntastic/syntax_checkers/java/javac.vim	/^function! s:SplitClasspath(classpath) " {{{2$/;"	f
SpyRegistry.clearSpies	jasmine/src/core/SpyRegistry.js	/^    this.clearSpies = function() {$/;"	m
SpyRegistry.spyOn	jasmine/src/core/SpyRegistry.js	/^    this.spyOn = function(obj, methodName) {$/;"	m
SpyStrategy.callFake	jasmine/src/core/SpyStrategy.js	/^    this.callFake = function(fn) {$/;"	m
SpyStrategy.callThrough	jasmine/src/core/SpyStrategy.js	/^    this.callThrough = function() {$/;"	m
SpyStrategy.exec	jasmine/src/core/SpyStrategy.js	/^    this.exec = function() {$/;"	m
SpyStrategy.identity	jasmine/src/core/SpyStrategy.js	/^    this.identity = function() {$/;"	m
SpyStrategy.plan	jasmine/src/core/SpyStrategy.js	/^    this.returnValue = function(value) {$/;"	f
SpyStrategy.returnValue	jasmine/src/core/SpyStrategy.js	/^    this.returnValue = function(value) {$/;"	m
SpyStrategy.returnValues	jasmine/src/core/SpyStrategy.js	/^    this.returnValues = function() {$/;"	m
SpyStrategy.stub	jasmine/src/core/SpyStrategy.js	/^    this.stub = function(fn) {$/;"	m
SpyStrategy.throwError	jasmine/src/core/SpyStrategy.js	/^    this.throwError = function(something) {$/;"	m
StageDiff	vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StageNext	vim-fugitive/plugin/fugitive.vim	/^function! s:StageNext(count) abort$/;"	f
StagePatch	vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StagePrevious	vim-fugitive/plugin/fugitive.vim	/^function! s:StagePrevious(count) abort$/;"	f
StageReloadSeek	vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2) abort$/;"	f
StageToggle	vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StageUndo	vim-fugitive/plugin/fugitive.vim	/^function! s:StageUndo() abort$/;"	f
StartDebug	vim-tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename) abort$/;"	f
Status	vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopDebug	vim-tagbar/autoload/tagbar.vim	/^function! s:StopDebug() abort$/;"	f
String	jasmine/lib/jasmine-core/json2.js	/^        };$/;"	c
String.toJSON	jasmine/lib/jasmine-core/json2.js	/^        String.prototype.toJSON      =$/;"	m
StringMatching	jasmine/src/core/asymmetric_equality/StringMatching.js	/^  }$/;"	c
StringMatching.asymmetricMatch	jasmine/src/core/asymmetric_equality/StringMatching.js	/^  StringMatching.prototype.asymmetricMatch = function(other) {$/;"	m
StringMatching.jasmineToString	jasmine/src/core/asymmetric_equality/StringMatching.js	/^  StringMatching.prototype.jasmineToString = function() {$/;"	m
StringPrettyPrinter	jasmine/src/core/PrettyPrinter.js	/^  j$.util.inherit(StringPrettyPrinter, PrettyPrinter);$/;"	c
StringPrettyPrinter.append	jasmine/src/core/PrettyPrinter.js	/^  StringPrettyPrinter.prototype.append = function(value) {$/;"	m
StringPrettyPrinter.emitArray	jasmine/src/core/PrettyPrinter.js	/^  StringPrettyPrinter.prototype.emitArray = function(array) {$/;"	m
StringPrettyPrinter.emitObject	jasmine/src/core/PrettyPrinter.js	/^  StringPrettyPrinter.prototype.emitObject = function(obj) {$/;"	m
StringPrettyPrinter.emitScalar	jasmine/src/core/PrettyPrinter.js	/^  StringPrettyPrinter.prototype.emitScalar = function(value) {$/;"	m
StringPrettyPrinter.emitString	jasmine/src/core/PrettyPrinter.js	/^  StringPrettyPrinter.prototype.emitString = function(value) {$/;"	m
StringPrettyPrinter.formatProperty	jasmine/src/core/PrettyPrinter.js	/^  StringPrettyPrinter.prototype.formatProperty = function(obj, property, isGetter) {$/;"	m
SubStr	vim-angular/plugin/angular.vim	/^function! s:SubStr(originalstring, pattern, replacement) abort$/;"	f
Subclass	jasmine/src/core/util.js	/^    };$/;"	c
Suite	jasmine/src/core/Suite.js	/^  }$/;"	c
Suite.addChild	jasmine/src/core/Suite.js	/^  Suite.prototype.addChild = function(child) {$/;"	m
Suite.addExpectationResult	jasmine/src/core/Suite.js	/^  Suite.prototype.addExpectationResult = function () {$/;"	m
Suite.afterAll	jasmine/src/core/Suite.js	/^  Suite.prototype.afterAll = function(fn) {$/;"	m
Suite.afterEach	jasmine/src/core/Suite.js	/^  Suite.prototype.afterEach = function(fn) {$/;"	m
Suite.beforeAll	jasmine/src/core/Suite.js	/^  Suite.prototype.beforeAll = function(fn) {$/;"	m
Suite.beforeEach	jasmine/src/core/Suite.js	/^  Suite.prototype.beforeEach = function(fn) {$/;"	m
Suite.canBeReentered	jasmine/src/core/Suite.js	/^  Suite.prototype.canBeReentered = function() {$/;"	m
Suite.clonedSharedUserContext	jasmine/src/core/Suite.js	/^  Suite.prototype.clonedSharedUserContext = function() {$/;"	m
Suite.disable	jasmine/src/core/Suite.js	/^  Suite.prototype.disable = function() {$/;"	m
Suite.expect	jasmine/src/core/Suite.js	/^  Suite.prototype.expect = function(actual) {$/;"	m
Suite.getFullName	jasmine/src/core/Suite.js	/^  Suite.prototype.getFullName = function() {$/;"	m
Suite.getResult	jasmine/src/core/Suite.js	/^  Suite.prototype.getResult = function() {$/;"	m
Suite.isExecutable	jasmine/src/core/Suite.js	/^  Suite.prototype.isExecutable = function() {$/;"	m
Suite.onException	jasmine/src/core/Suite.js	/^  Suite.prototype.onException = function() {$/;"	m
Suite.pend	jasmine/src/core/Suite.js	/^  Suite.prototype.pend = function(message) {$/;"	m
Suite.sharedUserContext	jasmine/src/core/Suite.js	/^  Suite.prototype.sharedUserContext = function() {$/;"	m
Suite.status	jasmine/src/core/Suite.js	/^  Suite.prototype.status = function() {$/;"	m
Surrogate	jasmine/src/core/matchers/toThrowError.js	/^      var Surrogate = function() {};$/;"	c
SyntasticAutoloclistNotifier.AutoToggle	syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.AutoToggle(loclist) abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.New	syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.New() abort " {{{2$/;"	f
SyntasticAutoloclistNotifier.refresh	syntastic/plugin/syntastic/autoloclist.vim	/^function! g:SyntasticAutoloclistNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsExprNotifier	syntastic/plugin/syntastic/balloons.vim	/^function! SyntasticBalloonsExprNotifier() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.New	syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.New() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.enabled	syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.enabled() abort " {{{2$/;"	f
SyntasticBalloonsNotifier.refresh	syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticBalloonsNotifier.reset	syntastic/plugin/syntastic/balloons.vim	/^function! g:SyntasticBalloonsNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticCheck	syntastic/plugin/syntastic.vim	/^command! -bar -nargs=* -complete=custom,s:CompleteCheckerName SyntasticCheck call SyntasticCheck(<f-args>)$/;"	c
SyntasticCheck	syntastic/plugin/syntastic.vim	/^function! SyntasticCheck(...) abort " {{{2$/;"	f
SyntasticChecker.New	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.New(args) abort " {{{2$/;"	f
SyntasticChecker._getOpt	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._getOpt(opts, basename, name, default) abort " {{{2$/;"	f
SyntasticChecker._populateHighlightRegexes	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._populateHighlightRegexes(errors) abort " {{{2$/;"	f
SyntasticChecker._quietMessages	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker._quietMessages(errors) abort " {{{2$/;"	f
SyntasticChecker.getExec	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExec() abort " {{{2$/;"	f
SyntasticChecker.getExecEscaped	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getExecEscaped() abort " {{{2$/;"	f
SyntasticChecker.getFiletype	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getFiletype() abort " {{{2$/;"	f
SyntasticChecker.getLocList	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocList() abort " {{{2$/;"	f
SyntasticChecker.getLocListRaw	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getLocListRaw() abort " {{{2$/;"	f
SyntasticChecker.getName	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getName() abort " {{{2$/;"	f
SyntasticChecker.getVersion	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.getVersion(...) abort " {{{2$/;"	f
SyntasticChecker.isAvailable	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isAvailable() abort " {{{2$/;"	f
SyntasticChecker.isDisabled	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.isDisabled() abort " {{{2$/;"	f
SyntasticChecker.log	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.log(msg, ...) abort " {{{2$/;"	f
SyntasticChecker.makeprgBuild	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.makeprgBuild(opts) abort " {{{2$/;"	f
SyntasticChecker.setVersion	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setVersion(version) abort " {{{2$/;"	f
SyntasticChecker.setWantSort	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.setWantSort(val) abort " {{{2$/;"	f
SyntasticChecker.syncExec	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.syncExec() abort " {{{2$/;"	f
SyntasticChecker.wantSort	syntastic/plugin/syntastic/checker.vim	/^function! g:SyntasticChecker.wantSort() abort " {{{2$/;"	f
SyntasticCursorNotifier.New	syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.New() abort " {{{2$/;"	f
SyntasticCursorNotifier.enabled	syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.enabled() abort " {{{2$/;"	f
SyntasticCursorNotifier.refresh	syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticCursorNotifier.reset	syntastic/plugin/syntastic/cursor.vim	/^function! g:SyntasticCursorNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticErrors	syntastic/plugin/syntastic.vim	/^function! SyntasticErrors() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.New	syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.New() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._reset	syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._reset() abort " {{{2$/;"	f
SyntasticHighlightingNotifier._setup	syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier._setup() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.enabled	syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.enabled() abort " {{{2$/;"	f
SyntasticHighlightingNotifier.refresh	syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticHighlightingNotifier.reset	syntastic/plugin/syntastic/highlighting.vim	/^function! g:SyntasticHighlightingNotifier.reset(loclist) abort " {{{2$/;"	f
SyntasticInfo	syntastic/plugin/syntastic.vim	/^command! -bar -nargs=? -complete=custom,s:CompleteFiletypes   SyntasticInfo  call SyntasticInfo(<f-args>)$/;"	c
SyntasticInfo	syntastic/plugin/syntastic.vim	/^function! SyntasticInfo(...) abort " {{{2$/;"	f
SyntasticJavacEditClasspath	syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditClasspath runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditClasspath$/;"	c
SyntasticJavacEditClasspath	syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditClasspath call s:EditClasspath()$/;"	c
SyntasticJavacEditConfig	syntastic/plugin/syntastic.vim	/^command! SyntasticJavacEditConfig    runtime! syntax_checkers\/java\/*.vim | SyntasticJavacEditConfig$/;"	c
SyntasticJavacEditConfig	syntastic/syntax_checkers/java/javac.vim	/^command! SyntasticJavacEditConfig    call s:EditConfig()$/;"	c
SyntasticLoclist.New	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.New(rawLoclist) abort " {{{2$/;"	f
SyntasticLoclist.balloons	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.balloons() abort " {{{2$/;"	f
SyntasticLoclist.copyRaw	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.copyRaw() abort " {{{2$/;"	f
SyntasticLoclist.current	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.current() abort " {{{2$/;"	f
SyntasticLoclist.decorate	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.decorate(tag) abort " {{{2$/;"	f
SyntasticLoclist.deploy	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.deploy() abort " {{{2$/;"	f
SyntasticLoclist.destroy	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.destroy() abort " {{{2$/;"	f
SyntasticLoclist.errors	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.errors() abort " {{{2$/;"	f
SyntasticLoclist.extend	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.extend(other) abort " {{{2$/;"	f
SyntasticLoclist.filter	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.filter(filters) abort " {{{2$/;"	f
SyntasticLoclist.getBuffers	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getBuffers() abort " {{{2$/;"	f
SyntasticLoclist.getCursorColumns	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getCursorColumns() abort " {{{2$/;"	f
SyntasticLoclist.getFirstError	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getFirstError(...) abort " {{{2$/;"	f
SyntasticLoclist.getName	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getName() abort " {{{2$/;"	f
SyntasticLoclist.getOwner	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getOwner() abort " {{{2$/;"	f
SyntasticLoclist.getRaw	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getRaw() abort " {{{2$/;"	f
SyntasticLoclist.getStatuslineFlag	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.getStatuslineFlag() abort " {{{2$/;"	f
SyntasticLoclist.hasErrorsOrWarningsToDisplay	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.hasErrorsOrWarningsToDisplay() abort " {{{2$/;"	f
SyntasticLoclist.isEmpty	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isEmpty() abort " {{{2$/;"	f
SyntasticLoclist.isNewerThan	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.isNewerThan(stamp) abort " {{{2$/;"	f
SyntasticLoclist.messages	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.messages(buf) abort " {{{2$/;"	f
SyntasticLoclist.setName	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setName(name) abort " {{{2$/;"	f
SyntasticLoclist.setOwner	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setOwner(buffer) abort " {{{2$/;"	f
SyntasticLoclist.setloclist	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.setloclist() abort " {{{2$/;"	f
SyntasticLoclist.show	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.show() abort " {{{2$/;"	f
SyntasticLoclist.sort	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.sort() abort " {{{2$/;"	f
SyntasticLoclist.warnings	syntastic/plugin/syntastic/loclist.vim	/^function! g:SyntasticLoclist.warnings() abort " {{{2$/;"	f
SyntasticLoclistHide	syntastic/plugin/syntastic/loclist.vim	/^function! SyntasticLoclistHide() abort " {{{2$/;"	f
SyntasticMake	syntastic/plugin/syntastic.vim	/^function! SyntasticMake(options) abort " {{{2$/;"	f
SyntasticModeMap.Instance	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.Instance() abort " {{{2$/;"	f
SyntasticModeMap._isOneFiletypeActive	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._isOneFiletypeActive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap._noFiletypesArePassive	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap._noFiletypesArePassive(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.allowsAutoChecking	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.allowsAutoChecking(filetype) abort " {{{2$/;"	f
SyntasticModeMap.doAutoChecking	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.doAutoChecking() abort " {{{2$/;"	f
SyntasticModeMap.echoMode	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.echoMode() abort " {{{2$/;"	f
SyntasticModeMap.isPassive	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.isPassive() abort " {{{2$/;"	f
SyntasticModeMap.modeInfo	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.modeInfo(filetypes) abort " {{{2$/;"	f
SyntasticModeMap.synch	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.synch() abort " {{{2$/;"	f
SyntasticModeMap.toggleMode	syntastic/plugin/syntastic/modemap.vim	/^function! g:SyntasticModeMap.toggleMode() abort " {{{2$/;"	f
SyntasticNotifiers.Instance	syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.Instance() abort " {{{2$/;"	f
SyntasticNotifiers._initNotifiers	syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers._initNotifiers() abort " {{{2$/;"	f
SyntasticNotifiers.refresh	syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.refresh(loclist) abort " {{{2$/;"	f
SyntasticNotifiers.reset	syntastic/plugin/syntastic/notifiers.vim	/^function! g:SyntasticNotifiers.reset(loclist) abort " {{{2$/;"	f
SyntasticRefreshCursor	syntastic/plugin/syntastic/cursor.vim	/^function! SyntasticRefreshCursor() abort " {{{2$/;"	f
SyntasticRegistry.CreateAndRegisterChecker	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.CreateAndRegisterChecker(args) abort " {{{2$/;"	f
SyntasticRegistry.Instance	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.Instance() abort " {{{2$/;"	f
SyntasticRegistry._checkDeprecation	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._checkDeprecation(filetype) abort " {{{2$/;"	f
SyntasticRegistry._filterCheckersByName	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._filterCheckersByName(checkers_map, list) abort " {{{2$/;"	f
SyntasticRegistry._loadCheckersFor	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._loadCheckersFor(filetype) abort " {{{2$/;"	f
SyntasticRegistry._registerChecker	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry._registerChecker(checker) abort " {{{2$/;"	f
SyntasticRegistry.echoInfoFor	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.echoInfoFor(ftalias_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckers	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckers(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersAvailable	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersAvailable(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getCheckersDisabled	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getCheckersDisabled(ftalias, hints_list) abort " {{{2$/;"	f
SyntasticRegistry.getKnownFiletypes	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getKnownFiletypes() abort " {{{2$/;"	f
SyntasticRegistry.getNamesOfAvailableCheckers	syntastic/plugin/syntastic/registry.vim	/^function! g:SyntasticRegistry.getNamesOfAvailableCheckers(ftalias) abort " {{{2$/;"	f
SyntasticReset	syntastic/plugin/syntastic.vim	/^command! -bar SyntasticReset      call SyntasticReset()$/;"	c
SyntasticReset	syntastic/plugin/syntastic.vim	/^function! SyntasticReset() abort " {{{2$/;"	f
SyntasticSetLoclist	syntastic/plugin/syntastic.vim	/^command! -bar SyntasticSetLoclist call SyntasticSetLoclist()$/;"	c
SyntasticSetLoclist	syntastic/plugin/syntastic.vim	/^function! SyntasticSetLoclist() abort " {{{2$/;"	f
SyntasticSignsNotifier.New	syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.New() abort " {{{2$/;"	f
SyntasticSignsNotifier._bufSignIds	syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._bufSignIds() abort " {{{2$/;"	f
SyntasticSignsNotifier._removeSigns	syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._removeSigns(ids) abort " {{{2$/;"	f
SyntasticSignsNotifier._setup	syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._setup() abort " {{{2$/;"	f
SyntasticSignsNotifier._signErrors	syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier._signErrors(loclist) abort " {{{2$/;"	f
SyntasticSignsNotifier.enabled	syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.enabled() abort " {{{2$/;"	f
SyntasticSignsNotifier.refresh	syntastic/plugin/syntastic/signs.vim	/^function! g:SyntasticSignsNotifier.refresh(loclist) abort " {{{2$/;"	f
SyntasticStatuslineFlag	syntastic/plugin/syntastic.vim	/^function! SyntasticStatuslineFlag() abort " {{{2$/;"	f
SyntasticToggleMode	syntastic/plugin/syntastic.vim	/^command! -bar SyntasticToggleMode call SyntasticToggleMode()$/;"	c
SyntasticToggleMode	syntastic/plugin/syntastic.vim	/^function! SyntasticToggleMode() abort " {{{2$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex	syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_actionscript_mxmlc_GetLocList	syntastic/syntax_checkers/actionscript/mxmlc.vim	/^function! SyntaxCheckers_actionscript_mxmlc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_GetLocList	syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_ada_gcc_IsAvailable	syntastic/syntax_checkers/ada/gcc.vim	/^function! SyntaxCheckers_ada_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_GetLocList	syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_GetLocList() dict$/;"	f
SyntaxCheckers_ansible_ansible_lint_IsAvailable	syntastic/syntax_checkers/ansible/ansible_lint.vim	/^function! SyntaxCheckers_ansible_ansible_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_apiblueprint_drafter_GetLocList	syntastic/syntax_checkers/apiblueprint/drafter.vim	/^function! SyntaxCheckers_apiblueprint_drafter_GetLocList() dict$/;"	f
SyntaxCheckers_applescript_osacompile_GetLocList	syntastic/syntax_checkers/applescript/osacompile.vim	/^function! SyntaxCheckers_applescript_osacompile_GetLocList() dict$/;"	f
SyntaxCheckers_asciidoc_asciidoc_GetLocList	syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^function! SyntaxCheckers_asciidoc_asciidoc_GetLocList() dict$/;"	f
SyntaxCheckers_asm_gcc_GetLocList	syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_asm_gcc_IsAvailable	syntastic/syntax_checkers/asm/gcc.vim	/^function! SyntaxCheckers_asm_gcc_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_bemhtml_bemhtmllint_GetLocList	syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^function SyntaxCheckers_bemhtml_bemhtmllint_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_GetHighlightRegex	syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_bro_bro_GetLocList	syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_GetLocList() dict$/;"	f
SyntaxCheckers_bro_bro_IsAvailable	syntastic/syntax_checkers/bro/bro.vim	/^function! SyntaxCheckers_bro_bro_IsAvailable() dict$/;"	f
SyntaxCheckers_c_avrgcc_GetLocList	syntastic/syntax_checkers/c/avrgcc.vim	/^function! SyntaxCheckers_c_avrgcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_GetLocList	syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_GetLocList() dict$/;"	f
SyntaxCheckers_c_checkpatch_IsAvailable	syntastic/syntax_checkers/c/checkpatch.vim	/^function! SyntaxCheckers_c_checkpatch_IsAvailable() dict$/;"	f
SyntaxCheckers_c_clang_check_GetLocList	syntastic/syntax_checkers/c/clang_check.vim	/^function! SyntaxCheckers_c_clang_check_GetLocList() dict$/;"	f
SyntaxCheckers_c_clang_tidy_GetLocList	syntastic/syntax_checkers/c/clang_tidy.vim	/^function! SyntaxCheckers_c_clang_tidy_GetLocList() dict$/;"	f
SyntaxCheckers_c_cppcheck_GetLocList	syntastic/syntax_checkers/c/cppcheck.vim	/^function! SyntaxCheckers_c_cppcheck_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_GetLocList	syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_c_gcc_IsAvailable	syntastic/syntax_checkers/c/gcc.vim	/^function! SyntaxCheckers_c_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_c_make_GetLocList	syntastic/syntax_checkers/c/make.vim	/^function! SyntaxCheckers_c_make_GetLocList() dict$/;"	f
SyntaxCheckers_c_oclint_GetLocList	syntastic/syntax_checkers/c/oclint.vim	/^function! SyntaxCheckers_c_oclint_GetLocList() dict$/;"	f
SyntaxCheckers_c_pc_lint_GetLocList	syntastic/syntax_checkers/c/pc_lint.vim	/^function! SyntaxCheckers_c_pc_lint_GetLocList() dict$/;"	f
SyntaxCheckers_c_sparse_GetLocList	syntastic/syntax_checkers/c/sparse.vim	/^function! SyntaxCheckers_c_sparse_GetLocList() dict$/;"	f
SyntaxCheckers_c_splint_GetLocList	syntastic/syntax_checkers/c/splint.vim	/^function! SyntaxCheckers_c_splint_GetLocList() dict$/;"	f
SyntaxCheckers_cabal_cabal_GetHighlightRegex	syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_cabal_cabal_GetLocList	syntastic/syntax_checkers/cabal/cabal.vim	/^function! SyntaxCheckers_cabal_cabal_GetLocList() dict$/;"	f
SyntaxCheckers_chef_foodcritic_GetLocList	syntastic/syntax_checkers/chef/foodcritic.vim	/^function! SyntaxCheckers_chef_foodcritic_GetLocList() dict$/;"	f
SyntaxCheckers_co_coco_GetLocList	syntastic/syntax_checkers/co/coco.vim	/^function! SyntaxCheckers_co_coco_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_GetLocList	syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_GetLocList() dict$/;"	f
SyntaxCheckers_cobol_cobc_IsAvailable	syntastic/syntax_checkers/cobol/cobc.vim	/^function! SyntaxCheckers_cobol_cobc_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffee_GetLocList	syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_GetLocList() dict$/;"	f
SyntaxCheckers_coffee_coffee_IsAvailable	syntastic/syntax_checkers/coffee/coffee.vim	/^function! SyntaxCheckers_coffee_coffee_IsAvailable() dict$/;"	f
SyntaxCheckers_coffee_coffeelint_GetLocList	syntastic/syntax_checkers/coffee/coffeelint.vim	/^function! SyntaxCheckers_coffee_coffeelint_GetLocList() dict$/;"	f
SyntaxCheckers_coq_coqtop_GetLocList	syntastic/syntax_checkers/coq/coqtop.vim	/^function! SyntaxCheckers_coq_coqtop_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_cpplint_GetLocList	syntastic/syntax_checkers/cpp/cpplint.vim	/^function! SyntaxCheckers_cpp_cpplint_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_GetLocList	syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_cpp_gcc_IsAvailable	syntastic/syntax_checkers/cpp/gcc.vim	/^function! SyntaxCheckers_cpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_cpp_verapp_GetLocList	syntastic/syntax_checkers/cpp/verapp.vim	/^function! SyntaxCheckers_cpp_verapp_GetLocList() dict$/;"	f
SyntaxCheckers_cs_mcs_GetLocList	syntastic/syntax_checkers/cs/mcs.vim	/^function! SyntaxCheckers_cs_mcs_GetLocList() dict$/;"	f
SyntaxCheckers_css_csslint_GetLocList	syntastic/syntax_checkers/css/csslint.vim	/^function! SyntaxCheckers_css_csslint_GetLocList() dict$/;"	f
SyntaxCheckers_css_prettycss_GetHighlightRegex	syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_css_prettycss_GetLocList	syntastic/syntax_checkers/css/prettycss.vim	/^function! SyntaxCheckers_css_prettycss_GetLocList() dict$/;"	f
SyntaxCheckers_css_stylelint_GetLocList	syntastic/syntax_checkers/css/stylelint.vim	/^function! SyntaxCheckers_css_stylelint_GetLocList() dict$/;"	f
SyntaxCheckers_cucumber_cucumber_GetLocList	syntastic/syntax_checkers/cucumber/cucumber.vim	/^function! SyntaxCheckers_cucumber_cucumber_GetLocList() dict$/;"	f
SyntaxCheckers_cuda_nvcc_GetLocList	syntastic/syntax_checkers/cuda/nvcc.vim	/^function! SyntaxCheckers_cuda_nvcc_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_GetLocList	syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_GetLocList() dict$/;"	f
SyntaxCheckers_d_dmd_IsAvailable	syntastic/syntax_checkers/d/dmd.vim	/^function! SyntaxCheckers_d_dmd_IsAvailable() dict$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex	syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetHighlightRegex(error)$/;"	f
SyntaxCheckers_dart_dartanalyzer_GetLocList	syntastic/syntax_checkers/dart/dartanalyzer.vim	/^function! SyntaxCheckers_dart_dartanalyzer_GetLocList() dict$/;"	f
SyntaxCheckers_docbk_igor_GetLocList	syntastic/syntax_checkers/docbk/igor.vim	/^function! SyntaxCheckers_docbk_igor_GetLocList() dict$/;"	f
SyntaxCheckers_dustjs_swiffer_GetLocList	syntastic/syntax_checkers/dustjs/swiffer.vim	/^function! SyntaxCheckers_dustjs_swiffer_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_GetLocList	syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_GetLocList() dict$/;"	f
SyntaxCheckers_elixir_elixir_IsAvailable	syntastic/syntax_checkers/elixir/elixir.vim	/^function! SyntaxCheckers_elixir_elixir_IsAvailable() dict$/;"	f
SyntaxCheckers_erlang_escript_GetLocList	syntastic/syntax_checkers/erlang/escript.vim	/^function! SyntaxCheckers_erlang_escript_GetLocList() dict$/;"	f
SyntaxCheckers_erlang_syntaxerl_GetLocList	syntastic/syntax_checkers/erlang/syntaxerl.vim	/^function! SyntaxCheckers_erlang_syntaxerl_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_GetLocList	syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_GetLocList() dict$/;"	f
SyntaxCheckers_eruby_ruby_IsAvailable	syntastic/syntax_checkers/eruby/ruby.vim	/^function! SyntaxCheckers_eruby_ruby_IsAvailable() dict$/;"	f
SyntaxCheckers_fortran_gfortran_GetLocList	syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_fortran_gfortran_IsAvailable	syntastic/syntax_checkers/fortran/gfortran.vim	/^function! SyntaxCheckers_fortran_gfortran_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_glsl_cgc_GetLocList	syntastic/syntax_checkers/glsl/cgc.vim	/^function! SyntaxCheckers_glsl_cgc_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_go_go_GetLocList	syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_GetLocList() dict$/;"	f
SyntaxCheckers_go_go_IsAvailable	syntastic/syntax_checkers/go/go.vim	/^function! SyntaxCheckers_go_go_IsAvailable() dict$/;"	f
SyntaxCheckers_go_gofmt_GetLocList	syntastic/syntax_checkers/go/gofmt.vim	/^function! SyntaxCheckers_go_gofmt_GetLocList() dict$/;"	f
SyntaxCheckers_go_golint_GetLocList	syntastic/syntax_checkers/go/golint.vim	/^function! SyntaxCheckers_go_golint_GetLocList() dict$/;"	f
SyntaxCheckers_go_gometalinter_GetLocList	syntastic/syntax_checkers/go/gometalinter.vim	/^function! SyntaxCheckers_go_gometalinter_GetLocList() dict$/;"	f
SyntaxCheckers_go_gotype_GetLocList	syntastic/syntax_checkers/go/gotype.vim	/^function! SyntaxCheckers_go_gotype_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_GetLocList	syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_GetLocList() dict$/;"	f
SyntaxCheckers_go_govet_IsAvailable	syntastic/syntax_checkers/go/govet.vim	/^function! SyntaxCheckers_go_govet_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_GetLocList	syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_GetLocList() dict$/;"	f
SyntaxCheckers_haml_haml_IsAvailable	syntastic/syntax_checkers/haml/haml.vim	/^function! SyntaxCheckers_haml_haml_IsAvailable() dict$/;"	f
SyntaxCheckers_haml_haml_lint_GetLocList	syntastic/syntax_checkers/haml/haml_lint.vim	/^function! SyntaxCheckers_haml_haml_lint_GetLocList() dict$/;"	f
SyntaxCheckers_handlebars_handlebars_GetLocList	syntastic/syntax_checkers/handlebars/handlebars.vim	/^function! SyntaxCheckers_handlebars_handlebars_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_GetLocList	syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_ghc_mod_IsAvailable	syntastic/syntax_checkers/haskell/ghc-mod.vim	/^function! SyntaxCheckers_haskell_ghc_mod_IsAvailable() dict$/;"	f
SyntaxCheckers_haskell_hdevtools_GetLocList	syntastic/syntax_checkers/haskell/hdevtools.vim	/^function! SyntaxCheckers_haskell_hdevtools_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_hlint_GetLocList	syntastic/syntax_checkers/haskell/hlint.vim	/^function! SyntaxCheckers_haskell_hlint_GetLocList() dict$/;"	f
SyntaxCheckers_haskell_scan_GetLocList	syntastic/syntax_checkers/haskell/scan.vim	/^function! SyntaxCheckers_haskell_scan_GetLocList() dict$/;"	f
SyntaxCheckers_haxe_haxe_GetLocList	syntastic/syntax_checkers/haxe/haxe.vim	/^function! SyntaxCheckers_haxe_haxe_GetLocList() dict$/;"	f
SyntaxCheckers_hss_hss_GetLocList	syntastic/syntax_checkers/hss/hss.vim	/^function! SyntaxCheckers_hss_hss_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_GetLocList	syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_html_jshint_IsAvailable	syntastic/syntax_checkers/html/jshint.vim	/^function! SyntaxCheckers_html_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_html_tidy_GetLocList	syntastic/syntax_checkers/html/tidy.vim	/^function! SyntaxCheckers_html_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_html_validator_GetLocList	syntastic/syntax_checkers/html/validator.vim	/^function! SyntaxCheckers_html_validator_GetLocList() dict$/;"	f
SyntaxCheckers_html_w3_GetLocList	syntastic/syntax_checkers/html/w3.vim	/^function! SyntaxCheckers_html_w3_GetLocList() dict$/;"	f
SyntaxCheckers_jade_jade_lint_GetLocList	syntastic/syntax_checkers/jade/jade_lint.vim	/^function! SyntaxCheckers_jade_jade_lint_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_GetLocList	syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_GetLocList() dict$/;"	f
SyntaxCheckers_java_checkstyle_IsAvailable	syntastic/syntax_checkers/java/checkstyle.vim	/^function! SyntaxCheckers_java_checkstyle_IsAvailable() dict$/;"	f
SyntaxCheckers_java_javac_GetLocList	syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_java_javac_IsAvailable	syntastic/syntax_checkers/java/javac.vim	/^function! SyntaxCheckers_java_javac_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_javascript_closurecompiler_GetLocList	syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_closurecompiler_IsAvailable	syntastic/syntax_checkers/javascript/closurecompiler.vim	/^function! SyntaxCheckers_javascript_closurecompiler_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_eslint_GetLocList	syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_eslint_IsAvailable	syntastic/syntax_checkers/javascript/eslint.vim	/^function! SyntaxCheckers_javascript_eslint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_flow_GetLocList	syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_flow_IsAvailable	syntastic/syntax_checkers/javascript/flow.vim	/^function! SyntaxCheckers_javascript_flow_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_gjslint_GetLocList	syntastic/syntax_checkers/javascript/gjslint.vim	/^function! SyntaxCheckers_javascript_gjslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jscs_GetLocList	syntastic/syntax_checkers/javascript/jscs.vim	/^function! SyntaxCheckers_javascript_jscs_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_GetLocList	syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jshint_IsAvailable	syntastic/syntax_checkers/javascript/jshint.vim	/^function! SyntaxCheckers_javascript_jshint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_jsl_GetLocList	syntastic/syntax_checkers/javascript/jsl.vim	/^function! SyntaxCheckers_javascript_jsl_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jslint_GetHighlightRegex	syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_javascript_jslint_GetLocList	syntastic/syntax_checkers/javascript/jslint.vim	/^function! SyntaxCheckers_javascript_jslint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_GetLocList	syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_jsxhint_IsAvailable	syntastic/syntax_checkers/javascript/jsxhint.vim	/^function! SyntaxCheckers_javascript_jsxhint_IsAvailable() dict$/;"	f
SyntaxCheckers_javascript_standard_GetLocList	syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_GetLocList() dict$/;"	f
SyntaxCheckers_javascript_standard_IsAvailable	syntastic/syntax_checkers/javascript/standard.vim	/^function! SyntaxCheckers_javascript_standard_IsAvailable() dict$/;"	f
SyntaxCheckers_json_jsonlint_GetLocList	syntastic/syntax_checkers/json/jsonlint.vim	/^function! SyntaxCheckers_json_jsonlint_GetLocList() dict$/;"	f
SyntaxCheckers_json_jsonval_GetLocList	syntastic/syntax_checkers/json/jsonval.vim	/^function! SyntaxCheckers_json_jsonval_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_GetLocList	syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_GetLocList() dict$/;"	f
SyntaxCheckers_less_lessc_IsAvailable	syntastic/syntax_checkers/less/lessc.vim	/^function! SyntaxCheckers_less_lessc_IsAvailable() dict$/;"	f
SyntaxCheckers_less_recess_GetLocList	syntastic/syntax_checkers/less/recess.vim	/^function! SyntaxCheckers_less_recess_GetLocList() dict$/;"	f
SyntaxCheckers_lex_flex_GetHighlightRegex	syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lex_flex_GetLocList	syntastic/syntax_checkers/lex/flex.vim	/^function! SyntaxCheckers_lex_flex_GetLocList() dict$/;"	f
SyntaxCheckers_limbo_limbo_GetLocList	syntastic/syntax_checkers/limbo/limbo.vim	/^function! SyntaxCheckers_limbo_limbo_GetLocList() dict$/;"	f
SyntaxCheckers_lisp_clisp_GetLocList	syntastic/syntax_checkers/lisp/clisp.vim	/^function! SyntaxCheckers_lisp_clisp_GetLocList() dict$/;"	f
SyntaxCheckers_llvm_llvm_GetLocList	syntastic/syntax_checkers/llvm/llvm.vim	/^function! SyntaxCheckers_llvm_llvm_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luac_GetHighlightRegex	syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetHighlightRegex(pos)$/;"	f
SyntaxCheckers_lua_luac_GetLocList	syntastic/syntax_checkers/lua/luac.vim	/^function! SyntaxCheckers_lua_luac_GetLocList() dict$/;"	f
SyntaxCheckers_lua_luacheck_GetHighlightRegex	syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_lua_luacheck_GetLocList	syntastic/syntax_checkers/lua/luacheck.vim	/^function! SyntaxCheckers_lua_luacheck_GetLocList() dict$/;"	f
SyntaxCheckers_markdown_mdl_GetLocList	syntastic/syntax_checkers/markdown/mdl.vim	/^function! SyntaxCheckers_markdown_mdl_GetLocList() dict$/;"	f
SyntaxCheckers_matlab_mlint_GetLocList	syntastic/syntax_checkers/matlab/mlint.vim	/^function! SyntaxCheckers_matlab_mlint_GetLocList() dict$/;"	f
SyntaxCheckers_mercury_mmc_GetLocList	syntastic/syntax_checkers/mercury/mmc.vim	/^function! SyntaxCheckers_mercury_mmc_GetLocList() dict$/;"	f
SyntaxCheckers_nasm_nasm_GetLocList	syntastic/syntax_checkers/nasm/nasm.vim	/^function! SyntaxCheckers_nasm_nasm_GetLocList() dict$/;"	f
SyntaxCheckers_nix_nix_GetLocList	syntastic/syntax_checkers/nix/nix.vim	/^function! SyntaxCheckers_nix_nix_GetLocList() dict$/;"	f
SyntaxCheckers_nroff_mandoc_GetLocList	syntastic/syntax_checkers/nroff/mandoc.vim	/^function! SyntaxCheckers_nroff_mandoc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_GetLocList	syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objc_gcc_IsAvailable	syntastic/syntax_checkers/objc/gcc.vim	/^function! SyntaxCheckers_objc_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_objcpp_gcc_GetLocList	syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_GetLocList() dict$/;"	f
SyntaxCheckers_objcpp_gcc_IsAvailable	syntastic/syntax_checkers/objcpp/gcc.vim	/^function! SyntaxCheckers_objcpp_gcc_IsAvailable() dict$/;"	f
SyntaxCheckers_ocaml_camlp4o_GetLocList	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_ocaml_camlp4o_IsAvailable	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^function! SyntaxCheckers_ocaml_camlp4o_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_perl_perl_GetLocList	syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_GetLocList() dict$/;"	f
SyntaxCheckers_perl_perl_IsAvailable	syntastic/syntax_checkers/perl/perl.vim	/^function! SyntaxCheckers_perl_perl_IsAvailable() dict$/;"	f
SyntaxCheckers_perl_perlcritic_GetLocList	syntastic/syntax_checkers/perl/perlcritic.vim	/^function! SyntaxCheckers_perl_perlcritic_GetLocList() dict$/;"	f
SyntaxCheckers_php_php_GetHighlightRegex	syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_php_GetLocList	syntastic/syntax_checkers/php/php.vim	/^function! SyntaxCheckers_php_php_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpcs_GetLocList	syntastic/syntax_checkers/php/phpcs.vim	/^function! SyntaxCheckers_php_phpcs_GetLocList() dict$/;"	f
SyntaxCheckers_php_phplint_GetHighlightRegex	syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phplint_GetLocList	syntastic/syntax_checkers/php/phplint.vim	/^function! SyntaxCheckers_php_phplint_GetLocList() dict$/;"	f
SyntaxCheckers_php_phpmd_GetHighlightRegex	syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_php_phpmd_GetLocList	syntastic/syntax_checkers/php/phpmd.vim	/^function! SyntaxCheckers_php_phpmd_GetLocList() dict$/;"	f
SyntaxCheckers_po_msgfmt_GetHighlightRegex	syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_po_msgfmt_GetLocList	syntastic/syntax_checkers/po/msgfmt.vim	/^function! SyntaxCheckers_po_msgfmt_GetLocList() dict$/;"	f
SyntaxCheckers_pod_podchecker_GetLocList	syntastic/syntax_checkers/pod/podchecker.vim	/^function! SyntaxCheckers_pod_podchecker_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppet_GetLocList	syntastic/syntax_checkers/puppet/puppet.vim	/^function! SyntaxCheckers_puppet_puppet_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_GetLocList	syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_GetLocList() dict$/;"	f
SyntaxCheckers_puppet_puppetlint_IsAvailable	syntastic/syntax_checkers/puppet/puppetlint.vim	/^function! SyntaxCheckers_puppet_puppetlint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_flake8_GetHighlightRegex	syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_flake8_GetLocList	syntastic/syntax_checkers/python/flake8.vim	/^function! SyntaxCheckers_python_flake8_GetLocList() dict$/;"	f
SyntaxCheckers_python_frosted_GetLocList	syntastic/syntax_checkers/python/frosted.vim	/^function! SyntaxCheckers_python_frosted_GetLocList() dict$/;"	f
SyntaxCheckers_python_mypy_GetLocList	syntastic/syntax_checkers/python/mypy.vim	/^function! SyntaxCheckers_python_mypy_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep257_GetLocList	syntastic/syntax_checkers/python/pep257.vim	/^function! SyntaxCheckers_python_pep257_GetLocList() dict$/;"	f
SyntaxCheckers_python_pep8_GetLocList	syntastic/syntax_checkers/python/pep8.vim	/^function! SyntaxCheckers_python_pep8_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_GetLocList	syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_GetLocList() dict$/;"	f
SyntaxCheckers_python_prospector_IsAvailable	syntastic/syntax_checkers/python/prospector.vim	/^function! SyntaxCheckers_python_prospector_IsAvailable() dict$/;"	f
SyntaxCheckers_python_py3kwarn_GetLocList	syntastic/syntax_checkers/python/py3kwarn.vim	/^function! SyntaxCheckers_python_py3kwarn_GetLocList() dict$/;"	f
SyntaxCheckers_python_pyflakes_GetHighlightRegex	syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_python_pyflakes_GetLocList	syntastic/syntax_checkers/python/pyflakes.vim	/^function! SyntaxCheckers_python_pyflakes_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylama_GetHighlightRegex	syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_python_pylama_GetLocList	syntastic/syntax_checkers/python/pylama.vim	/^function! SyntaxCheckers_python_pylama_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_GetLocList	syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_GetLocList() dict$/;"	f
SyntaxCheckers_python_pylint_IsAvailable	syntastic/syntax_checkers/python/pylint.vim	/^function! SyntaxCheckers_python_pylint_IsAvailable() dict$/;"	f
SyntaxCheckers_python_python_GetLocList	syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_GetLocList() dict$/;"	f
SyntaxCheckers_python_python_IsAvailable	syntastic/syntax_checkers/python/python.vim	/^function! SyntaxCheckers_python_python_IsAvailable() dict$/;"	f
SyntaxCheckers_qml_qmllint_GetLocList	syntastic/syntax_checkers/qml/qmllint.vim	/^function! SyntaxCheckers_qml_qmllint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_GetHighlightRegex	syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_lint_GetLocList	syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_GetLocList() dict$/;"	f
SyntaxCheckers_r_lint_IsAvailable	syntastic/syntax_checkers/r/lint.vim	/^function! SyntaxCheckers_r_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_r_svtools_GetHighlightRegex	syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_r_svtools_GetLocList	syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_GetLocList() dict$/;"	f
SyntaxCheckers_r_svtools_IsAvailable	syntastic/syntax_checkers/r/svtools.vim	/^function! SyntaxCheckers_r_svtools_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_GetLocList	syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_GetLocList() dict$/;"	f
SyntaxCheckers_racket_code_ayatollah_IsAvailable	syntastic/syntax_checkers/racket/code-ayatollah.vim	/^function! SyntaxCheckers_racket_code_ayatollah_IsAvailable() dict$/;"	f
SyntaxCheckers_racket_racket_GetLocList	syntastic/syntax_checkers/racket/racket.vim	/^function! SyntaxCheckers_racket_racket_GetLocList() dict$/;"	f
SyntaxCheckers_rnc_rnv_GetLocList	syntastic/syntax_checkers/rnc/rnv.vim	/^function! SyntaxCheckers_rnc_rnv_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rst2pseudoxml_GetLocList	syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^function! SyntaxCheckers_rst_rst2pseudoxml_GetLocList() dict$/;"	f
SyntaxCheckers_rst_rstcheck_GetLocList	syntastic/syntax_checkers/rst/rstcheck.vim	/^function! SyntaxCheckers_rst_rstcheck_GetLocList() dict$/;"	f
SyntaxCheckers_rst_sphinx_GetLocList	syntastic/syntax_checkers/rst/sphinx.vim	/^function! SyntaxCheckers_rst_sphinx_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_flog_GetLocList	syntastic/syntax_checkers/ruby/flog.vim	/^function! SyntaxCheckers_ruby_flog_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_jruby_GetLocList	syntastic/syntax_checkers/ruby/jruby.vim	/^function! SyntaxCheckers_ruby_jruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_macruby_GetLocList	syntastic/syntax_checkers/ruby/macruby.vim	/^function! SyntaxCheckers_ruby_macruby_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_GetHighlightRegex	syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_ruby_mri_GetLocList	syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_mri_IsAvailable	syntastic/syntax_checkers/ruby/mri.vim	/^function! SyntaxCheckers_ruby_mri_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_reek_GetLocList	syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_reek_IsAvailable	syntastic/syntax_checkers/ruby/reek.vim	/^function! SyntaxCheckers_ruby_reek_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubocop_GetLocList	syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_GetLocList() dict$/;"	f
SyntaxCheckers_ruby_rubocop_IsAvailable	syntastic/syntax_checkers/ruby/rubocop.vim	/^function! SyntaxCheckers_ruby_rubocop_IsAvailable() dict$/;"	f
SyntaxCheckers_ruby_rubylint_GetLocList	syntastic/syntax_checkers/ruby/rubylint.vim	/^function! SyntaxCheckers_ruby_rubylint_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sass_GetLocList	syntastic/syntax_checkers/sass/sass.vim	/^function! SyntaxCheckers_sass_sass_GetLocList() dict$/;"	f
SyntaxCheckers_sass_sassc_GetLocList	syntastic/syntax_checkers/sass/sassc.vim	/^function! SyntaxCheckers_sass_sassc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_fsc_GetLocList	syntastic/syntax_checkers/scala/fsc.vim	/^function! SyntaxCheckers_scala_fsc_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalac_GetLocList	syntastic/syntax_checkers/scala/scalac.vim	/^function! SyntaxCheckers_scala_scalac_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_GetLocList	syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_GetLocList() dict$/;"	f
SyntaxCheckers_scala_scalastyle_IsAvailable	syntastic/syntax_checkers/scala/scalastyle.vim	/^function! SyntaxCheckers_scala_scalastyle_IsAvailable() dict$/;"	f
SyntaxCheckers_scss_scss_lint_GetLocList	syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_GetLocList() dict$/;"	f
SyntaxCheckers_scss_scss_lint_IsAvailable	syntastic/syntax_checkers/scss/scss_lint.vim	/^function! SyntaxCheckers_scss_scss_lint_IsAvailable() dict$/;"	f
SyntaxCheckers_sh_bashate_GetLocList	syntastic/syntax_checkers/sh/bashate.vim	/^function! SyntaxCheckers_sh_bashate_GetLocList() dict$/;"	f
SyntaxCheckers_sh_checkbashisms_GetLocList	syntastic/syntax_checkers/sh/checkbashisms.vim	/^function! SyntaxCheckers_sh_checkbashisms_GetLocList() dict$/;"	f
SyntaxCheckers_sh_sh_GetLocList	syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_sh_sh_IsAvailable	syntastic/syntax_checkers/sh/sh.vim	/^function! SyntaxCheckers_sh_sh_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_sh_shellcheck_GetLocList	syntastic/syntax_checkers/sh/shellcheck.vim	/^function! SyntaxCheckers_sh_shellcheck_GetLocList() dict$/;"	f
SyntaxCheckers_slim_slimrb_GetLocList	syntastic/syntax_checkers/slim/slimrb.vim	/^function! SyntaxCheckers_slim_slimrb_GetLocList() dict$/;"	f
SyntaxCheckers_sml_smlnj_GetLocList	syntastic/syntax_checkers/sml/smlnj.vim	/^function! SyntaxCheckers_sml_smlnj_GetLocList() dict$/;"	f
SyntaxCheckers_spec_rpmlint_GetLocList	syntastic/syntax_checkers/spec/rpmlint.vim	/^function! SyntaxCheckers_spec_rpmlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_GetHighlightRegex	syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetHighlightRegex(i)$/;"	f
SyntaxCheckers_sql_sqlint_GetLocList	syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_GetLocList() dict$/;"	f
SyntaxCheckers_sql_sqlint_IsAvailable	syntastic/syntax_checkers/sql/sqlint.vim	/^function! SyntaxCheckers_sql_sqlint_IsAvailable() dict$/;"	f
SyntaxCheckers_stylus_stylint_GetLocList	syntastic/syntax_checkers/stylus/stylint.vim	/^function! SyntaxCheckers_stylus_stylint_GetLocList() dict$/;"	f
SyntaxCheckers_tcl_nagelfar_GetLocList	syntastic/syntax_checkers/tcl/nagelfar.vim	/^function! SyntaxCheckers_tcl_nagelfar_GetLocList() dict$/;"	f
SyntaxCheckers_tex_chktex_GetLocList	syntastic/syntax_checkers/tex/chktex.vim	/^function! SyntaxCheckers_tex_chktex_GetLocList() dict$/;"	f
SyntaxCheckers_tex_lacheck_GetLocList	syntastic/syntax_checkers/tex/lacheck.vim	/^function! SyntaxCheckers_tex_lacheck_GetLocList() dict$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex	syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_texinfo_makeinfo_GetLocList	syntastic/syntax_checkers/texinfo/makeinfo.vim	/^function! SyntaxCheckers_texinfo_makeinfo_GetLocList() dict$/;"	f
SyntaxCheckers_text_atdtool_GetHighlightRegex	syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_text_atdtool_GetLocList	syntastic/syntax_checkers/text/atdtool.vim	/^function! SyntaxCheckers_text_atdtool_GetLocList() dict$/;"	f
SyntaxCheckers_text_language_check_GetLocList	syntastic/syntax_checkers/text/language_check.vim	/^function! SyntaxCheckers_text_language_check_GetLocList() dict$/;"	f
SyntaxCheckers_twig_twiglint_GetLocList	syntastic/syntax_checkers/twig/twiglint.vim	/^function! SyntaxCheckers_twig_twiglint_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_GetLocList	syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_GetLocList() dict$/;"	f
SyntaxCheckers_typescript_tsc_IsAvailable	syntastic/syntax_checkers/typescript/tsc.vim	/^function! SyntaxCheckers_typescript_tsc_IsAvailable() dict$/;"	f
SyntaxCheckers_typescript_tslint_GetHighlightRegex	syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetHighlightRegex(item)$/;"	f
SyntaxCheckers_typescript_tslint_GetLocList	syntastic/syntax_checkers/typescript/tslint.vim	/^function! SyntaxCheckers_typescript_tslint_GetLocList() dict$/;"	f
SyntaxCheckers_vala_valac_GetHighlightRegex	syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetHighlightRegex(pos) " {{{1$/;"	f
SyntaxCheckers_vala_valac_GetLocList	syntastic/syntax_checkers/vala/valac.vim	/^function! SyntaxCheckers_vala_valac_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_verilog_iverilog_GetLocList	syntastic/syntax_checkers/verilog/iverilog.vim	/^function! SyntaxCheckers_verilog_iverilog_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_GetLocList	syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_GetLocList() dict$/;"	f
SyntaxCheckers_verilog_verilator_IsAvailable	syntastic/syntax_checkers/verilog/verilator.vim	/^function! SyntaxCheckers_verilog_verilator_IsAvailable() dict$/;"	f
SyntaxCheckers_vhdl_ghdl_GetLocList	syntastic/syntax_checkers/vhdl/ghdl.vim	/^function! SyntaxCheckers_vhdl_ghdl_GetLocList() dict$/;"	f
SyntaxCheckers_vhdl_vcom_GetLocList	syntastic/syntax_checkers/vhdl/vcom.vim	/^function! SyntaxCheckers_vhdl_vcom_GetLocList() dict$/;"	f
SyntaxCheckers_vim_vimlint_GetHighlightRegex	syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetHighlightRegex(item) " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_GetLocList	syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_vim_vimlint_IsAvailable	syntastic/syntax_checkers/vim/vimlint.vim	/^function! SyntaxCheckers_vim_vimlint_IsAvailable() dict " {{{1$/;"	f
SyntaxCheckers_vim_vint_GetLocList	syntastic/syntax_checkers/vim/vint.vim	/^function! SyntaxCheckers_vim_vint_GetLocList() dict$/;"	f
SyntaxCheckers_xhtml_tidy_GetLocList	syntastic/syntax_checkers/xhtml/tidy.vim	/^function! SyntaxCheckers_xhtml_tidy_GetLocList() dict " {{{1$/;"	f
SyntaxCheckers_xml_plutil_GetLocList	syntastic/syntax_checkers/xml/plutil.vim	/^function! SyntaxCheckers_xml_plutil_GetLocList() dict$/;"	f
SyntaxCheckers_xml_xmllint_GetLocList	syntastic/syntax_checkers/xml/xmllint.vim	/^function! SyntaxCheckers_xml_xmllint_GetLocList() dict$/;"	f
SyntaxCheckers_xquery_basex_GetLocList	syntastic/syntax_checkers/xquery/basex.vim	/^function! SyntaxCheckers_xquery_basex_GetLocList() dict$/;"	f
SyntaxCheckers_yacc_bison_GetLocList	syntastic/syntax_checkers/yacc/bison.vim	/^function! SyntaxCheckers_yacc_bison_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_jsyaml_GetLocList	syntastic/syntax_checkers/yaml/jsyaml.vim	/^function! SyntaxCheckers_yaml_jsyaml_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_GetLocList	syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_GetLocList() dict$/;"	f
SyntaxCheckers_yaml_yamlxs_IsAvailable	syntastic/syntax_checkers/yaml/yamlxs.vim	/^function! SyntaxCheckers_yaml_yamlxs_IsAvailable() dict$/;"	f
SyntaxCheckers_z80_z80syntaxchecker_GetLocList	syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^function! SyntaxCheckers_z80_z80syntaxchecker_GetLocList() dict$/;"	f
SyntaxCheckers_zpt_zptlint_GetLocList	syntastic/syntax_checkers/zpt/zptlint.vim	/^function! SyntaxCheckers_zpt_zptlint_GetLocList() dict$/;"	f
SyntaxCheckers_zsh_zsh_GetLocList	syntastic/syntax_checkers/zsh/zsh.vim	/^function! SyntaxCheckers_zsh_zsh_GetLocList() dict$/;"	f
T	vim-easymotion/t/easymotion_spec.vim	/^        map T <Plug>(easymotion-T)$/;"	m
T/	vim-easymotion/t/easymotion_spec.vim	/^        map T\/ <Plug>(easymotion-Tn)$/;"	m
T;	vim-easymotion/t/easymotion_spec.vim	/^        normal T;$/;"	m
TAR	javascript-libraries-syntax.vim/Makefile	/^TAR=tar czvf$/;"	m
TH	vim-easymotion/t/easymotion_spec.vim	/^        normal TH$/;"	m
THa	vim-easymotion/t/easymotion_spec.vim	/^        normal THa$/;"	m
Tagbar	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=0 Tagbar              call tagbar#ToggleWindow()$/;"	c
TagbarBalloonExpr	vim-tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr() abort$/;"	f
TagbarClose	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarCurrentTag	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarCurrentTag    echo tagbar#currenttag('%s', 'No current tag', <f-args>)$/;"	c
TagbarDebug	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGetTypeConfig	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarGetTypeConfig call tagbar#gettypeconfig(<f-args>)$/;"	c
TagbarOpen	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fcj')$/;"	c
TagbarSession	vim-tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=1 -bang TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>, <bang>0)$/;"	c
TagbarShowTag	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#highlighttag(1, 1)$/;"	c
TagbarToggle	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TagbarTogglePause	vim-tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarTogglePause   call tagbar#toggle_pause()$/;"	c
Tb	vim-easymotion/t/easymotion_spec.vim	/^        normal Tb$/;"	m
Tba	vim-easymotion/t/easymotion_spec.vim	/^        normal Tba$/;"	m
Th	vim-easymotion/t/easymotion_spec.vim	/^        normal Th$/;"	m
Tha	vim-easymotion/t/easymotion_spec.vim	/^        normal Tha$/;"	m
Throw	vim-easymotion/autoload/EasyMotion.vim	/^function! s:Throw(message) "{{{$/;"	f
TidyEncOptByFenc	syntastic/syntax_checkers/html/tidy.vim	/^function! s:TidyEncOptByFenc() " {{{2$/;"	f
TidyEncOptByFenc	syntastic/syntax_checkers/xhtml/tidy.vim	/^function! s:TidyEncOptByFenc()$/;"	f
Timer.elapsed	jasmine/src/core/Timer.js	/^    this.elapsed = function() {$/;"	m
Timer.start	jasmine/src/core/Timer.js	/^    this.start = function() {$/;"	m
Toa	vim-easymotion/t/easymotion_spec.vim	/^        normal Toa$/;"	m
Tob	vim-easymotion/t/easymotion_spec.vim	/^        normal Tob$/;"	m
Toc	vim-easymotion/t/easymotion_spec.vim	/^        normal Toc$/;"	m
Tod	vim-easymotion/t/easymotion_spec.vim	/^        normal Tod$/;"	m
TogBG	vim-colors-solarized/autoload/togglebg.vim	/^function! s:TogBG()$/;"	f
ToggleAutoclose	vim-tagbar/autoload/tagbar.vim	/^function! s:ToggleAutoclose() abort$/;"	f
ToggleBG	vim-colors-solarized/autoload/togglebg.vim	/^    command ToggleBG :call s:TogBG()$/;"	c
ToggleBackground	vim-colors-solarized/autoload/togglebg.vim	/^function! ToggleBackground()$/;"	f
ToggleFold	vim-tagbar/autoload/tagbar.vim	/^function! s:ToggleFold() abort$/;"	f
ToggleHelp	vim-tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp() abort$/;"	f
ToggleHideNonPublicTags	vim-tagbar/autoload/tagbar.vim	/^function! s:ToggleHideNonPublicTags() abort$/;"	f
ToggleSort	vim-tagbar/autoload/tagbar.vim	/^function! s:ToggleSort() abort$/;"	f
ToggleWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow() abort$/;"	f
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>a$/;"	m
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> ToolBar.togglebg <SID>TogBG$/;"	m
ToolBar.togglebg	vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> ToolBar.togglebg <ESC><SID>TogBG<ESC>gv$/;"	m
TransformUserTypeDef	vim-tagbar/autoload/tagbar.vim	/^function! s:TransformUserTypeDef(def) abort$/;"	f
TreeDirNode.AbsoluteTreeRoot	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.New(path, nerdtree)$/;"	f
TreeDirNode._initChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openInNewTab()$/;"	f
TreeDirNode._openRecursively2	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.activate(...)$/;"	f
TreeDirNode.addChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getDirChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getDirChildren()$/;"	f
TreeDirNode.getVisibleChildCount	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.open(...)$/;"	f
TreeDirNode.openAlong	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openAlong(...)$/;"	f
TreeDirNode.openExplorer	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.refreshDirFlags	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshDirFlags()$/;"	f
TreeDirNode.refreshFlags	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.refreshFlags()$/;"	f
TreeDirNode.removeChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.reveal(path, ...)$/;"	f
TreeDirNode.sortChildren	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.toggleOpen(...)$/;"	f
TreeDirNode.transplantChild	nerdtree/lib/nerdtree/tree_dir_node.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetSelected	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.New(path, nerdtree)$/;"	f
TreeFileNode._renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.activate(...)$/;"	f
TreeFileNode.bookmark	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBookmarks	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.clearBookmarks()$/;"	f
TreeFileNode.copy	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getNerdtree	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.getNerdtree()$/;"	f
TreeFileNode.isRoot	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.open	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.open(...)$/;"	f
TreeFileNode.openInNewTab	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.refreshFlags	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.refreshFlags()$/;"	f
TreeFileNode.rename	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	nerdtree/lib/nerdtree/tree_file_node.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TreeProcessor.execute	jasmine/src/core/TreeProcessor.js	/^    this.execute = function(done) {$/;"	m
TreeProcessor.processNode	jasmine/src/core/TreeProcessor.js	/^    function processNode(node, parentEnabled) {$/;"	f
TreeProcessor.processTree	jasmine/src/core/TreeProcessor.js	/^    this.processTree = function() {$/;"	m
TreeProcessor.runnableIndex	jasmine/src/core/TreeProcessor.js	/^    function runnableIndex(id) {$/;"	f
TypeInfo.New	vim-tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.New(...) abort dict$/;"	f
TypeInfo.createKinddict	vim-tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.createKinddict() abort dict$/;"	f
TypeInfo.getKind	vim-tagbar/autoload/tagbar.vim	/^function! s:TypeInfo.getKind(kind) abort dict$/;"	f
UI.IndentWid	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.IndentWid()$/;"	f
UI.MarkupReg	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.MarkupReg()$/;"	f
UI.New	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.New(nerdtree)$/;"	f
UI.UpDirLine	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.UpDirLine()$/;"	f
UI._dumpHelp	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._dumpHelp()$/;"	f
UI._indentLevelFor	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._indentLevelFor(line)$/;"	f
UI._renderBookmarks	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._renderBookmarks()$/;"	f
UI._stripMarkup	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI._stripMarkup(line, removeLeadingSpaces)$/;"	f
UI.centerView	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.centerView()$/;"	f
UI.getLineNum	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getLineNum(file_node)$/;"	f
UI.getPath	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getPath(ln)$/;"	f
UI.getRootLineNum	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getRootLineNum()$/;"	f
UI.getShowBookmarks	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowBookmarks()$/;"	f
UI.getShowFiles	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowFiles()$/;"	f
UI.getShowHelp	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHelp()$/;"	f
UI.getShowHidden	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.getShowHidden()$/;"	f
UI.isIgnoreFilterEnabled	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.isIgnoreFilterEnabled()$/;"	f
UI.render	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.render()$/;"	f
UI.renderViewSavingPosition	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.renderViewSavingPosition()$/;"	f
UI.restoreScreenState	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.restoreScreenState()$/;"	f
UI.saveScreenState	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.saveScreenState()$/;"	f
UI.setShowHidden	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.setShowHidden(val)$/;"	f
UI.toggleHelp	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleHelp()$/;"	f
UI.toggleIgnoreFilter	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleIgnoreFilter()$/;"	f
UI.toggleShowBookmarks	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowBookmarks()$/;"	f
UI.toggleShowFiles	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowFiles()$/;"	f
UI.toggleShowHidden	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleShowHidden()$/;"	f
UI.toggleZoom	nerdtree/lib/nerdtree/ui.vim	/^function! s:UI.toggleZoom()$/;"	f
UpdateErrors	syntastic/plugin/syntastic.vim	/^function! s:UpdateErrors(auto_invoked, checker_names) abort " {{{2$/;"	f
VERSION	javascript-libraries-syntax.vim/Makefile	/^VERSION=0.1$/;"	m
VERSION	javascript-libraries-syntax.vim/config.mk	/^VERSION=0.4$/;"	m
VIMRUNTIME	javascript-libraries-syntax.vim/Makefile	/^VIMRUNTIME=~\/.vim$/;"	m
VimCssInit	coloresque/after/syntax/css/vim-coloresque.vim	/^function! s:VimCssInit(update)$/;"	f
WGET_OPT	javascript-libraries-syntax.vim/Makefile	/^WGET_OPT=-c -nv$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^inoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>a$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^nnoremenu <script> Window.Toggle\\ Background <SID>TogBG$/;"	m
Window.Toggle\	vim-colors-solarized/autoload/togglebg.vim	/^vnoremenu <script> Window.Toggle\\ Background <ESC><SID>TogBG<ESC>gv$/;"	m
Wq	vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
XTermColorForRGB	coloresque/after/syntax/css/vim-coloresque.vim	/^    function! s:XTermColorForRGB(color)$/;"	f
ZoomWindow	vim-tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow() abort$/;"	f
[c	git-gutter/plugin/gitgutter.vim	/^    nmap [c <Plug>GitGutterPrevHunk$/;"	m
]c	git-gutter/plugin/gitgutter.vim	/^    nmap ]c <Plug>GitGutterNextHunk$/;"	m
_add_to_errors	syntastic/plugin/syntastic.vim	/^function! s:_add_to_errors(errors, options) abort " {{{2$/;"	f
_as_echon	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_as_echon(str)$/;"	f
_as_statusline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_as_statusline(list, count)$/;"	f
_auto_cmap	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_auto_cmap()$/;"	f
_buffer_complete	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_buffer_complete()$/;"	f
_build_module	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_build_module(sid) abort$/;"	f
_build_module	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_build_module(sid) abort$/;"	f
_capture	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_capture(mode)$/;"	f
_checkPackage	syntastic/autoload/syntastic/c.vim	/^function! s:_checkPackage(name, ...) abort " {{{2$/;"	f
_checkPhp	syntastic/autoload/syntastic/c.vim	/^function! s:_checkPhp() abort " {{{2$/;"	f
_checkPython	syntastic/autoload/syntastic/c.vim	/^function! s:_checkPython() abort " {{{2$/;"	f
_checkRuby	syntastic/autoload/syntastic/c.vim	/^function! s:_checkRuby() abort " {{{2$/;"	f
_clamp	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_clamp(x, max, min)$/;"	f
_compare	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:_compare(a, b) abort$/;"	f
_compare_error_items_by_columns	syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_columns(a, b) abort " {{{2$/;"	f
_compare_error_items_by_lines	syntastic/plugin/syntastic/loclist.vim	/^function! s:_compare_error_items_by_lines(a, b) abort " {{{2$/;"	f
_concat	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_concat(lists) abort$/;"	f
_concat	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_concat(lists) abort$/;"	f
_convert_sid	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_convert_sid(rhs, sid) abort$/;"	f
_create_hash	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:_create_hash(dir, str) abort$/;"	f
_decode_JSON	syntastic/autoload/syntastic/preprocess.vim	/^function! s:_decode_JSON(json) abort " {{{2$/;"	f
_default_compare	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_default_compare	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:_default_compare(a, b) abort$/;"	f
_deprecated2	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_deprecated2(fname) abort$/;"	f
_disabled_by_eclim	syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_eclim(filetype) abort " {{{2$/;"	f
_disabled_by_ycm	syntastic/plugin/syntastic/registry.vim	/^function! s:_disabled_by_ycm(filetype) abort " {{{2$/;"	f
_echon	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_echon(expr)$/;"	f
_encode_name	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:_encode_name(cache_dir, filename) abort$/;"	f
_execute	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_execute(cmd)$/;"	f
_explain_skip	syntastic/plugin/syntastic.vim	/^function! s:_explain_skip(filetypes) abort " {{{2$/;"	f
_file2module	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_file2module(file) abort$/;"	f
_file2module	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_file2module(file) abort$/;"	f
_find_index	syntastic/plugin/syntastic/cursor.vim	/^function! s:_find_index(column, messages) abort " {{{2$/;"	f
_finish	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_finish()$/;"	f
_float2str_dumb	syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_dumb(val) abort " {{{2$/;"	f
_float2str_smart	syntastic/autoload/syntastic/util.vim	/^function! s:_float2str_smart(val) abort " {{{2$/;"	f
_format_variable	syntastic/autoload/syntastic/log.vim	/^function! s:_format_variable(name) abort " {{{2$/;"	f
_get_cflags	syntastic/autoload/syntastic/c.vim	/^function! s:_get_cflags(ft, ck, opts) abort " {{{2$/;"	f
_get_checker_var	syntastic/autoload/syntastic/c.vim	/^function! s:_get_checker_var(scope, filetype, subchecker, name, default) abort " {{{2$/;"	f
_get_functions	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_functions	vim-neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_get_functions(sid) abort$/;"	f
_get_include_dirs	syntastic/autoload/syntastic/c.vim	/^function! s:_get_include_dirs(filetype) abort " {{{2$/;"	f
_get_key	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_get_key(conf)$/;"	f
_get_module_path	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_module_path	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_get_module_path(name) abort$/;"	f
_get_sid_by_script	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_get_sid_by_script	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_get_sid_by_script(path) abort$/;"	f
_ignore_file	syntastic/plugin/syntastic.vim	/^function! s:_ignore_file(filename) abort " {{{2$/;"	f
_import	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_import(name) abort$/;"	f
_import	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_import(name) abort$/;"	f
_init	syntastic/autoload/syntastic/c.vim	/^function! s:_init() abort " {{{2$/;"	f
_isAvailableDefault	syntastic/plugin/syntastic/checker.vim	/^function! s:_isAvailableDefault() dict " {{{2$/;"	f
_isDebugEnabled_dumb	syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_dumb(level) abort " {{{2$/;"	f
_isDebugEnabled_smart	syntastic/autoload/syntastic/log.vim	/^function! s:_isDebugEnabled_smart(level) abort " {{{2$/;"	f
_is_absolute_path	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_absolute_path	vim-neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_is_absolute_path(path) abort$/;"	f
_is_modified	syntastic/autoload/syntastic/log.vim	/^function! s:_is_modified(name) abort " {{{2$/;"	f
_is_same_index	syntastic/plugin/syntastic/cursor.vim	/^function! s:_is_same_index(line, old_line, column, idx, messages) abort " {{{2$/;"	f
_is_valid_highlight	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_is_valid_highlight(name)$/;"	f
_keymapping	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_keymapping(str)$/;"	f
_logRedirect	syntastic/autoload/syntastic/log.vim	/^function! s:_logRedirect(on) abort " {{{2$/;"	f
_log_timestamp	syntastic/autoload/syntastic/log.vim	/^function! s:_log_timestamp() abort " {{{2$/;"	f
_maparg	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_maparg(name, mode, abbr, dict)$/;"	f
_normalise_filetype	syntastic/plugin/syntastic/registry.vim	/^function! s:_normalise_filetype(ftalias) abort " {{{2$/;"	f
_os_name	syntastic/plugin/syntastic.vim	/^function! s:_os_name() abort " {{{2$/;"	f
_pad_with_char	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_pad_with_char(str, left, right, char) abort$/;"	f
_parse_line	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_parse_line(line)$/;"	f
_path2project_directory_git	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_git(path) abort$/;"	f
_path2project_directory_others	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_others(vcs, path) abort$/;"	f
_path2project_directory_svn	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:_path2project_directory_svn(path) abort$/;"	f
_redir	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_redir(cmd) abort$/;"	f
_redir	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_redir(cmd) abort$/;"	f
_redraw	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:_redraw(cmdline)$/;"	f
_registerHandler	syntastic/autoload/syntastic/c.vim	/^function! s:_registerHandler(regex, function, args) abort " {{{2$/;"	f
_remove_shadowed_items	syntastic/plugin/syntastic/loclist.vim	/^function! s:_remove_shadowed_items(errors) abort " {{{2$/;"	f
_replace	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_replace(str, from, to, flags) abort$/;"	f
_reset	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_reset()$/;"	f
_reset	vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_reset()$/;"	f
_resolve_filetypes	syntastic/plugin/syntastic.vim	/^function! s:_resolve_filetypes(filetypes) abort " {{{2$/;"	f
_rmrf	syntastic/autoload/syntastic/util.vim	/^function! s:_rmrf(what) abort " {{{2$/;"	f
_runtime_files	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_runtime_files	vim-neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_runtime_files(path) abort$/;"	f
_safe_eval	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_safe_eval(expr, ...)$/;"	f
_search_headers	syntastic/autoload/syntastic/c.vim	/^function! s:_search_headers() abort " {{{2$/;"	f
_set_screen_column	syntastic/plugin/syntastic/loclist.vim	/^function! s:_set_screen_column(item) abort " {{{2$/;"	f
_should_match_cmdline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:_should_match_cmdline(cmdline)$/;"	f
_skip_file	syntastic/plugin/syntastic.vim	/^function! s:_skip_file() abort " {{{2$/;"	f
_split_by_wcswidth	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth(body, x) abort$/;"	f
_split_by_wcswidth_once	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_split_by_wcswidth_once(body, x) abort$/;"	f
_split_keystring	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_split_keystring(str, ...)$/;"	f
_translate	syntastic/plugin/syntastic/loclist.vim	/^function! s:_translate(key, val) abort " {{{2$/;"	f
_translateElement	syntastic/autoload/syntastic/util.vim	/^function! s:_translateElement(key, term) abort " {{{2$/;"	f
_translateFilter	syntastic/autoload/syntastic/util.vim	/^function! s:_translateFilter(filters) abort " {{{2$/;"	f
_unify_path	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_unify_path(path) abort$/;"	f
_unify_path	vim-neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_unify_path(path) abort$/;"	f
_uniq	jasmine/lib/jasmine-core/core.py	/^    def _uniq(self, items, idfun=None):$/;"	m	class:Core
_uniq	vim-easymotion/autoload/vital/_easymotion.vim	/^  function! s:_uniq(list) abort$/;"	f
_uniq	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:_uniq(list)$/;"	f
_uniq	vim-neocomplete/autoload/vital/_neocomplete.vim	/^  function! s:_uniq(list) abort$/;"	f
_verbosefile_pop	vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_pop()$/;"	f
_verbosefile_push	vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:_verbosefile_push(file)$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_depends()$/;"	f
_vital_depends	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_depends	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:_vital_depends() abort$/;"	f
_vital_files	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_files	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:_vital_files(pattern) abort$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:_vital_loaded(V)$/;"	f
_vital_loaded	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_vital_loaded	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:_vital_loaded(V) abort$/;"	f
_wcwidth	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
_wcwidth	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:_wcwidth(ucs) abort$/;"	f
``	vim-easymotion/t/easymotion_spec.vim	/^        normal! ``$/;"	m
a	jasmine/src/html/_HTMLReporter.scss	/^        a {$/;"	t
a	jasmine/src/html/_HTMLReporter.scss	/^      a {$/;"	t
a	jasmine/src/html/_HTMLReporter.scss	/^    a {$/;"	t
a	jasmine/src/html/_HTMLReporter.scss	/^  a {$/;"	t
activateAll	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateAll()$/;"	f
activateBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateBookmark(bm)$/;"	f
activateDirNode	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateDirNode(node)$/;"	f
activateFileNode	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:activateFileNode(node)$/;"	f
addReporter	jasmine/src/core/Env.js	/^    this.addReporter = function(reporterToAdd) {$/;"	f
addSpecsToSuite	jasmine/src/core/Env.js	/^    function addSpecsToSuite(suite, specDefinitions) {$/;"	f
add_methods	vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
adjust_screen	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:adjust_screen() "{{{$/;"	f
afterAll	jasmine/src/core/Env.js	/^    this.afterAll = function(afterAllFunction, timeout) {$/;"	f
afterEach	jasmine/src/core/Env.js	/^    this.afterEach = function(afterEachFunction, timeout) {$/;"	f
all	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
all	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:all(f, xs) abort$/;"	f
and	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:and(xs) abort$/;"	f
and	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:and(xs) abort$/;"	f
angular_alternate	vim-angular/plugin/angular.vim	/^  augroup angular_alternate$/;"	a
angular_gf	vim-angular/plugin/angular.vim	/^augroup angular_gf$/;"	a
angular_run_spec	vim-angular/plugin/angular.vim	/^augroup angular_run_spec$/;"	a
any	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
any	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:any(f, xs) abort$/;"	f
apps_dir_from_src	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^apps_dir_from_src(SrcFile) ->$/;"	f
argv	syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
argv	syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
as_key_config	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:as_key_config(config)$/;"	f
as_keymapping	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:as_keymapping(key)$/;"	f
assume_blank_vimrc_by_unsetting_any_global_variables	vim-angular/spec/spec_helper.rb	/^  def assume_blank_vimrc_by_unsetting_any_global_variables$/;"	f
assume_vimrc	vim-angular/spec/spec_helper.rb	/^  def assume_vimrc(command)$/;"	f
asymmetricMatch	jasmine/src/core/matchers/matchersUtil.js	/^  function asymmetricMatch(a, b) {$/;"	f
async_load	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! s:async_load(argv, cache_dir, filename) "{{{$/;"	f
author	jasmine/setup.py	/^    author="Pivotal Labs",$/;"	v
author_email	jasmine/setup.py	/^    author_email="jasmine-js@googlegroups.com",$/;"	v
b	vim-easymotion/t/easymotion_spec.vim	/^        map b <Plug>(easymotion-b)$/;"	m
b	vim-easymotion/t/operator_pending_spec.vim	/^        omap b <Plug>(easymotion-b)$/;"	m
b:browsefilter	vim-haml/ftplugin/haml.vim	/^  let b:browsefilter="Haml Files (*.haml)\\t*.haml\\nSass Files (*.sass)\\t*.sass\\n" . s:browsefilter$/;"	v
b:color_pattern	coloresque/after/syntax/css/vim-coloresque.vim	/^let b:color_pattern = {}$/;"	v
b:current_syntax	vim-haml/syntax/haml.vim	/^let b:current_syntax = "haml"$/;"	v
b:current_syntax	vim-haml/syntax/sass.vim	/^let b:current_syntax = "sass"$/;"	v
b:current_syntax	vim-haml/syntax/scss.vim	/^let b:current_syntax = "scss"$/;"	v
b:current_syntax	vim-javascript-syntax/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	vim-javascript/syntax/javascript.vim	/^let b:current_syntax = "javascript"$/;"	v
b:current_syntax	vim-tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:did_ftplugin	vim-haml/ftplugin/haml.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_ftplugin	vim-haml/ftplugin/sass.vim	/^let b:did_ftplugin = 1$/;"	v
b:did_indent	vim-haml/indent/haml.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim-haml/indent/sass.vim	/^let b:did_indent = 1$/;"	v
b:did_indent	vim-javascript/indent/javascript.vim	/^let b:did_indent = 1$/;"	v
b:javascript_fold	vim-javascript/syntax/javascript.vim	/^let b:javascript_fold='true'$/;"	v
b:match_words	vim-haml/ftplugin/haml.vim	/^  let b:match_words = s:match_words$/;"	v
b:matchescache	coloresque/after/syntax/css/vim-coloresque.vim	/^let b:matchescache = {}$/;"	v
b:ruby_no_expensive	vim-haml/syntax/haml.vim	/^let b:ruby_no_expensive = 1$/;"	v
b:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^let b:undo_ftplugin = "setl cms< com< "$/;"	v
b:undo_ftplugin	vim-haml/ftplugin/sass.vim	/^let b:undo_ftplugin = "setl com< cms< def< inc< inex< ofu< sua<"$/;"	v
base.__empty	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__empty(...)$/;"	f
base.__execute	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute(command)$/;"	f
base.__execute__	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__execute__(cmd)$/;"	f
base.__finish	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__finish()$/;"	f
base.__get_keymapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__get_keymapping()$/;"	f
base.__init	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init()$/;"	f
base.__init_variables	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__init_variables()$/;"	f
base.__input	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input(input, ...)$/;"	f
base.__input_char	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__input_char(char)$/;"	f
base.__inputting	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__inputting()$/;"	f
base.__is_exit	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__is_exit()$/;"	f
base.__keymapping__	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__keymapping__()$/;"	f
base.__main	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__main(...)$/;"	f
base.__update	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.__update()$/;"	f
base.backward	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward()$/;"	f
base.backward	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.backward()$/;"	f
base.backward_word	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.backward_word(...)$/;"	f
base.call	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.call(func, ...)$/;"	f
base.callevent	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.callevent(event)$/;"	f
base.char	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.char()$/;"	f
base.cmap	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cmap(lhs, rhs)$/;"	f
base.cnoremap	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cnoremap(lhs, rhs)$/;"	f
base.connect	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.connect(module, ...)$/;"	f
base.connect	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.connect(slot)$/;"	f
base.cunmap	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.cunmap(lhs)$/;"	f
base.disable_keymapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disable_keymapping()$/;"	f
base.disconnect	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.disconnect(name)$/;"	f
base.disconnect	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect(slot)$/;"	f
base.disconnect_by	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.disconnect_by(expr)$/;"	f
base.draw	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.draw()$/;"	f
base.enable_keymapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.enable_keymapping()$/;"	f
base.execute	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.execute(...)$/;"	f
base.exit	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit(...)$/;"	f
base.exit_code	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.exit_code()$/;"	f
base.find_by	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_by(expr)$/;"	f
base.find_first_by	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.find_first_by(expr)$/;"	f
base.forward	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.forward()$/;"	f
base.forward	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.forward()$/;"	f
base.get	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get(...)$/;"	f
base.get_module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_module(name)$/;"	f
base.get_prompt	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_prompt()$/;"	f
base.get_slot	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.get_slot(val)$/;"	f
base.get_suffix	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_suffix()$/;"	f
base.get_tap_key	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.get_tap_key()$/;"	f
base.getchar	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getchar(...)$/;"	f
base.getline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getline()$/;"	f
base.getpos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.getpos()$/;"	f
base.hl_cursor_off	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_off()$/;"	f
base.hl_cursor_on	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.hl_cursor_on()$/;"	f
base.input	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.input(str)$/;"	f
base.input_key	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key()$/;"	f
base.input_key_stack	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack()$/;"	f
base.input_key_stack_pop	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_pop()$/;"	f
base.input_key_stack_string	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.input_key_stack_string()$/;"	f
base.insert	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.insert(word, ...)$/;"	f
base.is_enable_keymapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_enable_keymapping()$/;"	f
base.is_exit	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_exit()$/;"	f
base.is_input	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.is_input(key, ...)$/;"	f
base.keymapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.keymapping()$/;"	f
base.length	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.length()$/;"	f
base.next	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.next()$/;"	f
base.pos	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos()$/;"	f
base.pos_char	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.pos_char()$/;"	f
base.prev	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.prev()$/;"	f
base.remove	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove(index)$/;"	f
base.remove_next	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_next()$/;"	f
base.remove_pos	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_pos()$/;"	f
base.remove_prev	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.remove_prev()$/;"	f
base.set	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set(item)$/;"	f
base.set_input_key_stack	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_input_key_stack(stack)$/;"	f
base.set_pos	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_pos(pos)$/;"	f
base.set_prompt	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_prompt(prompt)$/;"	f
base.set_str	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.set_str(str)$/;"	f
base.set_suffix	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.set_suffix(str)$/;"	f
base.setchar	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setchar(char, ...)$/;"	f
base.setline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setline(line)$/;"	f
base.setpos	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.setpos(pos)$/;"	f
base.slots	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.slots()$/;"	f
base.sort_by	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:base.sort_by(expr)$/;"	f
base.start	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.start(...)$/;"	f
base.str	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:base.str()$/;"	f
base.tap_keyinput	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.tap_keyinput(key)$/;"	f
base.untap_keyinput	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:base.untap_keyinput(key)$/;"	f
base.variables.modules.get_slot	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	function! s:base.variables.modules.get_slot(val)$/;"	f
bb	vim-easymotion/t/easymotion_spec.vim	/^        normal bb$/;"	m
beep	vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
beforeAll	jasmine/src/core/Env.js	/^    this.beforeAll = function(beforeAllFunction, timeout) {$/;"	f
beforeEach	jasmine/src/core/Env.js	/^    this.beforeEach = function(beforeEachFunction, timeout) {$/;"	f
bh	vim-easymotion/t/easymotion_spec.vim	/^        normal bh$/;"	m
binary_search	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
binary_search	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:binary_search(list, value, ...) abort$/;"	f
body	jasmine/lib/jasmine-core/jasmine.css	/^body { overflow-y: scroll; }$/;"	t
body	jasmine/src/html/_HTMLReporter.scss	/^body {$/;"	t
boot_dir	jasmine/lib/jasmine-core.rb	/^      def boot_dir$/;"	f	class:Jasmine.Core
boot_files	jasmine/lib/jasmine-core.rb	/^      def boot_files$/;"	f	class:Jasmine.Core
break	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
break	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:break(f, xs) abort$/;"	f
buffer	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_name	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_repo	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_up	vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_up(...) dict abort$/;"	f
buildExpectationResult.message	jasmine/src/core/ExpectationResult.js	/^    function message() {$/;"	f
buildExpectationResult.result.matcherName	jasmine/src/core/ExpectationResult.js	/^    var result = {$/;"	p
buildExpectationResult.stack	jasmine/src/core/ExpectationResult.js	/^    function stack() {$/;"	f
cS	vim-surround/plugin/surround.vim	/^  nmap cS  <Plug>CSurround$/;"	m
call	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:call(list, func, ...)$/;"	f
can_diffoff	vim-fugitive/plugin/fugitive.vim	/^function! s:can_diffoff(buf) abort$/;"	f
canvas	vim-css3-syntax/test/test.css	/^canvas {$/;"	t
capslock	vim-capslock/plugin/capslock.vim	/^augroup capslock$/;"	a
capture	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:capture(name)$/;"	f
capture	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture(...)$/;"	f
capture	vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:capture(command) abort$/;"	f
capture_list	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:capture_list(...)$/;"	f
catchException	jasmine/src/core/Env.js	/^    var catchException = function(e) {$/;"	f
catchExceptions	jasmine/src/core/Env.js	/^    this.catchExceptions = function(value) {$/;"	f
catchingExceptions	jasmine/lib/jasmine-core/boot.js	/^  var catchingExceptions = queryString.getParam("catch");$/;"	v
catchingExceptions	jasmine/lib/jasmine-core/boot/boot.js	/^  var catchingExceptions = queryString.getParam("catch");$/;"	v
catchingExceptions	jasmine/src/core/Env.js	/^    this.catchingExceptions = function() {$/;"	f
cfile	vim-fugitive/plugin/fugitive.vim	/^function! s:cfile() abort$/;"	f
chCwd	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chCwd(node)$/;"	f
chRoot	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:chRoot(node)$/;"	f
changesurround	vim-surround/plugin/surround.vim	/^function! s:changesurround(...) " {{{1$/;"	f
char_range	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
char_range	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:char_range(from, to) abort$/;"	f
check_async_cache	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_async_cache() "{{{$/;"	f
check_changed_buffer	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_changed_buffer(bufnr) "{{{$/;"	f
check_fallback	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:check_fallback(cur_text) "{{{$/;"	f
check_force_omni	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:check_force_omni(cur_text) "{{{$/;"	f
check_in_do_auto_complete	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:check_in_do_auto_complete() "{{{$/;"	f
check_old_cache	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:check_old_cache(cache_dir, filename) abort$/;"	f
check_source	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:check_source() "{{{$/;"	f
chomp	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chomp(str) abort "{{{$/;"	f
chop	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:chop(str) abort "{{{$/;"	f
classifiers	jasmine/setup.py	/^    classifiers=[$/;"	v
clean	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:clean() abort "{{{$/;"	f
clear	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clear	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:clear(list) abort$/;"	f
clearStack	jasmine/src/core/Env.js	/^    function clearStack(fn) {$/;"	f
closeChildren	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeChildren(node)$/;"	f
closeCurrentDir	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeCurrentDir(node)$/;"	f
closeTreeWindow	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:closeTreeWindow()$/;"	f
close_preview_window	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:close_preview_window() "{{{$/;"	f
closematch	vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
cmdheight.get	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.get()$/;"	f
cmdheight.restore	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.restore()$/;"	f
cmdheight.save	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:cmdheight.save()$/;"	f
codecs	syntastic/syntax_checkers/python/codec.py	/^import codecs$/;"	i
color_helper#color_name_to_hex	vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#color_name_to_hex(color_name)$/;"	f
color_helper#dec_to_hex	vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#dec_to_hex(arg, padding)$/;"	f
color_helper#hex_color_darken	vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_darken(color, percent)$/;"	f
color_helper#hex_color_lighten	vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_lighten(color, percent)$/;"	f
color_helper#hex_color_to_rgb	vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_color_to_rgb(hex_color)$/;"	f
color_helper#hex_to_dec	vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#hex_to_dec(arg)$/;"	f
color_helper#rgb_color_to_hex	vim-indent-guides/autoload/color_helper.vim	/^function! color_helper#rgb_color_to_hex(rgb_color)$/;"	f
colors_name	vim-colors-solarized/colors/solarized.vim	/^let colors_name = "solarized"$/;"	v
combinations	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
combinations	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:combinations(list, r) abort$/;"	f
command	vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:command(cmd, ...)$/;"	f
command	vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
common_head	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:common_head(strs) abort$/;"	f
compare	vim-neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! s:compare(i1, i2)$/;"	f
compare	vim-neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! s:compare(i1, i2)$/;"	f
compare_source_rank	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! s:compare_source_rank(i1, i2)$/;"	f
complete_key	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:complete_key(key) "{{{$/;"	f
concat	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:concat(list) abort$/;"	f
concat	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:concat(list) abort$/;"	f
configured_tree	vim-fugitive/plugin/fugitive.vim	/^function! s:configured_tree(git_dir) abort$/;"	f
conj	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
conj	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:conj(xs, x) abort$/;"	f
cons	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
cons	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:cons(x, xs) abort$/;"	f
consoleFns	jasmine/lib/jasmine-core/spec/node_suite.js	/^var consoleFns = require('..\/lib\/console\/console.js');$/;"	v
consoleFns	jasmine/spec/node_suite.js	/^var consoleFns = require('..\/lib\/console\/console.js');$/;"	v
contains_multibyte	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:contains_multibyte(str) abort "{{{$/;"	f
convertMigemo	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertMigemo(re) "{{{$/;"	f
convertRegep	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertRegep(input) "{{{$/;"	f
convertSmartcase	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartcase(re, char) "{{{$/;"	f
convertSmartsign	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convertSmartsign(chars) "{{{$/;"	f
convert_t_regexp	vim-easymotion/autoload/EasyMotion.vim	/^function! s:convert_t_regexp(re, direction) "{{{$/;"	f
converter.filter	vim-neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	vim-neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	vim-neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	vim-neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	vim-neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! s:converter.filter(context) "{{{$/;"	f
converter.filter	vim-neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! s:converter.filter(context) "{{{$/;"	f
core_spec_files	jasmine/lib/jasmine-core.rb	/^      def core_spec_files$/;"	f	class:Jasmine.Core
cpath	vim-fugitive/plugin/fugitive.vim	/^function! s:cpath(path) abort$/;"	f
cs	vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
css_files	jasmine/lib/jasmine-core.rb	/^      def css_files$/;"	f	class:Jasmine.Core
css_files	jasmine/lib/jasmine-core/core.py	/^    def css_files(cls):$/;"	m	class:Core
css_package	jasmine/lib/jasmine-core/core.py	/^    def css_package(cls):$/;"	m	class:Core
currentSegment.index	jasmine/src/core/TreeProcessor.js	/^          currentSegment = {index: result.length, owner: node, nodes: [], min: defaultMin, max: defaultMax};$/;"	p
currentSpecCallbackDepth	jasmine/src/core/Env.js	/^    var currentSpecCallbackDepth = 0;$/;"	v
currentWindowOnload	jasmine/lib/jasmine-core/boot.js	/^  var currentWindowOnload = window.onload;$/;"	v
currentWindowOnload	jasmine/lib/jasmine-core/boot/boot.js	/^  var currentWindowOnload = window.onload;$/;"	v
current_compiler	vim-haml/compiler/haml.vim	/^let current_compiler = "haml"$/;"	v
current_compiler	vim-haml/compiler/sass.vim	/^let current_compiler = "sass"$/;"	v
current_file_name	vim-angular/spec/spec_helper.rb	/^  def current_file_name$/;"	f
cx	jasmine/lib/jasmine-core/json2.js	/^    var cx,$/;"	v
d	vim-easymotion/t/easymotion_spec.vim	/^        normal! d$/;"	m
dashcase	vim-angular/plugin/angular.vim	/^function! s:dashcase(word) abort$/;"	f
db1	vim-easymotion/t/operator_pending_spec.vim	/^        normal db1$/;"	m
db2	vim-easymotion/t/operator_pending_spec.vim	/^        normal db2$/;"	m
debug	vim-tagbar/autoload/tagbar.vim	/^function! s:debug(msg) abort$/;"	f
default_config	vim-easymotion/autoload/EasyMotion.vim	/^function! s:default_config() abort$/;"	f
default_mapping	vim-easymotion/plugin/EasyMotion.vim	/^    function! s:default_mapping(motions, do_mapping) "{{{$/;"	f
default_search_term	vim-angular/spec/gf_file_spec.rb	/^  def default_search_term$/;"	f
define_commands	vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands() abort$/;"	f
delete	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:delete(cache_dir, filename) abort$/;"	f
deleteBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:deleteBookmark(bm)$/;"	f
deletefile	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:deletefile(cache_dir, filename) abort$/;"	f
dep_from_git	javascript-libraries-syntax.vim/Makefile	/^dep_from_git = \\$/;"	m
dep_from_svn	javascript-libraries-syntax.vim/Makefile	/^dep_from_svn = \\$/;"	m
describe	jasmine/src/core/Env.js	/^    this.describe = function(description, specDefinitions) {$/;"	f
description	jasmine/setup.py	/^    description=('Jasmine is a Behavior Driven Development testing framework for JavaScript. It does not rely on '+$/;"	v
dfpa	vim-easymotion/t/easymotion_spec.vim	/^        normal! dfpa$/;"	m
did_angularjs_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularjs.coffee.vim	/^    let did_angularjs_coffee_syntax_inits = 1$/;"	v
did_angularjs_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularjs.javascript.vim	/^    let did_angularjs_javascript_syntax_inits = 1$/;"	v
did_angularjs_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularjs.ls.vim	/^    let did_angularjs_ls_syntax_inits = 1$/;"	v
did_angularjs_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularjs.typescript.vim	/^    let did_angularjs_typescript_syntax_inits = 1$/;"	v
did_angularui_router_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.coffee.vim	/^    let did_angularui_router_coffee_syntax_inits = 1$/;"	v
did_angularui_router_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.javascript.vim	/^    let did_angularui_router_javascript_syntax_inits = 1$/;"	v
did_angularui_router_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.ls.vim	/^    let did_angularui_router_ls_syntax_inits = 1$/;"	v
did_angularui_router_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/angularuirouter.typescript.vim	/^    let did_angularui_router_typescript_syntax_inits = 1$/;"	v
did_backbone_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/backbone.coffee.vim	/^    let did_backbone_coffee_syntax_inits = 1$/;"	v
did_backbone_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/backbone.javascript.vim	/^    let did_backbone_javascript_syntax_inits = 1$/;"	v
did_backbone_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/backbone.ls.vim	/^    let did_backbone_ls_syntax_inits = 1$/;"	v
did_backbone_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/backbone.typescript.vim	/^    let did_backbone_typescript_syntax_inits = 1$/;"	v
did_chai_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/chai.coffee.vim	/^    let did_chai_coffee_syntax_inits = 1$/;"	v
did_chai_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/chai.javascript.vim	/^    let did_chai_javascript_syntax_inits = 1$/;"	v
did_chai_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/chai.ls.vim	/^    let did_chai_ls_syntax_inits = 1$/;"	v
did_chai_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/chai.typescript.vim	/^    let did_chai_typescript_syntax_inits = 1$/;"	v
did_javascript_syn_inits	vim-javascript-syntax/syntax/javascript.vim	/^		let did_javascript_syn_inits = 1$/;"	v
did_javascript_syn_inits	vim-javascript/syntax/javascript.vim	/^    let did_javascript_syn_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/flux.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jquery.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/react.coffee.vim	/^    let did_jquery_coffee_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/flux.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jquery.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/react.javascript.vim	/^    let did_jquery_javascript_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/flux.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jquery.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/react.ls.vim	/^    let did_jquery_ls_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/flux.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jquery.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_jquery_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/react.typescript.vim	/^    let did_jquery_typescript_syntax_inits = 1$/;"	v
did_prelude_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/prelude.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/sugar.coffee.vim	/^    let did_prelude_coffee_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/prelude.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/sugar.javascript.vim	/^    let did_prelude_javascript_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/prelude.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/sugar.ls.vim	/^    let did_prelude_ls_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/prelude.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_prelude_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/sugar.typescript.vim	/^    let did_prelude_typescript_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jasmine.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/requirejs.coffee.vim	/^    let did_requirejs_coffee_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jasmine.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/requirejs.javascript.vim	/^    let did_requirejs_javascript_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jasmine.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/requirejs.ls.vim	/^    let did_requirejs_ls_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/jasmine.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_requirejs_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/requirejs.typescript.vim	/^    let did_requirejs_typescript_syntax_inits = 1$/;"	v
did_underscore_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/handlebars.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_coffee_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/underscore.coffee.vim	/^    let did_underscore_coffee_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/handlebars.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_javascript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/underscore.javascript.vim	/^    let did_underscore_javascript_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/handlebars.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_ls_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/underscore.ls.vim	/^    let did_underscore_ls_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/handlebars.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
did_underscore_typescript_syntax_inits	javascript-libraries-syntax.vim/autoload/syntax/underscore.typescript.vim	/^    let did_underscore_typescript_syntax_inits = 1$/;"	v
diff_modifier	vim-fugitive/plugin/fugitive.vim	/^function! s:diff_modifier(count) abort$/;"	f
diff_restore	vim-fugitive/plugin/fugitive.vim	/^function! s:diff_restore() abort$/;"	f
diff_window_count	vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count() abort$/;"	f
diffidx	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:diffidx(a, b) abort$/;"	f
diffoff	vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff() abort$/;"	f
diffoff_all	vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir) abort$/;"	f
diffthis	vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis() abort$/;"	f
disable	vim-capslock/plugin/capslock.vim	/^function! s:disable(mode) abort$/;"	f
displayHelp	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:displayHelp()$/;"	f
dist	jasmine/grunt/config/compress.js	/^function dist(path) { return root("dist\/" + path); }$/;"	f
div	vim-css3-syntax/test/test.css	/^  div {$/;"	t
do_gf	vim-angular/spec/gf_file_spec.rb	/^  def do_gf(starting_file, starting_file_contents, search_term = default_search_term)$/;"	f
do_gf_from_directive_that_references!	vim-angular/spec/gf_file_spec.rb	/^  def do_gf_from_directive_that_references!(template_url, search_term = default_search_term)$/;"	f
do_gf_from_view_that_references!	vim-angular/spec/gf_file_spec.rb	/^  def do_gf_from_view_that_references!(template_url)$/;"	f
do_tests	vim-emmet/unittest.vim	/^function! s:do_tests(...)$/;"	f
doautocmd_user	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:doautocmd_user(prefix, command)$/;"	f
dollar_add	vim-emmet/autoload/emmet/lang/html.vim	/^function! s:dollar_add(base,no) abort$/;"	f
dosurround	vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
ds	vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dstring	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:dstring(expr) abort$/;"	f
dw1	vim-easymotion/t/operator_pending_spec.vim	/^        normal dw1$/;"	m
dw2	vim-easymotion/t/operator_pending_spec.vim	/^        normal dw2$/;"	m
echomsg	vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:echomsg(hl, msg) abort$/;"	f
emacs.keymapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:emacs.keymapping(cmdline)$/;"	f
emmet#anchorizeURL	vim-emmet/autoload/emmet.vim	/^function! emmet#anchorizeURL(flag) abort$/;"	f
emmet#balanceTag	vim-emmet/autoload/emmet.vim	/^function! emmet#balanceTag(flag) range abort$/;"	f
emmet#codePretty	vim-emmet/autoload/emmet.vim	/^function! emmet#codePretty() range abort$/;"	f
emmet#completeTag	vim-emmet/autoload/emmet.vim	/^function! emmet#completeTag(findstart, base) abort$/;"	f
emmet#encodeImage	vim-emmet/autoload/emmet.vim	/^function! emmet#encodeImage() abort$/;"	f
emmet#expandAbbr	vim-emmet/autoload/emmet.vim	/^function! emmet#expandAbbr(mode, abbr) range abort$/;"	f
emmet#expandAbbrIntelligent	vim-emmet/autoload/emmet.vim	/^function! emmet#expandAbbrIntelligent(feedkey) abort$/;"	f
emmet#expandCursorExpr	vim-emmet/autoload/emmet.vim	/^function! emmet#expandCursorExpr(expand, mode) abort$/;"	f
emmet#expandDollarExpr	vim-emmet/autoload/emmet.vim	/^function! emmet#expandDollarExpr(expand) abort$/;"	f
emmet#expandWord	vim-emmet/autoload/emmet.vim	/^function! emmet#expandWord(abbr, type, orig) abort$/;"	f
emmet#getBaseType	vim-emmet/autoload/emmet.vim	/^function! emmet#getBaseType(type) abort$/;"	f
emmet#getDollarExprs	vim-emmet/autoload/emmet.vim	/^function! emmet#getDollarExprs(expand) abort$/;"	f
emmet#getDollarValueByKey	vim-emmet/autoload/emmet.vim	/^function! emmet#getDollarValueByKey(key) abort$/;"	f
emmet#getExpandos	vim-emmet/autoload/emmet.vim	/^function! emmet#getExpandos(type, key) abort$/;"	f
emmet#getFileType	vim-emmet/autoload/emmet.vim	/^function! emmet#getFileType(...) abort$/;"	f
emmet#getFilters	vim-emmet/autoload/emmet.vim	/^function! emmet#getFilters(type) abort$/;"	f
emmet#getIndentation	vim-emmet/autoload/emmet.vim	/^function! emmet#getIndentation(...) abort$/;"	f
emmet#getResource	vim-emmet/autoload/emmet.vim	/^function! emmet#getResource(type, name, default) abort$/;"	f
emmet#getSettings	vim-emmet/autoload/emmet.vim	/^function! emmet#getSettings() abort$/;"	f
emmet#getSnippets	vim-emmet/autoload/emmet.vim	/^function! emmet#getSnippets(type) abort$/;"	f
emmet#imageSize	vim-emmet/autoload/emmet.vim	/^function! emmet#imageSize() abort$/;"	f
emmet#isExpandable	vim-emmet/autoload/emmet.vim	/^function! emmet#isExpandable() abort$/;"	f
emmet#isExtends	vim-emmet/autoload/emmet.vim	/^function! emmet#isExtends(type, extend) abort$/;"	f
emmet#lang#css#balanceTag	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#balanceTag(flag) range abort$/;"	f
emmet#lang#css#encodeImage	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#encodeImage() abort$/;"	f
emmet#lang#css#findTokens	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#findTokens(str) abort$/;"	f
emmet#lang#css#imageSize	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#imageSize() abort$/;"	f
emmet#lang#css#moveNextPrev	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrev(flag) abort$/;"	f
emmet#lang#css#moveNextPrevItem	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#css#parseIntoTree	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#css#parseTag	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#parseTag(tag) abort$/;"	f
emmet#lang#css#removeTag	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#removeTag() abort$/;"	f
emmet#lang#css#splitJoinTag	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#splitJoinTag() abort$/;"	f
emmet#lang#css#toString	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#css#toggleComment	vim-emmet/autoload/emmet/lang/css.vim	/^function! emmet#lang#css#toggleComment() abort$/;"	f
emmet#lang#exists	vim-emmet/autoload/emmet/lang.vim	/^function! emmet#lang#exists(type) abort$/;"	f
emmet#lang#haml#balanceTag	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#balanceTag(flag) range abort$/;"	f
emmet#lang#haml#encodeImage	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#encodeImage() abort$/;"	f
emmet#lang#haml#findTokens	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#findTokens(str) abort$/;"	f
emmet#lang#haml#imageSize	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#imageSize() abort$/;"	f
emmet#lang#haml#moveNextPrev	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrev(flag) abort$/;"	f
emmet#lang#haml#moveNextPrevItem	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#haml#parseIntoTree	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#haml#parseTag	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#parseTag(tag) abort$/;"	f
emmet#lang#haml#removeTag	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#removeTag() abort$/;"	f
emmet#lang#haml#splitJoinTag	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#splitJoinTag() abort$/;"	f
emmet#lang#haml#toString	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#haml#toggleComment	vim-emmet/autoload/emmet/lang/haml.vim	/^function! emmet#lang#haml#toggleComment() abort$/;"	f
emmet#lang#html#balanceTag	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#balanceTag(flag) range abort$/;"	f
emmet#lang#html#encodeImage	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#encodeImage() abort$/;"	f
emmet#lang#html#findTokens	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#findTokens(str) abort$/;"	f
emmet#lang#html#imageSize	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#imageSize() abort$/;"	f
emmet#lang#html#moveNextPrev	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrev(flag) abort$/;"	f
emmet#lang#html#moveNextPrevItem	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#html#parseIntoTree	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#html#parseTag	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#parseTag(tag) abort$/;"	f
emmet#lang#html#removeTag	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#removeTag() abort$/;"	f
emmet#lang#html#splitJoinTag	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#splitJoinTag() abort$/;"	f
emmet#lang#html#toString	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#html#toggleComment	vim-emmet/autoload/emmet/lang/html.vim	/^function! emmet#lang#html#toggleComment() abort$/;"	f
emmet#lang#jade#balanceTag	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#balanceTag(flag) range abort$/;"	f
emmet#lang#jade#encodeImage	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#encodeImage() abort$/;"	f
emmet#lang#jade#findTokens	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#findTokens(str) abort$/;"	f
emmet#lang#jade#imageSize	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#imageSize() abort$/;"	f
emmet#lang#jade#moveNextPrev	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrev(flag) abort$/;"	f
emmet#lang#jade#moveNextPrevItem	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#jade#parseIntoTree	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#jade#parseTag	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#parseTag(tag) abort$/;"	f
emmet#lang#jade#removeTag	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#removeTag() abort$/;"	f
emmet#lang#jade#splitJoinTag	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#splitJoinTag() abort$/;"	f
emmet#lang#jade#toString	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#jade#toggleComment	vim-emmet/autoload/emmet/lang/jade.vim	/^function! emmet#lang#jade#toggleComment() abort$/;"	f
emmet#lang#less#balanceTag	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#balanceTag(flag) range abort$/;"	f
emmet#lang#less#encodeImage	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#encodeImage() abort$/;"	f
emmet#lang#less#findTokens	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#findTokens(str) abort$/;"	f
emmet#lang#less#imageSize	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#imageSize() abort$/;"	f
emmet#lang#less#moveNextPrev	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrev(flag) abort$/;"	f
emmet#lang#less#moveNextPrevItem	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#less#parseIntoTree	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#less#parseTag	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#parseTag(tag) abort$/;"	f
emmet#lang#less#removeTag	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#removeTag() abort$/;"	f
emmet#lang#less#splitJoinTag	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#splitJoinTag() abort$/;"	f
emmet#lang#less#toString	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#less#toggleComment	vim-emmet/autoload/emmet/lang/less.vim	/^function! emmet#lang#less#toggleComment() abort$/;"	f
emmet#lang#sass#balanceTag	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#balanceTag(flag) range abort$/;"	f
emmet#lang#sass#encodeImage	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#encodeImage() abort$/;"	f
emmet#lang#sass#findTokens	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#findTokens(str) abort$/;"	f
emmet#lang#sass#imageSize	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#imageSize() abort$/;"	f
emmet#lang#sass#moveNextPrev	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrev(flag) abort$/;"	f
emmet#lang#sass#moveNextPrevItem	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#sass#parseIntoTree	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#sass#parseTag	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#parseTag(tag) abort$/;"	f
emmet#lang#sass#removeTag	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#removeTag() abort$/;"	f
emmet#lang#sass#splitJoinTag	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#splitJoinTag() abort$/;"	f
emmet#lang#sass#toString	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#sass#toggleComment	vim-emmet/autoload/emmet/lang/sass.vim	/^function! emmet#lang#sass#toggleComment() abort$/;"	f
emmet#lang#scss#balanceTag	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#balanceTag(flag) range abort$/;"	f
emmet#lang#scss#encodeImage	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#encodeImage() abort$/;"	f
emmet#lang#scss#findTokens	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#findTokens(str) abort$/;"	f
emmet#lang#scss#imageSize	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#imageSize() abort$/;"	f
emmet#lang#scss#moveNextPrev	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrev(flag) abort$/;"	f
emmet#lang#scss#moveNextPrevItem	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#scss#parseIntoTree	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#scss#parseTag	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#parseTag(tag) abort$/;"	f
emmet#lang#scss#removeTag	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#removeTag() abort$/;"	f
emmet#lang#scss#splitJoinTag	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#splitJoinTag() abort$/;"	f
emmet#lang#scss#toString	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#scss#toggleComment	vim-emmet/autoload/emmet/lang/scss.vim	/^function! emmet#lang#scss#toggleComment() abort$/;"	f
emmet#lang#slim#balanceTag	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#balanceTag(flag) range abort$/;"	f
emmet#lang#slim#encodeImage	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#encodeImage() abort$/;"	f
emmet#lang#slim#findTokens	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#findTokens(str) abort$/;"	f
emmet#lang#slim#imageSize	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#imageSize() abort$/;"	f
emmet#lang#slim#moveNextPrev	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrev(flag) abort$/;"	f
emmet#lang#slim#moveNextPrevItem	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#moveNextPrevItem(flag) abort$/;"	f
emmet#lang#slim#parseIntoTree	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseIntoTree(abbr, type) abort$/;"	f
emmet#lang#slim#parseTag	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#parseTag(tag) abort$/;"	f
emmet#lang#slim#removeTag	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#removeTag() abort$/;"	f
emmet#lang#slim#splitJoinTag	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#splitJoinTag() abort$/;"	f
emmet#lang#slim#toString	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toString(settings, current, type, inline, filters, itemno, indent) abort$/;"	f
emmet#lang#slim#toggleComment	vim-emmet/autoload/emmet/lang/slim.vim	/^function! emmet#lang#slim#toggleComment() abort$/;"	f
emmet#lorem#en#expand	vim-emmet/autoload/emmet/lorem/en.vim	/^function! emmet#lorem#en#expand(command) abort$/;"	f
emmet#lorem#ja#expand	vim-emmet/autoload/emmet/lorem/ja.vim	/^function! emmet#lorem#ja#expand(command) abort$/;"	f
emmet#mergeConfig	vim-emmet/autoload/emmet.vim	/^function! emmet#mergeConfig(lhs, rhs) abort$/;"	f
emmet#mergeLines	vim-emmet/autoload/emmet.vim	/^function! emmet#mergeLines() range abort$/;"	f
emmet#moveNextPrev	vim-emmet/autoload/emmet.vim	/^function! emmet#moveNextPrev(flag) abort$/;"	f
emmet#moveNextPrevItem	vim-emmet/autoload/emmet.vim	/^function! emmet#moveNextPrevItem(flag) abort$/;"	f
emmet#newNode	vim-emmet/autoload/emmet.vim	/^function! emmet#newNode() abort$/;"	f
emmet#parseIntoTree	vim-emmet/autoload/emmet.vim	/^function! emmet#parseIntoTree(abbr, type) abort$/;"	f
emmet#reExpandDollarExpr	vim-emmet/autoload/emmet.vim	/^function! emmet#reExpandDollarExpr(expand, times) abort$/;"	f
emmet#removeTag	vim-emmet/autoload/emmet.vim	/^function! emmet#removeTag() abort$/;"	f
emmet#splitFilterArg	vim-emmet/autoload/emmet.vim	/^function! emmet#splitFilterArg(filters) abort$/;"	f
emmet#splitJoinTag	vim-emmet/autoload/emmet.vim	/^function! emmet#splitJoinTag() abort$/;"	f
emmet#toString	vim-emmet/autoload/emmet.vim	/^function! emmet#toString(...) abort$/;"	f
emmet#toggleComment	vim-emmet/autoload/emmet.vim	/^function! emmet#toggleComment() abort$/;"	f
emmet#unescapeDollarExpr	vim-emmet/autoload/emmet.vim	/^function! emmet#unescapeDollarExpr(expand) abort$/;"	f
emmet#updateTag	vim-emmet/autoload/emmet.vim	/^function! emmet#updateTag() abort$/;"	f
emmet#useFilter	vim-emmet/autoload/emmet.vim	/^function! emmet#useFilter(filters, filter) abort$/;"	f
emmet#util#cache	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#cache(name, ...) abort$/;"	f
emmet#util#closePopup	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#closePopup() abort$/;"	f
emmet#util#cursorInRegion	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#cursorInRegion(region) abort$/;"	f
emmet#util#deleteContent	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#deleteContent(region) abort$/;"	f
emmet#util#getContent	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#getContent(region) abort$/;"	f
emmet#util#getContentFromURL	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#getContentFromURL(url) abort$/;"	f
emmet#util#getImageSize	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#getImageSize(fn) abort$/;"	f
emmet#util#getTextFromHTML	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#getTextFromHTML(buf) abort$/;"	f
emmet#util#getVisualBlock	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#getVisualBlock() abort$/;"	f
emmet#util#getcurpos	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#getcurpos() abort$/;"	f
emmet#util#imageSizeWithImageMagick	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#imageSizeWithImageMagick(fn) abort$/;"	f
emmet#util#isImageMagickInstalled	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#isImageMagickInstalled() abort$/;"	f
emmet#util#pointInRegion	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#pointInRegion(point, region) abort$/;"	f
emmet#util#rand	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#rand() abort$/;"	f
emmet#util#regionInRegion	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#regionInRegion(outer, inner) abort$/;"	f
emmet#util#regionIsValid	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#regionIsValid(region) abort$/;"	f
emmet#util#searchRegion	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#searchRegion(start, end) abort$/;"	f
emmet#util#selectRegion	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#selectRegion(region) abort$/;"	f
emmet#util#setContent	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#setContent(region, content) abort$/;"	f
emmet#util#srand	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#srand(seed) abort$/;"	f
emmet#util#unique	vim-emmet/autoload/emmet/util.vim	/^function! emmet#util#unique(arr) abort$/;"	f
emmet_unittest_complete	vim-emmet/unittest.vim	/^function! s:emmet_unittest_complete(arglead, cmdline, cmdpos)$/;"	f
enable	vim-capslock/plugin/capslock.vim	/^function! s:enable(mode, ...) abort$/;"	f
enabled	vim-capslock/plugin/capslock.vim	/^function! s:enabled(mode) abort$/;"	f
env	jasmine/lib/jasmine-core/boot.js	/^  var env = jasmine.getEnv();$/;"	v
env	jasmine/lib/jasmine-core/boot/boot.js	/^  var env = jasmine.getEnv();$/;"	v
env	jasmine/lib/jasmine-core/spec/node_suite.js	/^var env = jasmine.getEnv();$/;"	v
env	jasmine/spec/node_suite.js	/^var env = jasmine.getEnv();$/;"	v
env.specFilter	jasmine/lib/jasmine-core/boot.js	/^  });$/;"	f
env.specFilter	jasmine/lib/jasmine-core/boot/boot.js	/^  });$/;"	f
eq	jasmine/src/core/matchers/matchersUtil.js	/^  function eq(a, b, aStack, bStack, customTesters) {$/;"	f
eq.eq.return.hasOwnProperty	jasmine/src/core/matchers/matchersUtil.js	/^      return Object.prototype.hasOwnProperty.call(obj, key);$/;"	m
eq.has	jasmine/src/core/matchers/matchersUtil.js	/^    function has(obj, key) {$/;"	f
eq.isFunction	jasmine/src/core/matchers/matchersUtil.js	/^    function isFunction(obj) {$/;"	f
eq.return	jasmine/src/core/matchers/matchersUtil.js	/^    function has(obj, key) {$/;"	c
error	vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:error(text, where)$/;"	f
error	vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:error(msg) abort$/;"	f
escape	vim-emmet/unittest.vim	/^function! s:escape(str)$/;"	f
escape	vim-neocomplete/autoload/neocomplete/util.vim	/^function! s:escape(path)"{{{$/;"	f
escape_file_searching	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_file_searching(buffer_name) abort$/;"	f
escape_pattern	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:escape_pattern(str) abort$/;"	f
escape_regexp_char	vim-easymotion/autoload/EasyMotion.vim	/^function! s:escape_regexp_char(char) "{{{$/;"	f
escape_special_key	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:escape_special_key(key)$/;"	f
execute	jasmine/src/core/Env.js	/^    this.execute = function(runnablesToRun) {$/;"	f
executeSpecs	jasmine/lib/jasmine-core/spec/node_suite.js	/^function executeSpecs(specs, done, isVerbose, showColors) {$/;"	f
executeSpecs	jasmine/spec/node_suite.js	/^function executeSpecs(specs, done, isVerbose, showColors) {$/;"	f
exists	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:exists(name) abort$/;"	f
exists	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:exists(name) abort$/;"	f
exists_current_source	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:exists_current_source() "{{{$/;"	f
exit	syntastic/syntax_checkers/python/codec.py	/^from sys import argv, exit$/;"	i
exit	syntastic/syntax_checkers/python/compile.py	/^from sys import argv, exit$/;"	i
exitcallback	vim-capslock/plugin/capslock.vim	/^function! s:exitcallback() abort$/;"	f
expand_modules	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expand_modules	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:expand_modules(entry, all) abort$/;"	f
expect	jasmine/src/core/Env.js	/^    this.expect = function(actual) {$/;"	f
extend	jasmine/lib/jasmine-core/boot.js	/^  function extend(destination, source) {$/;"	f
extend	jasmine/lib/jasmine-core/boot/boot.js	/^  function extend(destination, source) {$/;"	f
extend	jasmine/lib/jasmine-core/spec/helpers/nodeDefineJasmineUnderTest.js	/^  function extend(destination, source) {$/;"	f
extend	jasmine/lib/jasmine-core/spec/node_suite.js	/^function extend(destination, source) {$/;"	f
extend	jasmine/spec/helpers/nodeDefineJasmineUnderTest.js	/^  function extend(destination, source) {$/;"	f
extend	jasmine/spec/node_suite.js	/^function extend(destination, source) {$/;"	f
extend	vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^function! s:extend(dict, src)$/;"	f
extractCustomPendingMessage	jasmine/src/core/Spec.js	/^  var extractCustomPendingMessage = function(e) {$/;"	f
extractafter	vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
f	jasmine/lib/jasmine-core/json2.js	/^    function f(n) {$/;"	f
f	jasmine/src/core/DelayedFunctionScheduler.js	/^      if (typeof(funcToCall) === 'string') {$/;"	f
f	vim-easymotion/t/easymotion_spec.vim	/^        map f <Plug>(easymotion-f)$/;"	m
f	vim-easymotion/t/operator_pending_spec.vim	/^        omap f <Plug>(easymotion-f)$/;"	m
f)	vim-easymotion/t/easymotion_spec.vim	/^        normal f)$/;"	m
f/	vim-easymotion/t/easymotion_spec.vim	/^        map f\/ <Plug>(easymotion-fn)$/;"	m
f1	vim-easymotion/t/easymotion_spec.vim	/^        normal f1$/;"	m
f:	vim-easymotion/t/easymotion_spec.vim	/^        normal f:$/;"	m
f;	vim-easymotion/t/easymotion_spec.vim	/^        normal f;$/;"	m
f;a	vim-easymotion/t/easymotion_spec.vim	/^        normal f;a$/;"	m
fH	vim-easymotion/t/easymotion_spec.vim	/^        normal fH$/;"	m
fHa	vim-easymotion/t/easymotion_spec.vim	/^        normal fHa$/;"	m
f^	vim-easymotion/t/easymotion_spec.vim	/^        normal f^$/;"	m
faa	vim-easymotion/t/easymotion_spec.vim	/^        normal faa$/;"	m
fail	jasmine/src/core/Env.js	/^    this.fail = function(error) {$/;"	f
fail.message	jasmine/src/core/matchers/toThrowError.js	/^        if (!(thrown instanceof Error)) {$/;"	f
fallback_opts	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^fallback_opts() ->$/;"	f
favicon	jasmine/lib/jasmine-core/core.py	/^    def favicon(cls):$/;"	m	class:Core
fb	vim-easymotion/t/easymotion_spec.vim	/^        normal fb$/;"	m
fba	vim-easymotion/t/easymotion_spec.vim	/^        normal fba$/;"	m
fd	vim-easymotion/t/easymotion_spec.vim	/^        normal fd$/;"	m
fdescribe	jasmine/src/core/Env.js	/^    this.fdescribe = function(description, specDefinitions) {$/;"	f
fetch_github	javascript-libraries-syntax.vim/Makefile	/^fetch_github = \\$/;"	m
fetch_local	javascript-libraries-syntax.vim/Makefile	/^fetch_local = @cp -v $(1) $(2) \\$/;"	m
fetch_url	javascript-libraries-syntax.vim/Makefile	/^fetch_url = \\$/;"	m
fh	vim-easymotion/t/easymotion_spec.vim	/^        normal fh$/;"	m
fha	vim-easymotion/t/easymotion_spec.vim	/^        normal fha$/;"	m
fhb	vim-easymotion/t/easymotion_spec.vim	/^        normal fhb$/;"	m
filereadable	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:filereadable(cache_dir, filename) abort$/;"	f
find	jasmine/lib/jasmine-core/jasmine-html.js	/^            createDom('span', {}, ' | Failures ')));$/;"	f
find	jasmine/src/html/HtmlReporter.js	/^            createDom('span', {}, ' | Failures ')));$/;"	f
find	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
find	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find(list, default, f) abort$/;"	f
findAndRevealPath	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:findAndRevealPath()$/;"	f
findFocusedAncestor	jasmine/src/core/Env.js	/^    function findFocusedAncestor(suite) {$/;"	f
findMotion	vim-easymotion/autoload/EasyMotion.vim	/^function! s:findMotion(num_strokes, direction) "{{{$/;"	f
find_definition	vim-angular/spec/gf_definition_spec.rb	/^  def find_definition(string_to_find_by)$/;"	f
find_index	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_index	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_index(xs, f, ...) abort$/;"	f
find_indices	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_indices	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_indices(xs, f, ...) abort$/;"	f
find_last_index	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_last_index	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:find_last_index(xs, f, ...) abort$/;"	f
find_packages	jasmine/setup.py	/^from setuptools import setup, find_packages, os$/;"	i
fit	jasmine/src/core/Env.js	/^    this.fit = function(description, fn, timeout){$/;"	f
fixindent	vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
flatten	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
flatten	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:flatten(list, ...) abort$/;"	f
fm	vim-easymotion/t/easymotion_spec.vim	/^        normal fm$/;"	m
fnameescape	vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
foa	vim-easymotion/t/easymotion_spec.vim	/^        normal foa$/;"	m
focusedRunnables	jasmine/src/core/Env.js	/^    var focusedRunnables = [];$/;"	v
foldl	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl(f, init, xs) abort$/;"	f
foldl1	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldl1	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldl1(f, xs) abort$/;"	f
foldr	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr(f, init, xs) abort$/;"	f
foldr1	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
foldr1	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:foldr1(f, xs) abort$/;"	f
fs	jasmine/lib/jasmine-core/spec/node_suite.js	/^var fs = require('fs');$/;"	v
fs	jasmine/spec/node_suite.js	/^var fs = require('fs');$/;"	v
fugitive	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#can_diffoff	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#can_diffoff(buf) abort$/;"	f
fugitive#cfile	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cfile() abort$/;"	f
fugitive#cwindow	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#cwindow() abort$/;"	f
fugitive#detect	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#detect(path) abort$/;"	f
fugitive#extract_git_dir	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#extract_git_dir(path) abort$/;"	f
fugitive#foldtext	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#foldtext() abort$/;"	f
fugitive#git_commands	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_commands() abort$/;"	f
fugitive#git_version	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#git_version(...) abort$/;"	f
fugitive#head	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#head(...) abort$/;"	f
fugitive#is_git_dir	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#is_git_dir(path) abort$/;"	f
fugitive#reload_status	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...) abort$/;"	f
fugitive#statusline	vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...) abort$/;"	f
fugitive_blame	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_foldtext	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_foldtext$/;"	a
fugitive_remove	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_status	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_status$/;"	a
fugitive_statusline	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_statusline$/;"	a
fugitive_temp	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
function.attemptAsync	jasmine/src/core/QueueRunner.js	/^    function attemptAsync(queueableFn) {$/;"	f
function.attemptAsync.clearTimeout	jasmine/src/core/QueueRunner.js	/^      var clearTimeout = function () {$/;"	f
function.attemptSync	jasmine/src/core/QueueRunner.js	/^    function attemptSync(queueableFn) {$/;"	f
function.complete	jasmine/src/core/Spec.js	/^    function complete(enabledAgain) {$/;"	f
function.defaultNegativeCompare	jasmine/src/core/Expectation.js	/^      function defaultNegativeCompare() {$/;"	f
function.handleException	jasmine/src/core/QueueRunner.js	/^    function handleException(e, queueableFn) {$/;"	f
function.onException	jasmine/src/core/QueueRunner.js	/^    function onException(e) {$/;"	f
fxa	vim-easymotion/t/easymotion_spec.vim	/^        normal fxa$/;"	m
fz	vim-easymotion/t/easymotion_spec.vim	/^        normal fz$/;"	m
fza	vim-easymotion/t/easymotion_spec.vim	/^        normal fza$/;"	m
g:EasyMotion_add_search_history	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_add_search_history = get(g: , 'EasyMotion_add_search_history' , 1)$/;"	v
g:EasyMotion_command_line_key_mappings	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_command_line_key_mappings =$/;"	v
g:EasyMotion_cursor_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_cursor_highlight   = get(g: , 'EasyMotion_cursor_highlight'   , 1)$/;"	v
g:EasyMotion_disable_two_key_combo	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_disable_two_key_combo     =$/;"	v
g:EasyMotion_do_mapping	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_mapping         = get(g: , 'EasyMotion_do_mapping'         , 1)$/;"	v
g:EasyMotion_do_shade	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_do_shade           = get(g: , 'EasyMotion_do_shade'           , 1)$/;"	v
g:EasyMotion_enter_jump_first	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_enter_jump_first   = get(g: , 'EasyMotion_enter_jump_first'   , 0)$/;"	v
g:EasyMotion_force_csapprox	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_force_csapprox     = get(g: , 'EasyMotion_force_csapprox'     , 0)$/;"	v
g:EasyMotion_grouping	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_grouping           = get(g: , 'EasyMotion_grouping'           , 1)$/;"	v
g:EasyMotion_hl2_first_group_target	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_first_group_target  = get(g:,$/;"	v
g:EasyMotion_hl2_second_group_target	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl2_second_group_target = get(g:,$/;"	v
g:EasyMotion_hl_group_shade	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_shade          = get(g:,$/;"	v
g:EasyMotion_hl_group_target	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_group_target         = get(g:,$/;"	v
g:EasyMotion_hl_inc_cursor	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_cursor     = get(g:,$/;"	v
g:EasyMotion_hl_inc_search	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_inc_search     = get(g:,$/;"	v
g:EasyMotion_hl_move	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let g:EasyMotion_hl_move           = get(g:,$/;"	v
g:EasyMotion_inc_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_inc_highlight      = get(g: , 'EasyMotion_inc_highlight'      , 1)$/;"	v
g:EasyMotion_keys	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_keys               = get(g:,$/;"	v
g:EasyMotion_keys	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_keys = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'$/;"	v
g:EasyMotion_keys	vim-easymotion/t/operator_pending_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_keys	vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_keys = '123456789'$/;"	v
g:EasyMotion_landing_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_landing_highlight  = get(g: , 'EasyMotion_landing_highlight'  , 0)$/;"	v
g:EasyMotion_loaded	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_loaded = 1$/;"	v
g:EasyMotion_move_highlight	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_move_highlight     = get(g: , 'EasyMotion_move_highlight'     , 1)$/;"	v
g:EasyMotion_off_screen_search	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_off_screen_search  = get(g: , 'EasyMotion_off_screen_search'  , 1)$/;"	v
g:EasyMotion_off_screen_search	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 0$/;"	v
g:EasyMotion_off_screen_search	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_off_screen_search = 1$/;"	v
g:EasyMotion_prompt	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_prompt             =$/;"	v
g:EasyMotion_show_prompt	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_show_prompt        = get(g: , 'EasyMotion_show_prompt'        , 1)$/;"	v
g:EasyMotion_skipfoldedline	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_skipfoldedline     = get(g: , 'EasyMotion_skipfoldedline'     , 1)$/;"	v
g:EasyMotion_smartcase	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_smartcase          = get(g: , 'EasyMotion_smartcase'          , 0)$/;"	v
g:EasyMotion_smartcase	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 0$/;"	v
g:EasyMotion_smartcase	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_smartcase = 1$/;"	v
g:EasyMotion_space_jump_first	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_space_jump_first   = get(g: , 'EasyMotion_space_jump_first'   , 0)$/;"	v
g:EasyMotion_startofline	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_startofline        = get(g: , 'EasyMotion_startofline'        , 1)$/;"	v
g:EasyMotion_use_migemo	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_migemo         = get(g: , 'EasyMotion_use_migemo'         , 0)$/;"	v
g:EasyMotion_use_migemo	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_migemo = 1$/;"	v
g:EasyMotion_use_regexp	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_regexp         = get(g: , 'EasyMotion_use_regexp'         , 1)$/;"	v
g:EasyMotion_use_regexp	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 0$/;"	v
g:EasyMotion_use_regexp	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_regexp = 1$/;"	v
g:EasyMotion_use_smartsign_jp	vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_jp = 1$/;"	v
g:EasyMotion_use_smartsign_us	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 0$/;"	v
g:EasyMotion_use_smartsign_us	vim-easymotion/t/easymotion_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_smartsign_us	vim-easymotion/t/smartsign_spec.vim	/^        let g:EasyMotion_use_smartsign_us = 1$/;"	v
g:EasyMotion_use_upper	vim-easymotion/plugin/EasyMotion.vim	/^let g:EasyMotion_use_upper          = get(g: , 'EasyMotion_use_upper'          , 0)$/;"	v
g:NERDTree	nerdtree/lib/nerdtree/nerdtree.vim	/^let g:NERDTree = s:NERDTree$/;"	v
g:NERDTreeAutoDeleteBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^    let g:NERDTreeAutoDeleteBuffer = 0$/;"	v
g:NERDTreeBookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeCreator	nerdtree/lib/nerdtree/creator.vim	/^let g:NERDTreeCreator = s:Creator$/;"	v
g:NERDTreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeEvent	nerdtree/lib/nerdtree/event.vim	/^let g:NERDTreeEvent = s:Event$/;"	v
g:NERDTreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeFlagSet	nerdtree/lib/nerdtree/flag_set.vim	/^let g:NERDTreeFlagSet = s:FlagSet$/;"	v
g:NERDTreeIgnore	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreeKeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let g:NERDTreeKeyMap = s:KeyMap$/;"	v
g:NERDTreeMapNextHunk	nerdtree-git/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapNextHunk = ']c'$/;"	v
g:NERDTreeMapPrevHunk	nerdtree-git/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeMapPrevHunk = '[c'$/;"	v
g:NERDTreeMenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let g:NERDTreeMenuController = s:MenuController$/;"	v
g:NERDTreeMenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let g:NERDTreeMenuItem = s:MenuItem$/;"	v
g:NERDTreeOpener	nerdtree/lib/nerdtree/opener.vim	/^let g:NERDTreeOpener = s:Opener$/;"	v
g:NERDTreePath	nerdtree/lib/nerdtree/path.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreePathNotifier	nerdtree/lib/nerdtree/notifier.vim	/^let g:NERDTreePathNotifier = deepcopy(s:Notifier)$/;"	v
g:NERDTreeShowGitStatus	nerdtree-git/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeShowGitStatus = 1$/;"	v
g:NERDTreeSortOrder	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTree')?b:NERDTree.root.path.str():''}"$/;"	v
g:NERDTreeUI	nerdtree/lib/nerdtree/ui.vim	/^let g:NERDTreeUI = s:UI$/;"	v
g:NERDTreeUpdateOnCursorHold	nerdtree-git/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnCursorHold = 1$/;"	v
g:NERDTreeUpdateOnWrite	nerdtree-git/nerdtree_plugin/git_status.vim	/^    let g:NERDTreeUpdateOnWrite = 1$/;"	v
g:SyntasticAutoloclistNotifier	syntastic/plugin/syntastic/autoloclist.vim	/^let g:SyntasticAutoloclistNotifier = {}$/;"	v
g:SyntasticBalloonsNotifier	syntastic/plugin/syntastic/balloons.vim	/^let g:SyntasticBalloonsNotifier = {}$/;"	v
g:SyntasticChecker	syntastic/plugin/syntastic/checker.vim	/^let g:SyntasticChecker = {}$/;"	v
g:SyntasticCursorNotifier	syntastic/plugin/syntastic/cursor.vim	/^let g:SyntasticCursorNotifier = {}$/;"	v
g:SyntasticHighlightingNotifier	syntastic/plugin/syntastic/highlighting.vim	/^let g:SyntasticHighlightingNotifier = {}$/;"	v
g:SyntasticLoclist	syntastic/plugin/syntastic/loclist.vim	/^let g:SyntasticLoclist = {}$/;"	v
g:SyntasticModeMap	syntastic/plugin/syntastic/modemap.vim	/^let g:SyntasticModeMap = {}$/;"	v
g:SyntasticNotifiers	syntastic/plugin/syntastic/notifiers.vim	/^let g:SyntasticNotifiers = {}$/;"	v
g:SyntasticRegistry	syntastic/plugin/syntastic/registry.vim	/^let g:SyntasticRegistry = {}$/;"	v
g:SyntasticSignsNotifier	syntastic/plugin/syntastic/signs.vim	/^let g:SyntasticSignsNotifier = {}$/;"	v
g:_SYNTASTIC_DEBUG_AUTOCOMMANDS	syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_AUTOCOMMANDS  = 8$/;"	v
g:_SYNTASTIC_DEBUG_CHECKERS	syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_CHECKERS      = 32$/;"	v
g:_SYNTASTIC_DEBUG_LOCLIST	syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_LOCLIST       = 2$/;"	v
g:_SYNTASTIC_DEBUG_NOTIFICATIONS	syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_NOTIFICATIONS = 4$/;"	v
g:_SYNTASTIC_DEBUG_TRACE	syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_TRACE         = 1$/;"	v
g:_SYNTASTIC_DEBUG_VARIABLES	syntastic/plugin/syntastic.vim	/^let     g:_SYNTASTIC_DEBUG_VARIABLES     = 16$/;"	v
g:_SYNTASTIC_DEFAULTS	syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_DEFAULTS = {$/;"	v
g:_SYNTASTIC_START	syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_START = reltime()$/;"	v
g:_SYNTASTIC_UNAME	syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	syntastic/plugin/syntastic.vim	/^        let g:_SYNTASTIC_UNAME = split(syntastic#util#system('uname'), "\\n")[0]$/;"	v
g:_SYNTASTIC_UNAME	syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Unknown'$/;"	v
g:_SYNTASTIC_UNAME	syntastic/plugin/syntastic.vim	/^    let g:_SYNTASTIC_UNAME = 'Windows'$/;"	v
g:_SYNTASTIC_VERSION	syntastic/plugin/syntastic.vim	/^let g:_SYNTASTIC_VERSION = '3.7.0-34'$/;"	v
g:angular_find_ignore	vim-angular/plugin/angular.vim	/^  let g:angular_find_ignore = []$/;"	v
g:angular_find_ignore	vim-angular/plugin/angular.vim	/^let g:angular_find_ignore += [$/;"	v
g:clever_f_use_migemo	vim-easymotion/t/easymotion_spec.vim	/^        let g:clever_f_use_migemo = 0$/;"	v
g:emmet_curl_command	vim-emmet/plugin/emmet.vim	/^  let g:emmet_curl_command = 'curl -s -L -A Mozilla\/5.0'$/;"	v
g:emmet_debug	vim-emmet/plugin/emmet.vim	/^  let g:emmet_debug = 0$/;"	v
g:emmet_docroot	vim-emmet/plugin/emmet.vim	/^  let g:emmet_docroot = {}$/;"	v
g:emmet_html5	vim-emmet/plugin/emmet.vim	/^  let g:emmet_html5 = 1$/;"	v
g:fugitive_browse_handlers	vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_browse_handlers = []$/;"	v
g:fugitive_git_executable	vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:gitgutter_eager	git-gutter/plugin/gitgutter.vim	/^  let g:gitgutter_eager = 0$/;"	v
g:gitgutter_realtime	git-gutter/plugin/gitgutter.vim	/^  let g:gitgutter_realtime = 0$/;"	v
g:gitgutter_sign_column_always	git-gutter/test/testSignColumnAlways.vim	/^let g:gitgutter_sign_column_always=1$/;"	v
g:gitgutter_sign_removed_first_line	git-gutter/plugin/gitgutter.vim	/^  let g:gitgutter_sign_removed_first_line = '_^'$/;"	v
g:haml_self_closing_tags	vim-haml/indent/haml.vim	/^  let g:haml_self_closing_tags = 'base|link|meta|br|hr|img|input'$/;"	v
g:indent_guides_autocmds_enabled	vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_autocmds_enabled         = 0$/;"	v
g:indent_guides_color_hex_guibg_pattern	vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_hex_guibg_pattern  = 'guibg=\\zs' . g:indent_guides_color_hex_pattern . '\\ze'$/;"	v
g:indent_guides_color_hex_pattern	vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_hex_pattern        = '#[0-9A-Fa-f]\\{6\\}'$/;"	v
g:indent_guides_color_name_guibg_pattern	vim-indent-guides/plugin/indent_guides.vim	/^let g:indent_guides_color_name_guibg_pattern = "guibg='\\\\?\\\\zs[0-9A-Za-z ]\\\\+\\\\ze'\\\\?"$/;"	v
g:indent_guides_exclude_filetypes	vim-indent-guides/plugin/indent_guides.vim	/^  let g:indent_guides_exclude_filetypes = ['help']$/;"	v
g:javascript_conceal	vim-javascript/syntax/javascript.vim	/^  let g:javascript_conceal = 0$/;"	v
g:loaded_capslock	vim-capslock/plugin/capslock.vim	/^let g:loaded_capslock = 1$/;"	v
g:loaded_emmet_vim	vim-emmet/plugin/emmet.vim	/^let g:loaded_emmet_vim = 1$/;"	v
g:loaded_fugitive	vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_gitgutter	git-gutter/plugin/gitgutter.vim	/^let g:loaded_gitgutter = 1$/;"	v
g:loaded_indent_guides	vim-indent-guides/plugin/indent_guides.vim	/^let g:loaded_indent_guides = 1$/;"	v
g:loaded_neocomplete	vim-neocomplete/plugin/neocomplete.vim	/^let g:loaded_neocomplete = 1$/;"	v
g:loaded_neocomplete_buffer	vim-neocomplete/plugin/neocomplete/buffer.vim	/^let g:loaded_neocomplete_buffer = 1$/;"	v
g:loaded_neocomplete_dictionary	vim-neocomplete/plugin/neocomplete/dictionary.vim	/^let g:loaded_neocomplete_dictionary = 1$/;"	v
g:loaded_neocomplete_tag	vim-neocomplete/plugin/neocomplete/tag.vim	/^let g:loaded_neocomplete_tag = 1$/;"	v
g:loaded_nerdtree_autoload	nerdtree/autoload/nerdtree.vim	/^let g:loaded_nerdtree_autoload = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_nerdtree_git_status	nerdtree-git/nerdtree_plugin/git_status.vim	/^let g:loaded_nerdtree_git_status = 1$/;"	v
g:loaded_nerdtree_ui_glue_autoload	nerdtree/autoload/nerdtree/ui_glue.vim	/^let g:loaded_nerdtree_ui_glue_autoload = 1$/;"	v
g:loaded_surround	vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_syntastic_actionscript_mxmlc_checker	syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let g:loaded_syntastic_actionscript_mxmlc_checker = 1$/;"	v
g:loaded_syntastic_ada_gcc_checker	syntastic/syntax_checkers/ada/gcc.vim	/^let g:loaded_syntastic_ada_gcc_checker = 1$/;"	v
g:loaded_syntastic_ansible_ansible_lint_checker	syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let g:loaded_syntastic_ansible_ansible_lint_checker = 1$/;"	v
g:loaded_syntastic_apiblueprint_drafter_checker	syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let g:loaded_syntastic_apiblueprint_drafter_checker = 1$/;"	v
g:loaded_syntastic_applescript_osacompile_checker	syntastic/syntax_checkers/applescript/osacompile.vim	/^let g:loaded_syntastic_applescript_osacompile_checker = 1$/;"	v
g:loaded_syntastic_asciidoc_asciidoc_checker	syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let g:loaded_syntastic_asciidoc_asciidoc_checker = 1$/;"	v
g:loaded_syntastic_asm_gcc_checker	syntastic/syntax_checkers/asm/gcc.vim	/^let g:loaded_syntastic_asm_gcc_checker = 1$/;"	v
g:loaded_syntastic_bemhtml_bemhtmllint_checker	syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let g:loaded_syntastic_bemhtml_bemhtmllint_checker = 1$/;"	v
g:loaded_syntastic_bro_bro_checker	syntastic/syntax_checkers/bro/bro.vim	/^let g:loaded_syntastic_bro_bro_checker = 1$/;"	v
g:loaded_syntastic_c_autoload	syntastic/autoload/syntastic/c.vim	/^let g:loaded_syntastic_c_autoload = 1$/;"	v
g:loaded_syntastic_c_avrgcc_checker	syntastic/syntax_checkers/c/avrgcc.vim	/^let g:loaded_syntastic_c_avrgcc_checker = 1$/;"	v
g:loaded_syntastic_c_checkpatch_checker	syntastic/syntax_checkers/c/checkpatch.vim	/^let g:loaded_syntastic_c_checkpatch_checker = 1$/;"	v
g:loaded_syntastic_c_clang_check_checker	syntastic/syntax_checkers/c/clang_check.vim	/^let g:loaded_syntastic_c_clang_check_checker = 1$/;"	v
g:loaded_syntastic_c_clang_tidy_checker	syntastic/syntax_checkers/c/clang_tidy.vim	/^let g:loaded_syntastic_c_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_c_cppcheck_checker	syntastic/syntax_checkers/c/cppcheck.vim	/^let g:loaded_syntastic_c_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_c_gcc_checker	syntastic/syntax_checkers/c/gcc.vim	/^let g:loaded_syntastic_c_gcc_checker = 1$/;"	v
g:loaded_syntastic_c_make_checker	syntastic/syntax_checkers/c/make.vim	/^let g:loaded_syntastic_c_make_checker = 1$/;"	v
g:loaded_syntastic_c_oclint_checker	syntastic/syntax_checkers/c/oclint.vim	/^let g:loaded_syntastic_c_oclint_checker = 1$/;"	v
g:loaded_syntastic_c_pc_lint_checker	syntastic/syntax_checkers/c/pc_lint.vim	/^let g:loaded_syntastic_c_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_c_sparse_checker	syntastic/syntax_checkers/c/sparse.vim	/^let g:loaded_syntastic_c_sparse_checker = 1$/;"	v
g:loaded_syntastic_c_splint_checker	syntastic/syntax_checkers/c/splint.vim	/^let g:loaded_syntastic_c_splint_checker = 1$/;"	v
g:loaded_syntastic_cabal_cabal_checker	syntastic/syntax_checkers/cabal/cabal.vim	/^let g:loaded_syntastic_cabal_cabal_checker = 1$/;"	v
g:loaded_syntastic_checker	syntastic/plugin/syntastic/checker.vim	/^let g:loaded_syntastic_checker = 1$/;"	v
g:loaded_syntastic_chef_foodcritic_checker	syntastic/syntax_checkers/chef/foodcritic.vim	/^let g:loaded_syntastic_chef_foodcritic_checker = 1$/;"	v
g:loaded_syntastic_co_coco_checker	syntastic/syntax_checkers/co/coco.vim	/^let g:loaded_syntastic_co_coco_checker = 1$/;"	v
g:loaded_syntastic_cobol_cobc_checker	syntastic/syntax_checkers/cobol/cobc.vim	/^let g:loaded_syntastic_cobol_cobc_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffee_checker	syntastic/syntax_checkers/coffee/coffee.vim	/^let g:loaded_syntastic_coffee_coffee_checker = 1$/;"	v
g:loaded_syntastic_coffee_coffeelint_checker	syntastic/syntax_checkers/coffee/coffeelint.vim	/^let g:loaded_syntastic_coffee_coffeelint_checker = 1$/;"	v
g:loaded_syntastic_coq_coqtop_checker	syntastic/syntax_checkers/coq/coqtop.vim	/^let g:loaded_syntastic_coq_coqtop_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_check_checker	syntastic/syntax_checkers/cpp/clang_check.vim	/^let g:loaded_syntastic_cpp_clang_check_checker = 1$/;"	v
g:loaded_syntastic_cpp_clang_tidy_checker	syntastic/syntax_checkers/cpp/clang_tidy.vim	/^let g:loaded_syntastic_cpp_clang_tidy_checker = 1$/;"	v
g:loaded_syntastic_cpp_cppcheck_checker	syntastic/syntax_checkers/cpp/cppcheck.vim	/^let g:loaded_syntastic_cpp_cppcheck_checker = 1$/;"	v
g:loaded_syntastic_cpp_cpplint_checker	syntastic/syntax_checkers/cpp/cpplint.vim	/^let g:loaded_syntastic_cpp_cpplint_checker = 1$/;"	v
g:loaded_syntastic_cpp_gcc_checker	syntastic/syntax_checkers/cpp/gcc.vim	/^let g:loaded_syntastic_cpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_cpp_oclint_checker	syntastic/syntax_checkers/cpp/oclint.vim	/^let g:loaded_syntastic_cpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_cpp_pc_lint_checker	syntastic/syntax_checkers/cpp/pc_lint.vim	/^let g:loaded_syntastic_cpp_pc_lint_checker = 1$/;"	v
g:loaded_syntastic_cpp_verapp_checker	syntastic/syntax_checkers/cpp/verapp.vim	/^let g:loaded_syntastic_cpp_verapp_checker = 1$/;"	v
g:loaded_syntastic_cs_mcs_checker	syntastic/syntax_checkers/cs/mcs.vim	/^let g:loaded_syntastic_cs_mcs_checker = 1$/;"	v
g:loaded_syntastic_css_csslint_checker	syntastic/syntax_checkers/css/csslint.vim	/^let g:loaded_syntastic_css_csslint_checker = 1$/;"	v
g:loaded_syntastic_css_phpcs_checker	syntastic/syntax_checkers/css/phpcs.vim	/^let g:loaded_syntastic_css_phpcs_checker = 1$/;"	v
g:loaded_syntastic_css_prettycss_checker	syntastic/syntax_checkers/css/prettycss.vim	/^let g:loaded_syntastic_css_prettycss_checker = 1$/;"	v
g:loaded_syntastic_css_recess_checker	syntastic/syntax_checkers/css/recess.vim	/^let g:loaded_syntastic_css_recess_checker = 1$/;"	v
g:loaded_syntastic_css_stylelint_checker	syntastic/syntax_checkers/css/stylelint.vim	/^let g:loaded_syntastic_css_stylelint_checker = 1$/;"	v
g:loaded_syntastic_cucumber_cucumber_checker	syntastic/syntax_checkers/cucumber/cucumber.vim	/^let g:loaded_syntastic_cucumber_cucumber_checker = 1$/;"	v
g:loaded_syntastic_cuda_nvcc_checker	syntastic/syntax_checkers/cuda/nvcc.vim	/^let g:loaded_syntastic_cuda_nvcc_checker = 1$/;"	v
g:loaded_syntastic_d_dmd_checker	syntastic/syntax_checkers/d/dmd.vim	/^let g:loaded_syntastic_d_dmd_checker = 1$/;"	v
g:loaded_syntastic_dart_dartanalyzer_checker	syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let g:loaded_syntastic_dart_dartanalyzer_checker = 1$/;"	v
g:loaded_syntastic_docbk_igor_checker	syntastic/syntax_checkers/docbk/igor.vim	/^let g:loaded_syntastic_docbk_igor_checker = 1$/;"	v
g:loaded_syntastic_docbk_xmllint_checker	syntastic/syntax_checkers/docbk/xmllint.vim	/^let g:loaded_syntastic_docbk_xmllint_checker = 1$/;"	v
g:loaded_syntastic_dustjs_swiffer_checker	syntastic/syntax_checkers/dustjs/swiffer.vim	/^let g:loaded_syntastic_dustjs_swiffer_checker = 1$/;"	v
g:loaded_syntastic_elixir_elixir_checker	syntastic/syntax_checkers/elixir/elixir.vim	/^let g:loaded_syntastic_elixir_elixir_checker = 1$/;"	v
g:loaded_syntastic_erlang_erlang_checker	syntastic/syntax_checkers/erlang/escript.vim	/^let g:loaded_syntastic_erlang_erlang_checker = 1$/;"	v
g:loaded_syntastic_erlang_syntaxerl_checker	syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let g:loaded_syntastic_erlang_syntaxerl_checker = 1$/;"	v
g:loaded_syntastic_eruby_ruby_checker	syntastic/syntax_checkers/eruby/ruby.vim	/^let g:loaded_syntastic_eruby_ruby_checker = 1$/;"	v
g:loaded_syntastic_fortran_gfortran_checker	syntastic/syntax_checkers/fortran/gfortran.vim	/^let g:loaded_syntastic_fortran_gfortran_checker = 1$/;"	v
g:loaded_syntastic_glsl_cgc_checker	syntastic/syntax_checkers/glsl/cgc.vim	/^let g:loaded_syntastic_glsl_cgc_checker = 1$/;"	v
g:loaded_syntastic_go_go_checker	syntastic/syntax_checkers/go/go.vim	/^let g:loaded_syntastic_go_go_checker = 1$/;"	v
g:loaded_syntastic_go_gofmt_checker	syntastic/syntax_checkers/go/gofmt.vim	/^let g:loaded_syntastic_go_gofmt_checker = 1$/;"	v
g:loaded_syntastic_go_golint_checker	syntastic/syntax_checkers/go/golint.vim	/^let g:loaded_syntastic_go_golint_checker = 1$/;"	v
g:loaded_syntastic_go_gometalinter_checker	syntastic/syntax_checkers/go/gometalinter.vim	/^let g:loaded_syntastic_go_gometalinter_checker = 1$/;"	v
g:loaded_syntastic_go_gotype_checker	syntastic/syntax_checkers/go/gotype.vim	/^let g:loaded_syntastic_go_gotype_checker = 1$/;"	v
g:loaded_syntastic_go_govet_checker	syntastic/syntax_checkers/go/govet.vim	/^let g:loaded_syntastic_go_govet_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_checker	syntastic/syntax_checkers/haml/haml.vim	/^let g:loaded_syntastic_haml_haml_checker = 1$/;"	v
g:loaded_syntastic_haml_haml_lint_checker	syntastic/syntax_checkers/haml/haml_lint.vim	/^let g:loaded_syntastic_haml_haml_lint_checker = 1$/;"	v
g:loaded_syntastic_handlebars_handlebars_checker	syntastic/syntax_checkers/handlebars/handlebars.vim	/^let g:loaded_syntastic_handlebars_handlebars_checker = 1$/;"	v
g:loaded_syntastic_haskell_ghc_mod_checker	syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let g:loaded_syntastic_haskell_ghc_mod_checker = 1$/;"	v
g:loaded_syntastic_haskell_hdevtools_checker	syntastic/syntax_checkers/haskell/hdevtools.vim	/^let g:loaded_syntastic_haskell_hdevtools_checker = 1$/;"	v
g:loaded_syntastic_haskell_hlint_checker	syntastic/syntax_checkers/haskell/hlint.vim	/^let g:loaded_syntastic_haskell_hlint_checker = 1$/;"	v
g:loaded_syntastic_haskell_scan_checker	syntastic/syntax_checkers/haskell/scan.vim	/^let g:loaded_syntastic_haskell_scan_checker = 1$/;"	v
g:loaded_syntastic_haxe_haxe_checker	syntastic/syntax_checkers/haxe/haxe.vim	/^let g:loaded_syntastic_haxe_haxe_checker = 1$/;"	v
g:loaded_syntastic_hss_hss_checker	syntastic/syntax_checkers/hss/hss.vim	/^let g:loaded_syntastic_hss_hss_checker = 1$/;"	v
g:loaded_syntastic_html_jshint_checker	syntastic/syntax_checkers/html/jshint.vim	/^let g:loaded_syntastic_html_jshint_checker = 1$/;"	v
g:loaded_syntastic_html_tidy_checker	syntastic/syntax_checkers/html/tidy.vim	/^let g:loaded_syntastic_html_tidy_checker = 1$/;"	v
g:loaded_syntastic_html_validator_checker	syntastic/syntax_checkers/html/validator.vim	/^let g:loaded_syntastic_html_validator_checker=1$/;"	v
g:loaded_syntastic_html_w3_checker	syntastic/syntax_checkers/html/w3.vim	/^let g:loaded_syntastic_html_w3_checker = 1$/;"	v
g:loaded_syntastic_jade_jade_lint_checker	syntastic/syntax_checkers/jade/jade_lint.vim	/^let g:loaded_syntastic_jade_jade_lint_checker = 1$/;"	v
g:loaded_syntastic_java_checkstyle_checker	syntastic/syntax_checkers/java/checkstyle.vim	/^let g:loaded_syntastic_java_checkstyle_checker = 1$/;"	v
g:loaded_syntastic_java_javac_checker	syntastic/syntax_checkers/java/javac.vim	/^let g:loaded_syntastic_java_javac_checker = 1$/;"	v
g:loaded_syntastic_javascript_closurecompiler_checker	syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let g:loaded_syntastic_javascript_closurecompiler_checker = 1$/;"	v
g:loaded_syntastic_javascript_eslint_checker	syntastic/syntax_checkers/javascript/eslint.vim	/^let g:loaded_syntastic_javascript_eslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_flow_checker	syntastic/syntax_checkers/javascript/flow.vim	/^let g:loaded_syntastic_javascript_flow_checker = 1$/;"	v
g:loaded_syntastic_javascript_gjslint_checker	syntastic/syntax_checkers/javascript/gjslint.vim	/^let g:loaded_syntastic_javascript_gjslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jscs_checker	syntastic/syntax_checkers/javascript/jscs.vim	/^let g:loaded_syntastic_javascript_jscs_checker = 1$/;"	v
g:loaded_syntastic_javascript_jshint_checker	syntastic/syntax_checkers/javascript/jshint.vim	/^let g:loaded_syntastic_javascript_jshint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsl_checker	syntastic/syntax_checkers/javascript/jsl.vim	/^let g:loaded_syntastic_javascript_jsl_checker = 1$/;"	v
g:loaded_syntastic_javascript_jslint_checker	syntastic/syntax_checkers/javascript/jslint.vim	/^let g:loaded_syntastic_javascript_jslint_checker = 1$/;"	v
g:loaded_syntastic_javascript_jsxhint_checker	syntastic/syntax_checkers/javascript/jsxhint.vim	/^let g:loaded_syntastic_javascript_jsxhint_checker = 1$/;"	v
g:loaded_syntastic_javascript_standard_checker	syntastic/syntax_checkers/javascript/standard.vim	/^let g:loaded_syntastic_javascript_standard_checker = 1$/;"	v
g:loaded_syntastic_json_jsonlint_checker	syntastic/syntax_checkers/json/jsonlint.vim	/^let g:loaded_syntastic_json_jsonlint_checker = 1$/;"	v
g:loaded_syntastic_json_jsonval_checker	syntastic/syntax_checkers/json/jsonval.vim	/^let g:loaded_syntastic_json_jsonval_checker = 1$/;"	v
g:loaded_syntastic_less_lessc_checker	syntastic/syntax_checkers/less/lessc.vim	/^let g:loaded_syntastic_less_lessc_checker = 1$/;"	v
g:loaded_syntastic_less_recess_checker	syntastic/syntax_checkers/less/recess.vim	/^let g:loaded_syntastic_less_recess_checker = 1$/;"	v
g:loaded_syntastic_lex_flex_checker	syntastic/syntax_checkers/lex/flex.vim	/^let g:loaded_syntastic_lex_flex_checker = 1$/;"	v
g:loaded_syntastic_limbo_limbo_checker	syntastic/syntax_checkers/limbo/limbo.vim	/^let g:loaded_syntastic_limbo_limbo_checker = 1$/;"	v
g:loaded_syntastic_lisp_clisp_checker	syntastic/syntax_checkers/lisp/clisp.vim	/^let g:loaded_syntastic_lisp_clisp_checker = 1$/;"	v
g:loaded_syntastic_llvm_llvm_checker	syntastic/syntax_checkers/llvm/llvm.vim	/^let g:loaded_syntastic_llvm_llvm_checker = 1$/;"	v
g:loaded_syntastic_loclist	syntastic/plugin/syntastic/loclist.vim	/^let g:loaded_syntastic_loclist = 1$/;"	v
g:loaded_syntastic_log_autoload	syntastic/autoload/syntastic/log.vim	/^let g:loaded_syntastic_log_autoload = 1$/;"	v
g:loaded_syntastic_lua_luac_checker	syntastic/syntax_checkers/lua/luac.vim	/^let g:loaded_syntastic_lua_luac_checker = 1$/;"	v
g:loaded_syntastic_lua_luacheck_checker	syntastic/syntax_checkers/lua/luacheck.vim	/^let g:loaded_syntastic_lua_luacheck_checker = 1$/;"	v
g:loaded_syntastic_markdown_mdl_checker	syntastic/syntax_checkers/markdown/mdl.vim	/^let g:loaded_syntastic_markdown_mdl_checker = 1$/;"	v
g:loaded_syntastic_matlab_mlint_checker	syntastic/syntax_checkers/matlab/mlint.vim	/^let g:loaded_syntastic_matlab_mlint_checker = 1$/;"	v
g:loaded_syntastic_mercury_mmc_checker	syntastic/syntax_checkers/mercury/mmc.vim	/^let g:loaded_syntastic_mercury_mmc_checker = 1$/;"	v
g:loaded_syntastic_modemap	syntastic/plugin/syntastic/modemap.vim	/^let g:loaded_syntastic_modemap = 1$/;"	v
g:loaded_syntastic_nasm_nasm_checker	syntastic/syntax_checkers/nasm/nasm.vim	/^let g:loaded_syntastic_nasm_nasm_checker = 1$/;"	v
g:loaded_syntastic_nix_nix_checker	syntastic/syntax_checkers/nix/nix.vim	/^let g:loaded_syntastic_nix_nix_checker = 1$/;"	v
g:loaded_syntastic_notifier_autoloclist	syntastic/plugin/syntastic/autoloclist.vim	/^let g:loaded_syntastic_notifier_autoloclist = 1$/;"	v
g:loaded_syntastic_notifier_balloons	syntastic/plugin/syntastic/balloons.vim	/^let g:loaded_syntastic_notifier_balloons = 1$/;"	v
g:loaded_syntastic_notifier_cursor	syntastic/plugin/syntastic/cursor.vim	/^let g:loaded_syntastic_notifier_cursor = 1$/;"	v
g:loaded_syntastic_notifier_highlighting	syntastic/plugin/syntastic/highlighting.vim	/^let g:loaded_syntastic_notifier_highlighting = 1$/;"	v
g:loaded_syntastic_notifier_signs	syntastic/plugin/syntastic/signs.vim	/^let g:loaded_syntastic_notifier_signs = 1$/;"	v
g:loaded_syntastic_notifiers	syntastic/plugin/syntastic/notifiers.vim	/^let g:loaded_syntastic_notifiers = 1$/;"	v
g:loaded_syntastic_nroff_igor_checker	syntastic/syntax_checkers/nroff/igor.vim	/^let g:loaded_syntastic_nroff_igor_checker = 1$/;"	v
g:loaded_syntastic_nroff_mandoc_checker	syntastic/syntax_checkers/nroff/mandoc.vim	/^let g:loaded_syntastic_nroff_mandoc_checker = 1$/;"	v
g:loaded_syntastic_objc_gcc_checker	syntastic/syntax_checkers/objc/gcc.vim	/^let g:loaded_syntastic_objc_gcc_checker = 1$/;"	v
g:loaded_syntastic_objc_oclint_checker	syntastic/syntax_checkers/objc/oclint.vim	/^let g:loaded_syntastic_objc_oclint_checker = 1$/;"	v
g:loaded_syntastic_objcpp_gcc_checker	syntastic/syntax_checkers/objcpp/gcc.vim	/^let g:loaded_syntastic_objcpp_gcc_checker = 1$/;"	v
g:loaded_syntastic_objcpp_oclint_checker	syntastic/syntax_checkers/objcpp/oclint.vim	/^let g:loaded_syntastic_objcpp_oclint_checker = 1$/;"	v
g:loaded_syntastic_ocaml_camlp4o_checker	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let g:loaded_syntastic_ocaml_camlp4o_checker = 1$/;"	v
g:loaded_syntastic_perl_perl_checker	syntastic/syntax_checkers/perl/perl.vim	/^let g:loaded_syntastic_perl_perl_checker = 1$/;"	v
g:loaded_syntastic_perl_perlcritic_checker	syntastic/syntax_checkers/perl/perlcritic.vim	/^let g:loaded_syntastic_perl_perlcritic_checker = 1$/;"	v
g:loaded_syntastic_perl_podchecker_checker	syntastic/syntax_checkers/perl/podchecker.vim	/^let g:loaded_syntastic_perl_podchecker_checker = 1$/;"	v
g:loaded_syntastic_php_php_checker	syntastic/syntax_checkers/php/php.vim	/^let g:loaded_syntastic_php_php_checker = 1$/;"	v
g:loaded_syntastic_php_phpcs_checker	syntastic/syntax_checkers/php/phpcs.vim	/^let g:loaded_syntastic_php_phpcs_checker = 1$/;"	v
g:loaded_syntastic_php_phplint_checker	syntastic/syntax_checkers/php/phplint.vim	/^let g:loaded_syntastic_php_phplint_checker = 1$/;"	v
g:loaded_syntastic_php_phpmd_checker	syntastic/syntax_checkers/php/phpmd.vim	/^let g:loaded_syntastic_php_phpmd_checker = 1$/;"	v
g:loaded_syntastic_plugin	syntastic/plugin/syntastic.vim	/^let g:loaded_syntastic_plugin = 1$/;"	v
g:loaded_syntastic_po_msgfmt_checker	syntastic/syntax_checkers/po/msgfmt.vim	/^let g:loaded_syntastic_po_msgfmt_checker = 1$/;"	v
g:loaded_syntastic_pod_podchecker_checker	syntastic/syntax_checkers/pod/podchecker.vim	/^let g:loaded_syntastic_pod_podchecker_checker = 1$/;"	v
g:loaded_syntastic_postprocess_autoload	syntastic/autoload/syntastic/postprocess.vim	/^let g:loaded_syntastic_postprocess_autoload = 1$/;"	v
g:loaded_syntastic_preprocess_autoload	syntastic/autoload/syntastic/preprocess.vim	/^let g:loaded_syntastic_preprocess_autoload = 1$/;"	v
g:loaded_syntastic_puppet_puppet_checker	syntastic/syntax_checkers/puppet/puppet.vim	/^let g:loaded_syntastic_puppet_puppet_checker = 1$/;"	v
g:loaded_syntastic_puppet_puppetlint_checker	syntastic/syntax_checkers/puppet/puppetlint.vim	/^let g:loaded_syntastic_puppet_puppetlint_checker = 1$/;"	v
g:loaded_syntastic_python_flake8_checker	syntastic/syntax_checkers/python/flake8.vim	/^let g:loaded_syntastic_python_flake8_checker = 1$/;"	v
g:loaded_syntastic_python_frosted_checker	syntastic/syntax_checkers/python/frosted.vim	/^let g:loaded_syntastic_python_frosted_checker = 1$/;"	v
g:loaded_syntastic_python_mypy_checker	syntastic/syntax_checkers/python/mypy.vim	/^let g:loaded_syntastic_python_mypy_checker = 1$/;"	v
g:loaded_syntastic_python_pep257_checker	syntastic/syntax_checkers/python/pep257.vim	/^let g:loaded_syntastic_python_pep257_checker = 1$/;"	v
g:loaded_syntastic_python_pep8_checker	syntastic/syntax_checkers/python/pep8.vim	/^let g:loaded_syntastic_python_pep8_checker = 1$/;"	v
g:loaded_syntastic_python_prospector_checker	syntastic/syntax_checkers/python/prospector.vim	/^let g:loaded_syntastic_python_prospector_checker = 1$/;"	v
g:loaded_syntastic_python_py3kwarn_checker	syntastic/syntax_checkers/python/py3kwarn.vim	/^let g:loaded_syntastic_python_py3kwarn_checker = 1$/;"	v
g:loaded_syntastic_python_pyflakes_checker	syntastic/syntax_checkers/python/pyflakes.vim	/^let g:loaded_syntastic_python_pyflakes_checker = 1$/;"	v
g:loaded_syntastic_python_pylama_checker	syntastic/syntax_checkers/python/pylama.vim	/^let g:loaded_syntastic_python_pylama_checker = 1$/;"	v
g:loaded_syntastic_python_pylint_checker	syntastic/syntax_checkers/python/pylint.vim	/^let g:loaded_syntastic_python_pylint_checker = 1$/;"	v
g:loaded_syntastic_python_python_checker	syntastic/syntax_checkers/python/python.vim	/^let g:loaded_syntastic_python_python_checker = 1$/;"	v
g:loaded_syntastic_qml_qmllint_checker	syntastic/syntax_checkers/qml/qmllint.vim	/^let g:loaded_syntastic_qml_qmllint_checker = 1$/;"	v
g:loaded_syntastic_r_lint_checker	syntastic/syntax_checkers/r/lint.vim	/^let g:loaded_syntastic_r_lint_checker = 1$/;"	v
g:loaded_syntastic_r_svtools_checker	syntastic/syntax_checkers/r/svtools.vim	/^let g:loaded_syntastic_r_svtools_checker = 1$/;"	v
g:loaded_syntastic_racket_code_ayatollah_checker	syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let g:loaded_syntastic_racket_code_ayatollah_checker = 1$/;"	v
g:loaded_syntastic_racket_racket_checker	syntastic/syntax_checkers/racket/racket.vim	/^let g:loaded_syntastic_racket_racket_checker=1$/;"	v
g:loaded_syntastic_registry	syntastic/plugin/syntastic/registry.vim	/^let g:loaded_syntastic_registry = 1$/;"	v
g:loaded_syntastic_rnc_rnv_checker	syntastic/syntax_checkers/rnc/rnv.vim	/^let g:loaded_syntastic_rnc_rnv_checker = 1$/;"	v
g:loaded_syntastic_rst_rst2pseudoxml_checker	syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let g:loaded_syntastic_rst_rst2pseudoxml_checker = 1$/;"	v
g:loaded_syntastic_rst_rstcheck_checker	syntastic/syntax_checkers/rst/rstcheck.vim	/^let g:loaded_syntastic_rst_rstcheck_checker = 1$/;"	v
g:loaded_syntastic_rst_sphinx_checker	syntastic/syntax_checkers/rst/sphinx.vim	/^let g:loaded_syntastic_rst_sphinx_checker = 1$/;"	v
g:loaded_syntastic_ruby_flog_checker	syntastic/syntax_checkers/ruby/flog.vim	/^let g:loaded_syntastic_ruby_flog_checker = 1$/;"	v
g:loaded_syntastic_ruby_jruby_checker	syntastic/syntax_checkers/ruby/jruby.vim	/^let g:loaded_syntastic_ruby_jruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_macruby_checker	syntastic/syntax_checkers/ruby/macruby.vim	/^let g:loaded_syntastic_ruby_macruby_checker = 1$/;"	v
g:loaded_syntastic_ruby_mri_checker	syntastic/syntax_checkers/ruby/mri.vim	/^let g:loaded_syntastic_ruby_mri_checker = 1$/;"	v
g:loaded_syntastic_ruby_reek_checker	syntastic/syntax_checkers/ruby/reek.vim	/^let g:loaded_syntastic_ruby_reek_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubocop_checker	syntastic/syntax_checkers/ruby/rubocop.vim	/^let g:loaded_syntastic_ruby_rubocop_checker = 1$/;"	v
g:loaded_syntastic_ruby_rubylint_checker	syntastic/syntax_checkers/ruby/rubylint.vim	/^let g:loaded_syntastic_ruby_rubylint_checker = 1$/;"	v
g:loaded_syntastic_sass_sass_checker	syntastic/syntax_checkers/sass/sass.vim	/^let g:loaded_syntastic_sass_sass_checker = 1$/;"	v
g:loaded_syntastic_sass_sassc_checker	syntastic/syntax_checkers/sass/sassc.vim	/^let g:loaded_syntastic_sass_sassc_checker = 1$/;"	v
g:loaded_syntastic_scala_fsc_checker	syntastic/syntax_checkers/scala/fsc.vim	/^let g:loaded_syntastic_scala_fsc_checker = 1$/;"	v
g:loaded_syntastic_scala_scalac_checker	syntastic/syntax_checkers/scala/scalac.vim	/^let g:loaded_syntastic_scala_scalac_checker = 1$/;"	v
g:loaded_syntastic_scala_scalastyle_checker	syntastic/syntax_checkers/scala/scalastyle.vim	/^let g:loaded_syntastic_scala_scalastyle_checker = 1$/;"	v
g:loaded_syntastic_scss_sass_checker	syntastic/syntax_checkers/scss/sass.vim	/^let g:loaded_syntastic_scss_sass_checker = 1$/;"	v
g:loaded_syntastic_scss_sassc_checker	syntastic/syntax_checkers/scss/sassc.vim	/^let g:loaded_syntastic_scss_sassc_checker = 1$/;"	v
g:loaded_syntastic_scss_scss_lint_checker	syntastic/syntax_checkers/scss/scss_lint.vim	/^let g:loaded_syntastic_scss_scss_lint_checker = 1$/;"	v
g:loaded_syntastic_sh_bashate_checker	syntastic/syntax_checkers/sh/bashate.vim	/^let g:loaded_syntastic_sh_bashate_checker = 1$/;"	v
g:loaded_syntastic_sh_checkbashisms_checker	syntastic/syntax_checkers/sh/checkbashisms.vim	/^let g:loaded_syntastic_sh_checkbashisms_checker = 1$/;"	v
g:loaded_syntastic_sh_sh_checker	syntastic/syntax_checkers/sh/sh.vim	/^let g:loaded_syntastic_sh_sh_checker = 1$/;"	v
g:loaded_syntastic_sh_shellcheck_checker	syntastic/syntax_checkers/sh/shellcheck.vim	/^let g:loaded_syntastic_sh_shellcheck_checker = 1$/;"	v
g:loaded_syntastic_slim_slimrb_checker	syntastic/syntax_checkers/slim/slimrb.vim	/^let g:loaded_syntastic_slim_slimrb_checker = 1$/;"	v
g:loaded_syntastic_sml_smlnj_checker	syntastic/syntax_checkers/sml/smlnj.vim	/^let g:loaded_syntastic_sml_smlnj_checker = 1$/;"	v
g:loaded_syntastic_spec_rpmlint_checker	syntastic/syntax_checkers/spec/rpmlint.vim	/^let g:loaded_syntastic_spec_rpmlint_checker = 1$/;"	v
g:loaded_syntastic_sql_sqlint_checker	syntastic/syntax_checkers/sql/sqlint.vim	/^let g:loaded_syntastic_sql_sqlint_checker = 1$/;"	v
g:loaded_syntastic_stylus_stylint_checker	syntastic/syntax_checkers/stylus/stylint.vim	/^let g:loaded_syntastic_stylus_stylint_checker = 1$/;"	v
g:loaded_syntastic_tcl_nagelfar_checker	syntastic/syntax_checkers/tcl/nagelfar.vim	/^let g:loaded_syntastic_tcl_nagelfar_checker = 1$/;"	v
g:loaded_syntastic_tex_chktex_checker	syntastic/syntax_checkers/tex/chktex.vim	/^let g:loaded_syntastic_tex_chktex_checker = 1$/;"	v
g:loaded_syntastic_tex_lacheck_checker	syntastic/syntax_checkers/tex/lacheck.vim	/^let g:loaded_syntastic_tex_lacheck_checker = 1$/;"	v
g:loaded_syntastic_texinfo_makeinfo_checker	syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let g:loaded_syntastic_texinfo_makeinfo_checker = 1$/;"	v
g:loaded_syntastic_text_atdtool_checker	syntastic/syntax_checkers/text/atdtool.vim	/^let g:loaded_syntastic_text_atdtool_checker = 1$/;"	v
g:loaded_syntastic_text_igor_checker	syntastic/syntax_checkers/text/igor.vim	/^let g:loaded_syntastic_text_igor_checker = 1$/;"	v
g:loaded_syntastic_text_language_check_checker	syntastic/syntax_checkers/text/language_check.vim	/^let g:loaded_syntastic_text_language_check_checker = 1$/;"	v
g:loaded_syntastic_twig_twiglint_checker	syntastic/syntax_checkers/twig/twiglint.vim	/^let g:loaded_syntastic_twig_twiglint_checker = 1$/;"	v
g:loaded_syntastic_typescript_tsc_checker	syntastic/syntax_checkers/typescript/tsc.vim	/^let g:loaded_syntastic_typescript_tsc_checker = 1$/;"	v
g:loaded_syntastic_typescript_tslint_checker	syntastic/syntax_checkers/typescript/tslint.vim	/^let g:loaded_syntastic_typescript_tslint_checker = 1$/;"	v
g:loaded_syntastic_util_autoload	syntastic/autoload/syntastic/util.vim	/^let g:loaded_syntastic_util_autoload = 1$/;"	v
g:loaded_syntastic_vala_valac_checker	syntastic/syntax_checkers/vala/valac.vim	/^let g:loaded_syntastic_vala_valac_checker = 1$/;"	v
g:loaded_syntastic_verilog_iverilog_checker	syntastic/syntax_checkers/verilog/iverilog.vim	/^let g:loaded_syntastic_verilog_iverilog_checker = 1$/;"	v
g:loaded_syntastic_verilog_verilator_checker	syntastic/syntax_checkers/verilog/verilator.vim	/^let g:loaded_syntastic_verilog_verilator_checker = 1$/;"	v
g:loaded_syntastic_vhdl_ghdl_checker	syntastic/syntax_checkers/vhdl/ghdl.vim	/^let g:loaded_syntastic_vhdl_ghdl_checker = 1$/;"	v
g:loaded_syntastic_vhdl_vcom_checker	syntastic/syntax_checkers/vhdl/vcom.vim	/^let g:loaded_syntastic_vhdl_vcom_checker = 1$/;"	v
g:loaded_syntastic_vim_vimlint_checker	syntastic/syntax_checkers/vim/vimlint.vim	/^let g:loaded_syntastic_vim_vimlint_checker = 1$/;"	v
g:loaded_syntastic_vim_vint_checker	syntastic/syntax_checkers/vim/vint.vim	/^let g:loaded_syntastic_vim_vint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_jshint_checker	syntastic/syntax_checkers/xhtml/jshint.vim	/^let g:loaded_syntastic_xhtml_jshint_checker = 1$/;"	v
g:loaded_syntastic_xhtml_tidy_checker	syntastic/syntax_checkers/xhtml/tidy.vim	/^let g:loaded_syntastic_xhtml_tidy_checker = 1$/;"	v
g:loaded_syntastic_xml_plutil_checker	syntastic/syntax_checkers/xml/plutil.vim	/^let g:loaded_syntastic_xml_plutil_checker = 1$/;"	v
g:loaded_syntastic_xml_xmllint_checker	syntastic/syntax_checkers/xml/xmllint.vim	/^let g:loaded_syntastic_xml_xmllint_checker = 1$/;"	v
g:loaded_syntastic_xquery_basex_checker	syntastic/syntax_checkers/xquery/basex.vim	/^let g:loaded_syntastic_xquery_basex_checker = 1$/;"	v
g:loaded_syntastic_xslt_xmllint_checker	syntastic/syntax_checkers/xslt/xmllint.vim	/^let g:loaded_syntastic_xslt_xmllint_checker = 1$/;"	v
g:loaded_syntastic_yacc_bison_checker	syntastic/syntax_checkers/yacc/bison.vim	/^let g:loaded_syntastic_yacc_bison_checker = 1$/;"	v
g:loaded_syntastic_yaml_jsyaml_checker	syntastic/syntax_checkers/yaml/jsyaml.vim	/^let g:loaded_syntastic_yaml_jsyaml_checker = 1$/;"	v
g:loaded_syntastic_yaml_yamlxs_checker	syntastic/syntax_checkers/yaml/yamlxs.vim	/^let g:loaded_syntastic_yaml_yamlxs_checker = 1$/;"	v
g:loaded_syntastic_z80_z80syntaxchecker_checker	syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let g:loaded_syntastic_z80_z80syntaxchecker_checker = 1$/;"	v
g:loaded_syntastic_zpt_zptlint_checker	syntastic/syntax_checkers/zpt/zptlint.vim	/^let g:loaded_syntastic_zpt_zptlint_checker = 1$/;"	v
g:loaded_syntastic_zsh_zsh_checker	syntastic/syntax_checkers/zsh/zsh.vim	/^let g:loaded_syntastic_zsh_zsh_checker = 1$/;"	v
g:loaded_tagbar	vim-tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:loaded_togglebg	vim-colors-solarized/autoload/togglebg.vim	/^let g:loaded_togglebg = 1$/;"	v
g:neocomplete#auto_completion_start_length	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#auto_completion_start_length =$/;"	v
g:neocomplete#cursor_hold_i_time	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#cursor_hold_i_time =$/;"	v
g:neocomplete#delimiter_patterns	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#delimiter_patterns =$/;"	v
g:neocomplete#disable_auto_complete	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#disable_auto_complete =$/;"	v
g:neocomplete#enable_auto_close_preview	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_close_preview =$/;"	v
g:neocomplete#enable_auto_delimiter	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_delimiter =$/;"	v
g:neocomplete#enable_auto_pairs	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_pairs =$/;"	v
g:neocomplete#enable_auto_select	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_auto_select =$/;"	v
g:neocomplete#enable_camel_case	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_camel_case =$/;"	v
g:neocomplete#enable_cursor_hold_i	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_cursor_hold_i =$/;"	v
g:neocomplete#enable_debug	vim-neocomplete/plugin/neocomplete.vim	/^let g:neocomplete#enable_debug =$/;"	v
g:neocomplete#enable_fuzzy_completion	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_fuzzy_completion =$/;"	v
g:neocomplete#enable_ignore_case	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_ignore_case =$/;"	v
g:neocomplete#enable_multibyte_completion	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_multibyte_completion =$/;"	v
g:neocomplete#enable_smart_case	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#enable_smart_case =$/;"	v
g:neocomplete#fallback_mappings	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#fallback_mappings =$/;"	v
g:neocomplete#force_omni_input_patterns	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#force_omni_input_patterns =$/;"	v
g:neocomplete#ignore_source_files	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#ignore_source_files =$/;"	v
g:neocomplete#keyword_patterns	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#keyword_patterns =$/;"	v
g:neocomplete#lock_buffer_name_pattern	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#lock_buffer_name_pattern =$/;"	v
g:neocomplete#lock_iminsert	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#lock_iminsert =$/;"	v
g:neocomplete#manual_completion_start_length	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#manual_completion_start_length =$/;"	v
g:neocomplete#max_keyword_width	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#max_keyword_width =$/;"	v
g:neocomplete#max_list	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#max_list =$/;"	v
g:neocomplete#min_keyword_length	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#min_keyword_length =$/;"	v
g:neocomplete#release_cache_time	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#release_cache_time =$/;"	v
g:neocomplete#skip_auto_completion_time	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#skip_auto_completion_time =$/;"	v
g:neocomplete#sources	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#sources =$/;"	v
g:neocomplete#sources#buffer#cache_limit_size	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#cache_limit_size =$/;"	v
g:neocomplete#sources#buffer#disabled_pattern	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#disabled_pattern =$/;"	v
g:neocomplete#sources#buffer#max_keyword_width	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^let g:neocomplete#sources#buffer#max_keyword_width =$/;"	v
g:neocomplete#sources#dictionary#dictionaries	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let g:neocomplete#sources#dictionary#dictionaries =$/;"	v
g:neocomplete#sources#member#input_patterns	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#input_patterns =$/;"	v
g:neocomplete#sources#member#prefix_patterns	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^let g:neocomplete#sources#member#prefix_patterns =$/;"	v
g:neocomplete#sources#omni#functions	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#functions =$/;"	v
g:neocomplete#sources#omni#input_patterns	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^let g:neocomplete#sources#omni#input_patterns =$/;"	v
g:neocomplete#tags_filter_patterns	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#tags_filter_patterns =$/;"	v
g:neocomplete#text_mode_filetypes	vim-neocomplete/autoload/neocomplete.vim	/^let g:neocomplete#text_mode_filetypes =$/;"	v
g:syntastic_	syntastic/plugin/syntastic.vim	/^        let g:syntastic_{s:key} = copy(g:_SYNTASTIC_DEFAULTS[s:key])$/;"	v
g:syntastic_ada_compiler_options	syntastic/syntax_checkers/ada/gcc.vim	/^    let g:syntastic_ada_compiler_options = ''$/;"	v
g:syntastic_apiblueprint_drafter_sort	syntastic/syntax_checkers/apiblueprint/drafter.vim	/^    let g:syntastic_apiblueprint_drafter_sort = 1$/;"	v
g:syntastic_asm_compiler_options	syntastic/syntax_checkers/asm/gcc.vim	/^    let g:syntastic_asm_compiler_options = ''$/;"	v
g:syntastic_avrgcc_config_file	syntastic/syntax_checkers/c/avrgcc.vim	/^    let g:syntastic_avrgcc_config_file = '.syntastic_avrgcc_config'$/;"	v
g:syntastic_c_clang_check_sort	syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_c_clang_check_sort = 1$/;"	v
g:syntastic_c_clang_tidy_sort	syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_c_clang_tidy_sort = 1$/;"	v
g:syntastic_c_compiler_options	syntastic/syntax_checkers/c/gcc.vim	/^    let g:syntastic_c_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_c_oclint_sort	syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_c_oclint_sort = 1$/;"	v
g:syntastic_clang_check_config_file	syntastic/syntax_checkers/c/clang_check.vim	/^    let g:syntastic_clang_check_config_file = '.syntastic_clang_check_config'$/;"	v
g:syntastic_clang_tidy_config_file	syntastic/syntax_checkers/c/clang_tidy.vim	/^    let g:syntastic_clang_tidy_config_file = '.syntastic_clang_tidy_config'$/;"	v
g:syntastic_cobol_compiler_options	syntastic/syntax_checkers/cobol/cobc.vim	/^    let g:syntastic_cobol_compiler_options = ''$/;"	v
g:syntastic_cpp_compiler_options	syntastic/syntax_checkers/cpp/gcc.vim	/^    let g:syntastic_cpp_compiler_options = ''$/;"	v
g:syntastic_cpp_cpplint_thres	syntastic/syntax_checkers/cpp/cpplint.vim	/^    let g:syntastic_cpp_cpplint_thres = 5$/;"	v
g:syntastic_cppcheck_config_file	syntastic/syntax_checkers/c/cppcheck.vim	/^    let g:syntastic_cppcheck_config_file = '.syntastic_cppcheck_config'$/;"	v
g:syntastic_css_prettycss_sort	syntastic/syntax_checkers/css/prettycss.vim	/^    let g:syntastic_css_prettycss_sort = 1$/;"	v
g:syntastic_d_compiler_options	syntastic/syntax_checkers/d/dmd.vim	/^    let g:syntastic_d_compiler_options = ''$/;"	v
g:syntastic_enable_balloons	syntastic/plugin/syntastic/balloons.vim	/^    let g:syntastic_enable_balloons = 0$/;"	v
g:syntastic_erlc_include_path	syntastic/syntax_checkers/erlang/escript.vim	/^    let g:syntastic_erlc_include_path = ''$/;"	v
g:syntastic_fortran_compiler_options	syntastic/syntax_checkers/fortran/gfortran.vim	/^    let g:syntastic_fortran_compiler_options = ''$/;"	v
g:syntastic_haskell_scan_sort	syntastic/syntax_checkers/haskell/scan.vim	/^    let g:syntastic_haskell_scan_sort = 1$/;"	v
g:syntastic_html_tidy_blocklevel_tags	syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_blocklevel_tags	vim-angular/plugin/angular.vim	/^  let g:syntastic_html_tidy_blocklevel_tags = []$/;"	v
g:syntastic_html_tidy_blocklevel_tags	vim-angular/plugin/angular.vim	/^let g:syntastic_html_tidy_blocklevel_tags += [$/;"	v
g:syntastic_html_tidy_empty_tags	syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_empty_tags = []$/;"	v
g:syntastic_html_tidy_ignore_errors	syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_ignore_errors	vim-angular/plugin/angular.vim	/^  let g:syntastic_html_tidy_ignore_errors = []$/;"	v
g:syntastic_html_tidy_ignore_errors	vim-angular/plugin/angular.vim	/^let g:syntastic_html_tidy_ignore_errors += [$/;"	v
g:syntastic_html_tidy_inline_tags	syntastic/syntax_checkers/html/tidy.vim	/^    let g:syntastic_html_tidy_inline_tags = []$/;"	v
g:syntastic_html_validator_api	syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_api = 'https:\/\/validator.nu\/'$/;"	v
g:syntastic_html_validator_nsfilter	syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_nsfilter = ''$/;"	v
g:syntastic_html_validator_parser	syntastic/syntax_checkers/html/validator.vim	/^    let g:syntastic_html_validator_parser = ''$/;"	v
g:syntastic_html_w3_api	syntastic/syntax_checkers/html/w3.vim	/^    let g:syntastic_html_w3_api = 'http:\/\/validator.w3.org\/check'$/;"	v
g:syntastic_java_checkstyle_classpath	syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_classpath = 'checkstyle-6.10.1-all.jar'$/;"	v
g:syntastic_java_checkstyle_conf_file	syntastic/syntax_checkers/java/checkstyle.vim	/^    let g:syntastic_java_checkstyle_conf_file = 'sun_checks.xml'$/;"	v
g:syntastic_java_javac_autoload_maven_classpath	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_autoload_maven_classpath = 1$/;"	v
g:syntastic_java_javac_classpath	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_classpath = ''$/;"	v
g:syntastic_java_javac_config_file	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file = '.syntastic_javac_config'$/;"	v
g:syntastic_java_javac_config_file_enabled	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_config_file_enabled = 0$/;"	v
g:syntastic_java_javac_custom_classpath_command	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_custom_classpath_command = ''$/;"	v
g:syntastic_java_javac_delete_output	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_delete_output = 1$/;"	v
g:syntastic_java_javac_executable	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_executable = 'javac'$/;"	v
g:syntastic_java_javac_maven_pom_classpath	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_classpath = {}$/;"	v
g:syntastic_java_javac_maven_pom_ftime	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_maven_pom_ftime = {}$/;"	v
g:syntastic_java_javac_maven_pom_properties	syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_properties = {}$/;"	v
g:syntastic_java_javac_maven_pom_tags	syntastic/syntax_checkers/java/javac.vim	/^let g:syntastic_java_javac_maven_pom_tags = ['build', 'properties']$/;"	v
g:syntastic_java_javac_options	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_javac_options = '-Xlint'$/;"	v
g:syntastic_java_maven_executable	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_executable = 'mvn'$/;"	v
g:syntastic_java_maven_options	syntastic/syntax_checkers/java/javac.vim	/^    let g:syntastic_java_maven_options = ''$/;"	v
g:syntastic_javascript_eslint_generic	syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_generic = 0$/;"	v
g:syntastic_javascript_eslint_sort	syntastic/syntax_checkers/javascript/eslint.vim	/^    let g:syntastic_javascript_eslint_sort = 1$/;"	v
g:syntastic_javascript_flow_sort	syntastic/syntax_checkers/javascript/flow.vim	/^    let g:syntastic_javascript_flow_sort = 1$/;"	v
g:syntastic_javascript_jscs_sort	syntastic/syntax_checkers/javascript/jscs.vim	/^    let g:syntastic_javascript_jscs_sort = 1$/;"	v
g:syntastic_javascript_jshint_sort	syntastic/syntax_checkers/javascript/jshint.vim	/^    let g:syntastic_javascript_jshint_sort = 1$/;"	v
g:syntastic_javascript_standard_generic	syntastic/syntax_checkers/javascript/standard.vim	/^    let g:syntastic_javascript_standard_generic = 0$/;"	v
g:syntastic_less_options	syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_options = ''$/;"	v
g:syntastic_less_use_less_lint	syntastic/syntax_checkers/less/lessc.vim	/^    let g:syntastic_less_use_less_lint = 0$/;"	v
g:syntastic_markdown_mdl_sort	syntastic/syntax_checkers/markdown/mdl.vim	/^    let g:syntastic_markdown_mdl_sort = 1$/;"	v
g:syntastic_objc_compiler_options	syntastic/syntax_checkers/objc/gcc.vim	/^    let g:syntastic_objc_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_objcpp_compiler_options	syntastic/syntax_checkers/objcpp/gcc.vim	/^    let g:syntastic_objcpp_compiler_options = '-std=gnu99'$/;"	v
g:syntastic_ocaml_use_janestreet_core	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_janestreet_core = 0$/;"	v
g:syntastic_ocaml_use_ocamlbuild	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlbuild = 0$/;"	v
g:syntastic_ocaml_use_ocamlc	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let g:syntastic_ocaml_use_ocamlc = 0$/;"	v
g:syntastic_oclint_config_file	syntastic/syntax_checkers/c/oclint.vim	/^    let g:syntastic_oclint_config_file = '.syntastic_oclint_config'$/;"	v
g:syntastic_pc_lint_config_file	syntastic/syntax_checkers/c/pc_lint.vim	/^    let g:syntastic_pc_lint_config_file = 'options.lnt'$/;"	v
g:syntastic_perl_lib_path	syntastic/syntax_checkers/perl/perl.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_lib_path	syntastic/syntax_checkers/yaml/yamlxs.vim	/^    let g:syntastic_perl_lib_path = []$/;"	v
g:syntastic_perl_perlcritic_thres	syntastic/syntax_checkers/perl/perlcritic.vim	/^    let g:syntastic_perl_perlcritic_thres = 5$/;"	v
g:syntastic_python_prospector_sort	syntastic/syntax_checkers/python/prospector.vim	/^    let g:syntastic_python_prospector_sort = 1$/;"	v
g:syntastic_python_pylama_sort	syntastic/syntax_checkers/python/pylama.vim	/^    let g:syntastic_python_pylama_sort = 1$/;"	v
g:syntastic_python_pylint_sort	syntastic/syntax_checkers/python/pylint.vim	/^    let g:syntastic_python_pylint_sort = 1$/;"	v
g:syntastic_python_python_use_codec	syntastic/syntax_checkers/python/python.vim	/^    let g:syntastic_python_python_use_codec = 0$/;"	v
g:syntastic_quiet_messages	syntastic/plugin/syntastic.vim	/^        let g:syntastic_quiet_messages['type'] = s:quiet_warnings$/;"	v
g:syntastic_r_lint_sort	syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_sort = 1$/;"	v
g:syntastic_r_lint_styles	syntastic/syntax_checkers/r/lint.vim	/^    let g:syntastic_r_lint_styles = 'lint.style'$/;"	v
g:syntastic_r_svtools_styles	syntastic/syntax_checkers/r/svtools.vim	/^    let g:syntastic_r_svtools_styles = 'lint.style'$/;"	v
g:syntastic_racket_code_ayatollah_script	syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_script = 'code-ayatollah.rkt'$/;"	v
g:syntastic_racket_code_ayatollah_sort	syntastic/syntax_checkers/racket/code-ayatollah.vim	/^    let g:syntastic_racket_code_ayatollah_sort = 1$/;"	v
g:syntastic_ruby_flog_sort	syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_sort = 1$/;"	v
g:syntastic_ruby_flog_threshold_error	syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_error = 90$/;"	v
g:syntastic_ruby_flog_threshold_warning	syntastic/syntax_checkers/ruby/flog.vim	/^    let g:syntastic_ruby_flog_threshold_warning = 45$/;"	v
g:syntastic_sass_check_partials	syntastic/syntax_checkers/sass/sass.vim	/^    let g:syntastic_sass_check_partials = 0$/;"	v
g:syntastic_scala_scalastyle_config_file	syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_config_file = 'scalastyle_config.xml'$/;"	v
g:syntastic_scala_scalastyle_jar	syntastic/syntax_checkers/scala/scalastyle.vim	/^    let g:syntastic_scala_scalastyle_jar = 'scalastyle-batch_2.10.jar'$/;"	v
g:syntastic_shell	syntastic/plugin/syntastic.vim	/^    let g:syntastic_shell = &shell$/;"	v
g:syntastic_sparse_config_file	syntastic/syntax_checkers/c/sparse.vim	/^    let g:syntastic_sparse_config_file = '.syntastic_sparse_config'$/;"	v
g:syntastic_splint_config_file	syntastic/syntax_checkers/c/splint.vim	/^    let g:syntastic_splint_config_file = '.syntastic_splint_config'$/;"	v
g:syntastic_tex_chktex_showmsgs	syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_showmsgs = 1$/;"	v
g:syntastic_tex_chktex_sort	syntastic/syntax_checkers/tex/chktex.vim	/^    let g:syntastic_tex_chktex_sort = 1$/;"	v
g:syntastic_text_atdtool_sort	syntastic/syntax_checkers/text/atdtool.vim	/^    let g:syntastic_text_atdtool_sort = 1$/;"	v
g:syntastic_typescript_tsc_sort	syntastic/syntax_checkers/typescript/tsc.vim	/^    let g:syntastic_typescript_tsc_sort = 1$/;"	v
g:syntastic_typescript_tslint_sort	syntastic/syntax_checkers/typescript/tslint.vim	/^    let g:syntastic_typescript_tslint_sort = 1$/;"	v
g:syntastic_verapp_config_file	syntastic/syntax_checkers/cpp/verapp.vim	/^    let g:syntastic_verapp_config_file = '.syntastic_verapp_config'$/;"	v
g:syntastic_verilog_compiler_options	syntastic/syntax_checkers/verilog/verilator.vim	/^    let g:syntastic_verilog_compiler_options = '-Wall'$/;"	v
g:syntastic_vim_vint_sort	syntastic/syntax_checkers/vim/vint.vim	/^    let g:syntastic_vim_vint_sort = 1$/;"	v
g:syntastic_xhtml_tidy_ignore_errors	syntastic/syntax_checkers/xhtml/tidy.vim	/^    let g:syntastic_xhtml_tidy_ignore_errors = []$/;"	v
g:tagbar_iconchars	vim-tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	vim-tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:user_emmet_leader_key	vim-emmet/plugin/emmet.vim	/^  let g:user_emmet_leader_key = '<c-y>'$/;"	v
gC	vim-capslock/plugin/capslock.vim	/^nmap gC <Plug>CapsLockToggle$/;"	m
gemLib	jasmine/grunt/tasks/version.js	/^function gemLib(path) { return '.\/lib\/jasmine-core\/' + path; }$/;"	f
get	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:get(name)$/;"	f
get	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:get(name, ...)$/;"	f
getFiles	jasmine/lib/jasmine-core/spec/node_suite.js	/^function getFiles(dir, matcher) {$/;"	f
getFiles	jasmine/spec/node_suite.js	/^function getFiles(dir, matcher) {$/;"	f
getJasmineRequireObj	jasmine/lib/console/console.js	/^function getJasmineRequireObj() {$/;"	f
getJasmineRequireObj	jasmine/lib/jasmine-core/jasmine.js	/^})(this);$/;"	f
getJasmineRequireObj	jasmine/src/console/ConsoleReporter.js	/^getJasmineRequireObj().ConsoleReporter = function() {$/;"	f
getJasmineRequireObj	jasmine/src/console/requireConsole.js	/^function getJasmineRequireObj() {$/;"	f
getJasmineRequireObj	jasmine/src/core/CallTracker.js	/^getJasmineRequireObj().CallTracker = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/Clock.js	/^getJasmineRequireObj().Clock = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/DelayedFunctionScheduler.js	/^getJasmineRequireObj().DelayedFunctionScheduler = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/Env.js	/^getJasmineRequireObj().Env = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/ExceptionFormatter.js	/^getJasmineRequireObj().ExceptionFormatter = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/Expectation.js	/^getJasmineRequireObj().Expectation = function() {$/;"	c
getJasmineRequireObj	jasmine/src/core/ExpectationResult.js	/^\/\/TODO: expectation result may make more sense as a presentation of an expectation.$/;"	f
getJasmineRequireObj	jasmine/src/core/JsApiReporter.js	/^getJasmineRequireObj().JsApiReporter = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/MockDate.js	/^getJasmineRequireObj().MockDate = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/Order.js	/^\/*jshint bitwise: false*\/$/;"	f
getJasmineRequireObj	jasmine/src/core/PrettyPrinter.js	/^getJasmineRequireObj().pp = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/QueueRunner.js	/^getJasmineRequireObj().QueueRunner = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/ReportDispatcher.js	/^getJasmineRequireObj().ReportDispatcher = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/Spec.js	/^getJasmineRequireObj().Spec = function(j$) {$/;"	c
getJasmineRequireObj	jasmine/src/core/SpyRegistry.js	/^getJasmineRequireObj().SpyRegistry = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/SpyStrategy.js	/^getJasmineRequireObj().SpyStrategy = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/Suite.js	/^getJasmineRequireObj().Suite = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/Timer.js	/^getJasmineRequireObj().Timer = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/TreeProcessor.js	/^getJasmineRequireObj().TreeProcessor = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/asymmetric_equality/Any.js	/^getJasmineRequireObj().Any = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/asymmetric_equality/Anything.js	/^getJasmineRequireObj().Anything = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/asymmetric_equality/ArrayContaining.js	/^getJasmineRequireObj().ArrayContaining = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^getJasmineRequireObj().ObjectContaining = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/asymmetric_equality/StringMatching.js	/^getJasmineRequireObj().StringMatching = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/errors.js	/^getJasmineRequireObj().errors = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/matchersUtil.js	/^getJasmineRequireObj().matchersUtil = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/requireMatchers.js	/^getJasmineRequireObj().requireMatchers = function(jRequire, j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBe.js	/^getJasmineRequireObj().toBe = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeCloseTo.js	/^getJasmineRequireObj().toBeCloseTo = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeDefined.js	/^getJasmineRequireObj().toBeDefined = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeFalsy.js	/^getJasmineRequireObj().toBeFalsy = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeGreaterThan.js	/^getJasmineRequireObj().toBeGreaterThan = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeLessThan.js	/^getJasmineRequireObj().toBeLessThan = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeNaN.js	/^getJasmineRequireObj().toBeNaN = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeNull.js	/^getJasmineRequireObj().toBeNull = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeTruthy.js	/^getJasmineRequireObj().toBeTruthy = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toBeUndefined.js	/^getJasmineRequireObj().toBeUndefined = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toContain.js	/^getJasmineRequireObj().toContain = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toEqual.js	/^getJasmineRequireObj().toEqual = function() {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toHaveBeenCalled.js	/^getJasmineRequireObj().toHaveBeenCalled = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toHaveBeenCalledTimes..js	/^getJasmineRequireObj().toHaveBeenCalledTimes = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toHaveBeenCalledWith.js	/^getJasmineRequireObj().toHaveBeenCalledWith = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toMatch.js	/^getJasmineRequireObj().toMatch = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toThrow.js	/^getJasmineRequireObj().toThrow = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/matchers/toThrowError.js	/^getJasmineRequireObj().toThrowError = function(j$) {$/;"	f
getJasmineRequireObj	jasmine/src/core/requireInterface.js	/^getJasmineRequireObj().interface = function(jasmine, env) {$/;"	f
getJasmineRequireObj	jasmine/src/core/util.js	/^getJasmineRequireObj().util = function() {$/;"	f
getJasmineRequireObj	jasmine/src/version.js	/^getJasmineRequireObj().version = function() {$/;"	f
getJasmineRequireObj..clearInterval	jasmine/src/core/Clock.js	/^        setInterval: setInterval,$/;"	p
getJasmineRequireObj..clearTimeout	jasmine/src/core/Clock.js	/^        setTimeout: setTimeout,$/;"	p
getJasmineRequireObj..setInterval	jasmine/src/core/Clock.js	/^        clearTimeout: clearTimeout,$/;"	p
getJasmineRequireObj..setTimeout	jasmine/src/core/Clock.js	/^      fakeTimingFunctions = {$/;"	p
getJasmineRequireObj.Any	jasmine/src/core/asymmetric_equality/Any.js	/^  function Any(expectedObject) {$/;"	c
getJasmineRequireObj.Anything	jasmine/src/core/asymmetric_equality/Anything.js	/^  function Anything() {}$/;"	f
getJasmineRequireObj.ArrayContaining	jasmine/src/core/asymmetric_equality/ArrayContaining.js	/^  function ArrayContaining(sample) {$/;"	c
getJasmineRequireObj.CallTracker	jasmine/src/core/CallTracker.js	/^  function CallTracker() {$/;"	c
getJasmineRequireObj.CallTracker.track	jasmine/src/core/CallTracker.js	/^    this.track = function(context) {$/;"	m
getJasmineRequireObj.Clock	jasmine/src/core/Clock.js	/^  function Clock(global, delayedFunctionSchedulerFactory, mockDate) {$/;"	f
getJasmineRequireObj.ConsoleReporter	jasmine/lib/console/console.js	/^  function ConsoleReporter(options) {$/;"	c
getJasmineRequireObj.ConsoleReporter	jasmine/src/console/ConsoleReporter.js	/^  function ConsoleReporter(options) {$/;"	c
getJasmineRequireObj.DelayedFunctionScheduler	jasmine/src/core/DelayedFunctionScheduler.js	/^  function DelayedFunctionScheduler() {$/;"	f
getJasmineRequireObj.Env	jasmine/src/core/Env.js	/^  function Env(options) {$/;"	c
getJasmineRequireObj.ExceptionFormatter	jasmine/src/core/ExceptionFormatter.js	/^  function ExceptionFormatter() {$/;"	c
getJasmineRequireObj.ExceptionFormatter.message	jasmine/src/core/ExceptionFormatter.js	/^    this.message = function(error) {$/;"	m
getJasmineRequireObj.Expectation	jasmine/src/core/Expectation.js	/^  function Expectation(options) {$/;"	c
getJasmineRequireObj.ExpectationFailed	jasmine/src/core/errors.js	/^  function ExpectationFailed() {}$/;"	f
getJasmineRequireObj.JsApiReporter	jasmine/src/core/JsApiReporter.js	/^  function JsApiReporter(options) {$/;"	c
getJasmineRequireObj.JsApiReporter.jasmineStarted	jasmine/src/core/JsApiReporter.js	/^    this.jasmineStarted = function() {$/;"	m
getJasmineRequireObj.MockDate	jasmine/src/core/MockDate.js	/^  function MockDate(global) {$/;"	f
getJasmineRequireObj.ObjectContaining	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^  function ObjectContaining(sample) {$/;"	c
getJasmineRequireObj.Order	jasmine/src/core/Order.js	/^  function Order(options) {$/;"	c
getJasmineRequireObj.Order.generateSeed	jasmine/src/core/Order.js	/^    function generateSeed() {$/;"	f
getJasmineRequireObj.Order.jenkinsHash	jasmine/src/core/Order.js	/^    function jenkinsHash(key) {$/;"	f
getJasmineRequireObj.Order.naturalOrder	jasmine/src/core/Order.js	/^    function naturalOrder(items) {$/;"	f
getJasmineRequireObj.Order.randomOrder	jasmine/src/core/Order.js	/^    function randomOrder(items) {$/;"	f
getJasmineRequireObj.PrettyPrinter	jasmine/src/core/PrettyPrinter.js	/^  function PrettyPrinter() {$/;"	c
getJasmineRequireObj.ReportDispatcher	jasmine/src/core/ReportDispatcher.js	/^  function ReportDispatcher(methods) {$/;"	c
getJasmineRequireObj.ReportDispatcher.addReporter	jasmine/src/core/ReportDispatcher.js	/^    this.addReporter = function(reporter) {$/;"	m
getJasmineRequireObj.Spec	jasmine/src/core/Spec.js	/^  function Spec(attrs) {$/;"	c
getJasmineRequireObj.SpyRegistry	jasmine/src/core/SpyRegistry.js	/^  function SpyRegistry(options) {$/;"	c
getJasmineRequireObj.SpyStrategy	jasmine/src/core/SpyStrategy.js	/^  function SpyStrategy(options) {$/;"	c
getJasmineRequireObj.StringMatching	jasmine/src/core/asymmetric_equality/StringMatching.js	/^  function StringMatching(expected) {$/;"	c
getJasmineRequireObj.StringPrettyPrinter	jasmine/src/core/PrettyPrinter.js	/^  function StringPrettyPrinter() {$/;"	c
getJasmineRequireObj.Suite	jasmine/src/core/Suite.js	/^  function Suite(attrs) {$/;"	c
getJasmineRequireObj.Suite.result.id	jasmine/src/core/Suite.js	/^    this.result = {$/;"	p
getJasmineRequireObj.Timer	jasmine/src/core/Timer.js	/^  function Timer(options) {$/;"	c
getJasmineRequireObj.TreeProcessor	jasmine/src/core/TreeProcessor.js	/^  function TreeProcessor(attrs) {$/;"	c
getJasmineRequireObj.beforeAndAfterFns	jasmine/src/core/Env.js	/^    var beforeAndAfterFns = function(suite) {$/;"	f
getJasmineRequireObj.buildExpectationResult	jasmine/src/core/ExpectationResult.js	/^  function buildExpectationResult(options) {$/;"	f
getJasmineRequireObj.clearResourcesForRunnable	jasmine/src/core/Env.js	/^    var clearResourcesForRunnable = function(id) {$/;"	f
getJasmineRequireObj.clone	jasmine/src/core/Suite.js	/^  function clone(obj) {$/;"	f
getJasmineRequireObj.executeNode	jasmine/src/core/TreeProcessor.js	/^    function executeNode(node, segmentNumber) {$/;"	f
getJasmineRequireObj.getPrototype	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^  function getPrototype(obj) {$/;"	f
getJasmineRequireObj.hasProperty	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^  function hasProperty(obj, property) {$/;"	f
getJasmineRequireObj.isAfterAll	jasmine/src/core/Suite.js	/^  function isAfterAll(children) {$/;"	f
getJasmineRequireObj.isFailure	jasmine/src/core/Suite.js	/^  function isFailure(args) {$/;"	f
getJasmineRequireObj.jasmineInterface.describe	jasmine/src/core/requireInterface.js	/^  var jasmineInterface = {$/;"	m
getJasmineRequireObj.noopTimer.elapsed	jasmine/lib/console/console.js	/^    start: function(){},$/;"	m
getJasmineRequireObj.noopTimer.elapsed	jasmine/src/console/ConsoleReporter.js	/^    start: function(){},$/;"	m
getJasmineRequireObj.noopTimer.elapsed	jasmine/src/core/JsApiReporter.js	/^    start: function(){},$/;"	m
getJasmineRequireObj.noopTimer.start	jasmine/lib/console/console.js	/^  var noopTimer = {$/;"	m
getJasmineRequireObj.noopTimer.start	jasmine/src/console/ConsoleReporter.js	/^  var noopTimer = {$/;"	m
getJasmineRequireObj.noopTimer.start	jasmine/src/core/JsApiReporter.js	/^  var noopTimer = {$/;"	m
getJasmineRequireObj.once	jasmine/src/core/QueueRunner.js	/^  function once(fn) {$/;"	f
getJasmineRequireObj.orderChildSegments	jasmine/src/core/TreeProcessor.js	/^    function orderChildSegments(children) {$/;"	f
getJasmineRequireObj.return.pass	jasmine/src/core/matchers/toBeNaN.js	/^        var result = {$/;"	p
getJasmineRequireObj.return.pass	jasmine/src/core/matchers/toThrow.js	/^        var result = { pass: false },$/;"	p
getJasmineRequireObj.segmentChildren	jasmine/src/core/TreeProcessor.js	/^    function segmentChildren(node, orderedChildren, nodeStats, executableIndex) {$/;"	f
getJasmineRequireObj.segmentChildren.currentSegment.index	jasmine/src/core/TreeProcessor.js	/^      var currentSegment = { index: 0, owner: node, nodes: [], min: startingMin(executableIndex), max: startingMax(executableIndex) },$/;"	p
getJasmineRequireObj.segmentChildren.currentSegment.nodes	jasmine/src/core/TreeProcessor.js	/^      var currentSegment = { index: 0, owner: node, nodes: [], min: startingMin(executableIndex), max: startingMax(executableIndex) },$/;"	p
getJasmineRequireObj.segmentChildren.currentSegment.owner	jasmine/src/core/TreeProcessor.js	/^      var currentSegment = { index: 0, owner: node, nodes: [], min: startingMin(executableIndex), max: startingMax(executableIndex) },$/;"	p
getJasmineRequireObj.self.install	jasmine/src/core/MockDate.js	/^    if (!global || !global.Date) {$/;"	f
getJasmineRequireObj.self.tick	jasmine/src/core/DelayedFunctionScheduler.js	/^    var delayedFnCount = 0;$/;"	f
getJasmineRequireObj.startingMax	jasmine/src/core/TreeProcessor.js	/^    function startingMax(executableIndex) {$/;"	f
getJasmineRequireObj.startingMin	jasmine/src/core/TreeProcessor.js	/^    function startingMin(executableIndex) {$/;"	f
getJasmineRequireObj.toBe	jasmine/src/core/matchers/toBe.js	/^  function toBe() {$/;"	f
getJasmineRequireObj.toBeCloseTo	jasmine/src/core/matchers/toBeCloseTo.js	/^  function toBeCloseTo() {$/;"	f
getJasmineRequireObj.toBeDefined	jasmine/src/core/matchers/toBeDefined.js	/^  function toBeDefined() {$/;"	f
getJasmineRequireObj.toBeFalsy	jasmine/src/core/matchers/toBeFalsy.js	/^  function toBeFalsy() {$/;"	f
getJasmineRequireObj.toBeGreaterThan	jasmine/src/core/matchers/toBeGreaterThan.js	/^  function toBeGreaterThan() {$/;"	f
getJasmineRequireObj.toBeLessThan	jasmine/src/core/matchers/toBeLessThan.js	/^  function toBeLessThan() {$/;"	f
getJasmineRequireObj.toBeNaN	jasmine/src/core/matchers/toBeNaN.js	/^  function toBeNaN() {$/;"	f
getJasmineRequireObj.toBeNull	jasmine/src/core/matchers/toBeNull.js	/^  function toBeNull() {$/;"	f
getJasmineRequireObj.toBeTruthy	jasmine/src/core/matchers/toBeTruthy.js	/^  function toBeTruthy() {$/;"	f
getJasmineRequireObj.toBeUndefined	jasmine/src/core/matchers/toBeUndefined.js	/^  function toBeUndefined() {$/;"	f
getJasmineRequireObj.toContain	jasmine/src/core/matchers/toContain.js	/^  function toContain(util, customEqualityTesters) {$/;"	f
getJasmineRequireObj.toEqual	jasmine/src/core/matchers/toEqual.js	/^  function toEqual(util, customEqualityTesters) {$/;"	f
getJasmineRequireObj.toHaveBeenCalled	jasmine/src/core/matchers/toHaveBeenCalled.js	/^  function toHaveBeenCalled() {$/;"	f
getJasmineRequireObj.toHaveBeenCalledTimes	jasmine/src/core/matchers/toHaveBeenCalledTimes..js	/^  function toHaveBeenCalledTimes() {$/;"	f
getJasmineRequireObj.toHaveBeenCalledWith	jasmine/src/core/matchers/toHaveBeenCalledWith.js	/^  function toHaveBeenCalledWith(util, customEqualityTesters) {$/;"	f
getJasmineRequireObj.toMatch	jasmine/src/core/matchers/toMatch.js	/^  function toMatch() {$/;"	f
getJasmineRequireObj.toThrow	jasmine/src/core/matchers/toThrow.js	/^  function toThrow(util) {$/;"	f
getJasmineRequireObj.toThrowError	jasmine/src/core/matchers/toThrowError.js	/^  function toThrowError () {$/;"	f
getMatcher	jasmine/src/core/matchers/toThrowError.js	/^    function getMatcher() {$/;"	f
getMatcher.messageMatch	jasmine/src/core/matchers/toThrowError.js	/^      function messageMatch(message) {$/;"	f
getPromptMessage	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:getPromptMessage(num_strokes) "{{{$/;"	f
getSourceFiles	jasmine/lib/jasmine-core/spec/helpers/nodeDefineJasmineUnderTest.js	/^  function getSourceFiles() {$/;"	f
getSourceFiles	jasmine/spec/helpers/nodeDefineJasmineUnderTest.js	/^  function getSourceFiles() {$/;"	f
getSpecFiles	jasmine/lib/jasmine-core/spec/node_suite.js	/^function getSpecFiles(dir) {$/;"	f
getSpecFiles	jasmine/spec/node_suite.js	/^function getSpecFiles(dir) {$/;"	f
getSpecName	jasmine/src/core/Env.js	/^    var getSpecName = function(spec, suite) {$/;"	f
get_candidates	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_candidates(complete_results, complete_pos, complete_str) "{{{$/;"	f
get_cmdline	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:get_cmdline()$/;"	f
get_cmdline_cword	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:get_cmdline_cword(backward, cword)$/;"	f
get_complete_pos	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_complete_pos(complete_results) "{{{$/;"	f
get_convert_candidates	vim-neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! s:get_convert_candidates(candidates)$/;"	f
get_escaped_group_char	vim-easymotion/autoload/EasyMotion.vim	/^function! s:get_escaped_group_char(dict, char) "{{{$/;"	f
get_glob_files	vim-neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:get_glob_files(complete_str, path) "{{{$/;"	f
get_hit_enter_max_length	vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:get_hit_enter_max_length() abort$/;"	f
get_last_status	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:get_last_status() abort$/;"	f
get_list	vim-neocomplete/autoload/neocomplete/util.vim	/^function! s:get_list() "{{{$/;"	f
get_map_str	vim-tagbar/autoload/tagbar.vim	/^function! s:get_map_str(map) abort$/;"	f
get_member_list	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_member_list(cur_text, var_name) "{{{$/;"	f
get_member_pattern	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_member_pattern(filetype) "{{{$/;"	f
get_omni_funcs	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_funcs(filetype) "{{{$/;"	f
get_omni_list	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:get_omni_list(list) "{{{$/;"	f
get_prelude	vim-neocomplete/autoload/neocomplete/util.vim	/^function! s:get_prelude() "{{{$/;"	f
get_process	vim-neocomplete/autoload/neocomplete/util.vim	/^function! s:get_process() "{{{$/;"	f
get_root	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(Dir) ->$/;"	f
get_root	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["src" | Tail], _Path) ->$/;"	f
get_root	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root(["test" | Tail], _Path) ->$/;"	f
get_root	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([], Path) ->$/;"	f
get_root	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^get_root([_ | Tail], Path) ->$/;"	f
get_sources_list	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_sources_list	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:get_sources_list() "{{{$/;"	f
get_string	vim-neocomplete/autoload/neocomplete/util.vim	/^function! s:get_string() "{{{$/;"	f
getchar	vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^function! s:getchar(...)$/;"	f
getchar	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar(...) abort$/;"	f
getchar	vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getchar_safe	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:getchar_safe(...) abort$/;"	f
getfilename	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:getfilename(cache_dir, filename) abort$/;"	f
gettime	vim-tagbar/autoload/tagbar.vim	/^    function! s:gettime() abort$/;"	f
gg	vim-easymotion/t/easymotion_spec.vim	/^        normal! gg$/;"	m
gg0	vim-easymotion/t/easymotion_spec.vim	/^        normal! gg0$/;"	m
ggi*	git-gutter/test/testModifyLines.vim	/^normal ggi*$/;"	m
ggo*	git-gutter/test/testAddLines.vim	/^normal ggo*$/;"	m
ggo*	git-gutter/test/testAddLinesFish.vim	/^normal ggo*$/;"	m
ggo*	git-gutter/test/testFilenameWithEquals.vim	/^normal ggo*$/;"	m
ggo*	git-gutter/test/testFilenameWithSquareBrackets.vim	/^normal ggo*$/;"	m
ggx	git-gutter/test/testKeepAlt.vim	/^normal ggx$/;"	m
gitgutter	git-gutter/plugin/gitgutter.vim	/^augroup gitgutter$/;"	a
gitgutter#all	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#all()$/;"	f
gitgutter#debug#debug	git-gutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#debug()$/;"	f
gitgutter#debug#git_version	git-gutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#git_version()$/;"	f
gitgutter#debug#log	git-gutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#log(message)$/;"	f
gitgutter#debug#option	git-gutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#option(name)$/;"	f
gitgutter#debug#output	git-gutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#output(text)$/;"	f
gitgutter#debug#separator	git-gutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#separator()$/;"	f
gitgutter#debug#vim_version	git-gutter/autoload/gitgutter/debug.vim	/^function! gitgutter#debug#vim_version()$/;"	f
gitgutter#diff#adjust_hunk_summary	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#adjust_hunk_summary(diff_for_hunk, staging)$/;"	f
gitgutter#diff#discard_hunks	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#discard_hunks(diff, keep_header)$/;"	f
gitgutter#diff#generate_diff_for_hunk	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#generate_diff_for_hunk(type)$/;"	f
gitgutter#diff#is_added	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_added	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_added(from_count, to_count)$/;"	f
gitgutter#diff#is_modified_and_removed	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_modified_and_removed(from_count, to_count)$/;"	f
gitgutter#diff#is_removed	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#is_removed(from_count, to_count)$/;"	f
gitgutter#diff#parse_diff	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_diff(diff)$/;"	f
gitgutter#diff#parse_hunk	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#parse_hunk(line)$/;"	f
gitgutter#diff#process_added	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_hunk	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunk(hunk)$/;"	f
gitgutter#diff#process_hunks	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_hunks(hunks)$/;"	f
gitgutter#diff#process_modified	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_added	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_added(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_modified_and_removed	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_modified_and_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#process_removed	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#process_removed(modifications, from_count, to_count, to_line)$/;"	f
gitgutter#diff#run_diff	git-gutter/autoload/gitgutter/diff.vim	/^function! gitgutter#diff#run_diff(realtime, use_external_grep)$/;"	f
gitgutter#disable	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#disable()$/;"	f
gitgutter#enable	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#enable()$/;"	f
gitgutter#highlight#define_highlights	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_highlights()$/;"	f
gitgutter#highlight#define_sign_column_highlight	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_column_highlight()$/;"	f
gitgutter#highlight#define_sign_line_highlights	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_line_highlights()$/;"	f
gitgutter#highlight#define_sign_text	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text()$/;"	f
gitgutter#highlight#define_sign_text_highlights	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_sign_text_highlights()$/;"	f
gitgutter#highlight#define_signs	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#define_signs()$/;"	f
gitgutter#highlight#get_background_colors	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#get_background_colors(group)$/;"	f
gitgutter#highlight#match_highlight	git-gutter/autoload/gitgutter/highlight.vim	/^function! gitgutter#highlight#match_highlight(highlight, pattern)$/;"	f
gitgutter#hunk#current_hunk	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#current_hunk()$/;"	f
gitgutter#hunk#cursor_in_hunk	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#cursor_in_hunk(hunk)$/;"	f
gitgutter#hunk#hunks	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#hunks()$/;"	f
gitgutter#hunk#increment_lines_added	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_added(count)$/;"	f
gitgutter#hunk#increment_lines_modified	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_modified(count)$/;"	f
gitgutter#hunk#increment_lines_removed	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#increment_lines_removed(count)$/;"	f
gitgutter#hunk#line_adjustment_for_current_hunk	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#line_adjustment_for_current_hunk()$/;"	f
gitgutter#hunk#next_hunk	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#next_hunk(count)$/;"	f
gitgutter#hunk#prev_hunk	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#prev_hunk(count)$/;"	f
gitgutter#hunk#reset	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#reset()$/;"	f
gitgutter#hunk#set_hunks	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#set_hunks(hunks)$/;"	f
gitgutter#hunk#summary	git-gutter/autoload/gitgutter/hunk.vim	/^function! gitgutter#hunk#summary()$/;"	f
gitgutter#line_highlights_disable	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_disable()$/;"	f
gitgutter#line_highlights_enable	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_enable()$/;"	f
gitgutter#line_highlights_toggle	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#line_highlights_toggle()$/;"	f
gitgutter#preview_hunk	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#preview_hunk()$/;"	f
gitgutter#process_buffer	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#process_buffer(bufnr, realtime)$/;"	f
gitgutter#revert_hunk	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#revert_hunk()$/;"	f
gitgutter#sign#add_dummy_sign	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#add_dummy_sign()$/;"	f
gitgutter#sign#clear_signs	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#clear_signs()$/;"	f
gitgutter#sign#find_current_signs	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#find_current_signs()$/;"	f
gitgutter#sign#next_sign_id	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#next_sign_id()$/;"	f
gitgutter#sign#obsolete_gitgutter_signs_to_remove	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#obsolete_gitgutter_signs_to_remove(new_gitgutter_signs_line_numbers)$/;"	f
gitgutter#sign#remove_dummy_sign	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_dummy_sign(force)$/;"	f
gitgutter#sign#remove_signs	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#remove_signs(sign_ids, all_signs)$/;"	f
gitgutter#sign#update_signs	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#update_signs(modified_lines)$/;"	f
gitgutter#sign#upsert_new_gitgutter_signs	git-gutter/autoload/gitgutter/sign.vim	/^function! gitgutter#sign#upsert_new_gitgutter_signs(modified_lines)$/;"	f
gitgutter#signs_disable	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#signs_disable()$/;"	f
gitgutter#signs_enable	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#signs_enable()$/;"	f
gitgutter#signs_toggle	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#signs_toggle()$/;"	f
gitgutter#stage_hunk	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#stage_hunk()$/;"	f
gitgutter#toggle	git-gutter/autoload/gitgutter.vim	/^function! gitgutter#toggle()$/;"	f
gitgutter#utility#bufnr	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#bufnr()$/;"	f
gitgutter#utility#command_in_directory_of_file	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#command_in_directory_of_file(cmd)$/;"	f
gitgutter#utility#directory_of_file	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#directory_of_file()$/;"	f
gitgutter#utility#exists_file	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#exists_file()$/;"	f
gitgutter#utility#extension	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#extension()$/;"	f
gitgutter#utility#file	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file()$/;"	f
gitgutter#utility#file_relative_to_repo_root	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#file_relative_to_repo_root()$/;"	f
gitgutter#utility#filename	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#filename()$/;"	f
gitgutter#utility#full_path_to_directory_of_file	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#full_path_to_directory_of_file()$/;"	f
gitgutter#utility#has_fresh_changes	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_fresh_changes()$/;"	f
gitgutter#utility#has_unsaved_changes	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#has_unsaved_changes()$/;"	f
gitgutter#utility#help_file	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#help_file()$/;"	f
gitgutter#utility#highlight_name_for_change	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#highlight_name_for_change(text)$/;"	f
gitgutter#utility#is_active	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#is_active()$/;"	f
gitgutter#utility#not_git_dir	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#not_git_dir()$/;"	f
gitgutter#utility#save_last_seen_change	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#save_last_seen_change()$/;"	f
gitgutter#utility#set_buffer	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#set_buffer(bufnr)$/;"	f
gitgutter#utility#shell_error	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shell_error()$/;"	f
gitgutter#utility#shellescape	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#shellescape(arg)$/;"	f
gitgutter#utility#strip_trailing_new_line	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#strip_trailing_new_line(line)$/;"	f
gitgutter#utility#system	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#system(cmd, ...)$/;"	f
gitgutter#utility#using_xolox_shell	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#using_xolox_shell()$/;"	f
gitgutter#utility#warn	git-gutter/autoload/gitgutter/utility.vim	/^function! gitgutter#utility#warn(message)$/;"	f
github_url	vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(opts, ...) abort$/;"	f
glob	jasmine/lib/jasmine-core/spec/helpers/nodeDefineJasmineUnderTest.js	/^  var glob = require("glob");$/;"	v
glob	jasmine/spec/helpers/nodeDefineJasmineUnderTest.js	/^  var glob = require("glob");$/;"	v
glob	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:glob(expr) abort$/;"	f
global.getJasmineRequireObj	jasmine/lib/jasmine-core/spec/helpers/nodeDefineJasmineUnderTest.js	/^  var j$Require = require(path.join(__dirname, "..\/..\/src\/core\/requireCore.js"));$/;"	f
global.getJasmineRequireObj	jasmine/spec/helpers/nodeDefineJasmineUnderTest.js	/^  var j$Require = require(path.join(__dirname, "..\/..\/src\/core\/requireCore.js"));$/;"	f
globpath	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:globpath(path, expr) abort$/;"	f
goto_markedwin	vim-tagbar/autoload/tagbar.vim	/^function! s:goto_markedwin(...) abort$/;"	f
goto_tagbar	vim-tagbar/autoload/tagbar.vim	/^function! s:goto_tagbar(...) abort$/;"	f
goto_win	vim-tagbar/autoload/tagbar.vim	/^function! s:goto_win(winnr, ...) abort$/;"	f
group_by	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_by	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:group_by(xs, f) abort$/;"	f
group_list	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:group_list()$/;"	f
grunt	jasmine/grunt/config/concat.js	/^var grunt = require('grunt');$/;"	v
grunt	jasmine/grunt/tasks/build_standalone.js	/^var grunt = require("grunt");$/;"	v
grunt	jasmine/grunt/tasks/version.js	/^var grunt = require("grunt");$/;"	v
gsub	vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
h	vim-easymotion/t/easymotion_spec.vim	/^        normal! h$/;"	m
handleEmpty	vim-easymotion/autoload/EasyMotion.vim	/^function! s:handleEmpty(input, visualmode) "{{{$/;"	f
handleLeftClick	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleLeftClick()$/;"	f
handleMiddleMouse	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:handleMiddleMouse()$/;"	f
has	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has(list, value) abort$/;"	f
has_common_items	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_common_items	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_common_items(list1, list2) abort$/;"	f
has_index	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_index	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:has_index(list, index) abort$/;"	f
has_vimproc	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^function! s:has_vimproc() "{{{$/;"	f
has_vimproc	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:has_vimproc() abort$/;"	f
hash	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:hash(str) abort$/;"	f
hs_highlight_boolean	vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_boolean=1$/;"	v
hs_highlight_delimiters	vim-colors-solarized/colors/solarized.vim	/^let hs_highlight_delimiters=1$/;"	v
html_file_at	vim-angular/spec/gf_file_spec.rb	/^  def html_file_at(filename)$/;"	f
html_spec_files	jasmine/lib/jasmine-core.rb	/^      def html_spec_files$/;"	f	class:Jasmine.Core
iconv	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:iconv(expr, from, to)$/;"	f
iconv	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:iconv(expr, from, to) abort$/;"	f
idfun	jasmine/lib/jasmine-core/core.py	/^            def idfun(x): return x$/;"	f	function:Core._uniq
ihello	git-gutter/test/testFileAddedToGit.vim	/^normal ihello$/;"	m
image_package	jasmine/lib/jasmine-core/core.py	/^    def image_package(cls):$/;"	m	class:Core
images_dir	jasmine/lib/jasmine-core.rb	/^      def images_dir$/;"	f	class:Jasmine.Core
import	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:import(name, ...) abort$/;"	f
import	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:import(name, ...) abort$/;"	f
inc_highlight	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:inc_highlight(re) "{{{$/;"	f
include_package_data	jasmine/setup.py	/^    include_package_data=True,$/;"	v
indent_current_line	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:indent_current_line() abort "{{{$/;"	f
indent_guides	vim-indent-guides/plugin/indent_guides.vim	/^augroup indent_guides$/;"	a
indent_guides#basic_highlight_colors	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#basic_highlight_colors()$/;"	f
indent_guides#calculate_guide_size	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#calculate_guide_size()$/;"	f
indent_guides#capture_highlight	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#capture_highlight(group_name)$/;"	f
indent_guides#clear_matches	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#clear_matches()$/;"	f
indent_guides#define_default_highlights	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#define_default_highlights()$/;"	f
indent_guides#disable	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#disable()$/;"	f
indent_guides#enable	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#enable()$/;"	f
indent_guides#exclude_filetype	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#exclude_filetype()$/;"	f
indent_guides#gui_highlight_colors	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#gui_highlight_colors()$/;"	f
indent_guides#highlight_colors	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#highlight_colors()$/;"	f
indent_guides#indent_highlight_pattern	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#indent_highlight_pattern(indent_pattern, column_start, indent_size)$/;"	f
indent_guides#init_matches	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#init_matches()$/;"	f
indent_guides#init_script_vars	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#init_script_vars()$/;"	f
indent_guides#lighten_or_darken_color	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#lighten_or_darken_color(color)$/;"	f
indent_guides#process_autocmds	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#process_autocmds()$/;"	f
indent_guides#toggle	vim-indent-guides/autoload/indent_guides.vim	/^function! indent_guides#toggle()$/;"	f
index	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:index(haystack, needle, ...)$/;"	f
initVariable	nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_var	vim-tagbar/plugin/tagbar.vim	/^function! s:init_var(var, value) abort$/;"	f
initialize_source	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:initialize_source(srcname) "{{{$/;"	f
initialize_source	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:initialize_source(srcname, filetype) "{{{$/;"	f
initialize_tags	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:initialize_tags(filename) "{{{$/;"	f
input	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:input(cmdline)$/;"	f
input_helper	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_helper(funcname, args) abort$/;"	f
input_safe	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:input_safe(...) abort$/;"	f
inputreplacement	vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
install_file	javascript-libraries-syntax.vim/Makefile	/^install_file = \\$/;"	m
install_git_source	javascript-libraries-syntax.vim/Makefile	/^install_git_source = \\$/;"	m
install_plugin	vim-emmet/plugin/emmet.vim	/^function! s:install_plugin(mode, buffer)$/;"	f
install_source	javascript-libraries-syntax.vim/Makefile	/^install_source = \\$/;"	m
instaweb_url	vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(opts) abort$/;"	f
intersect	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
intersect	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:intersect(list1, list2) abort$/;"	f
isAnErrorType	jasmine/src/core/matchers/toThrowError.js	/^    function isAnErrorType(type) {$/;"	f
isAnErrorType.Surrogate	jasmine/src/core/matchers/toThrowError.js	/^      var Surrogate = function() {};$/;"	f
isAsymmetric	jasmine/src/core/matchers/matchersUtil.js	/^  function isAsymmetric(obj) {$/;"	f
isStringOrRegExp	jasmine/src/core/matchers/toThrowError.js	/^    function isStringOrRegExp(potential) {$/;"	f
isVerbose	jasmine/lib/jasmine-core/spec/node_suite.js	/^var isVerbose = false;$/;"	v
isVerbose	jasmine/spec/node_suite.js	/^var isVerbose = false;$/;"	v
is_cmdwin	vim-easymotion/autoload/EasyMotion.vim	/^function! s:is_cmdwin() "{{{$/;"	f
is_cygwin	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_cygwin() abort$/;"	f
is_dict	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_dict(Value) abort$/;"	f
is_float	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_float(Value) abort$/;"	f
is_funcref	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_funcref(Value) abort$/;"	f
is_input_waiting	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:is_input_waiting(keymapping, input)$/;"	f
is_list	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_list(Value) abort$/;"	f
is_mac	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_mac() abort$/;"	f
is_number	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_number(Value) abort$/;"	f
is_numeric	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_numeric(Value) abort$/;"	f
is_skip_auto_complete	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:is_skip_auto_complete(cur_text) "{{{$/;"	f
is_string	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_string(Value) abort$/;"	f
is_unix	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_unix() abort$/;"	f
is_windows	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:is_windows() abort$/;"	f
it	jasmine/src/core/Env.js	/^    this.it = function(description, fn, timeout) {$/;"	f
itemno	vim-emmet/autoload/emmet.vim	/^function! s:itemno(itemno, current) abort$/;"	f
j$.Env.getNextSpecId	jasmine/src/core/Env.js	/^    var getNextSpecId = function() {$/;"	m
j$.getEnv	jasmine/lib/jasmine-core/jasmine.js	/^  };$/;"	f
j$.getEnv	jasmine/src/core/base.js	/^  };$/;"	f
j$.getGlobal	jasmine/lib/jasmine-core/jasmine.js	/^  j$.DEFAULT_TIMEOUT_INTERVAL = 5000;$/;"	f
j$.getGlobal	jasmine/src/core/base.js	/^  j$.DEFAULT_TIMEOUT_INTERVAL = 5000;$/;"	f
j$.isA_	jasmine/lib/jasmine-core/jasmine.js	/^  };$/;"	f
j$.isA_	jasmine/src/core/base.js	/^  };$/;"	f
j$.isArray_	jasmine/lib/jasmine-core/jasmine.js	/^  };$/;"	f
j$.isArray_	jasmine/src/core/base.js	/^  };$/;"	f
j$.isDomNode	jasmine/lib/jasmine-core/jasmine.js	/^  };$/;"	f
j$.isDomNode	jasmine/src/core/base.js	/^  };$/;"	f
j$.isNumber_	jasmine/lib/jasmine-core/jasmine.js	/^  };$/;"	f
j$.isNumber_	jasmine/src/core/base.js	/^  };$/;"	f
j$.isString_	jasmine/lib/jasmine-core/jasmine.js	/^  };$/;"	f
j$.isString_	jasmine/src/core/base.js	/^  };$/;"	f
j$.unimplementedMethod_	jasmine/lib/jasmine-core/jasmine.js	/^getJasmineRequireObj().base = function(j$, jasmineGlobal) {$/;"	f
j$.unimplementedMethod_	jasmine/src/core/base.js	/^getJasmineRequireObj().base = function(j$, jasmineGlobal) {$/;"	f
j$Require	jasmine/lib/jasmine-core/spec/helpers/nodeDefineJasmineUnderTest.js	/^  var j$Require = require(path.join(__dirname, "..\/..\/src\/core\/requireCore.js"));$/;"	v
j$Require	jasmine/spec/helpers/nodeDefineJasmineUnderTest.js	/^  var j$Require = require(path.join(__dirname, "..\/..\/src\/core\/requireCore.js"));$/;"	v
jasmine	jasmine/lib/jasmine-core/spec/node_suite.js	/^var jasmine = jasmineRequire.core(jasmineRequire);$/;"	v
jasmine	jasmine/spec/node_suite.js	/^var jasmine = jasmineRequire.core(jasmineRequire);$/;"	v
jasmine.addCustomEqualityTester	jasmine/lib/jasmine-core/spec/node_suite.js	/^}$/;"	f
jasmine.addCustomEqualityTester	jasmine/spec/node_suite.js	/^}$/;"	f
jasmine.addCustomEqualityTester	jasmine/src/core/requireInterface.js	/^  };$/;"	f
jasmine.addMatchers	jasmine/lib/jasmine-core/spec/node_suite.js	/^};$/;"	f
jasmine.addMatchers	jasmine/spec/node_suite.js	/^};$/;"	f
jasmine.addMatchers	jasmine/src/core/requireInterface.js	/^  };$/;"	f
jasmine.clock	jasmine/lib/jasmine-core/spec/node_suite.js	/^};$/;"	f
jasmine.clock	jasmine/spec/node_suite.js	/^};$/;"	f
jasmine.clock	jasmine/src/core/requireInterface.js	/^  };$/;"	f
jasmineInterface	jasmine/lib/jasmine-core/boot.js	/^  var jasmineInterface = jasmineRequire.interface(jasmine, env);$/;"	v
jasmineInterface	jasmine/lib/jasmine-core/boot/boot.js	/^  var jasmineInterface = jasmineRequire.interface(jasmine, env);$/;"	v
jasmineInterface.afterAll	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.afterEach	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.afterEach	jasmine/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.afterEach	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.beforeAll	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.beforeEach	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.beforeEach	jasmine/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.beforeEach	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.describe	jasmine/lib/jasmine-core/spec/node_suite.js	/^var jasmineInterface = {$/;"	m
jasmineInterface.describe	jasmine/spec/node_suite.js	/^var jasmineInterface = {$/;"	m
jasmineInterface.expect	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.expect	jasmine/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.expect	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.fail	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.fdescribe	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.fit	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.it	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.it	jasmine/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.it	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.jsApiReporter	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	p
jasmineInterface.jsApiReporter	jasmine/spec/node_suite.js	/^  },$/;"	p
jasmineInterface.jsApiReporter	jasmine/src/core/requireInterface.js	/^    },$/;"	p
jasmineInterface.pending	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.spyOn	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.spyOn	jasmine/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.spyOn	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.xdescribe	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.xdescribe	jasmine/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.xdescribe	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineInterface.xit	jasmine/lib/jasmine-core/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.xit	jasmine/spec/node_suite.js	/^  },$/;"	m
jasmineInterface.xit	jasmine/src/core/requireInterface.js	/^    },$/;"	m
jasmineRequire	jasmine/lib/jasmine-core/spec/node_suite.js	/^var jasmineRequire = require('..\/lib\/jasmine-core\/jasmine.js');$/;"	v
jasmineRequire	jasmine/spec/node_suite.js	/^var jasmineRequire = require('..\/lib\/jasmine-core\/jasmine.js');$/;"	v
jasmineRequire.HtmlReporter	jasmine/lib/jasmine-core/jasmine-html.js	/^};$/;"	f
jasmineRequire.HtmlReporter	jasmine/src/html/HtmlReporter.js	/^jasmineRequire.HtmlReporter = function(j$) {$/;"	f
jasmineRequire.HtmlReporter.HtmlReporter	jasmine/lib/jasmine-core/jasmine-html.js	/^  function HtmlReporter(options) {$/;"	c
jasmineRequire.HtmlReporter.HtmlReporter	jasmine/src/html/HtmlReporter.js	/^  function HtmlReporter(options) {$/;"	c
jasmineRequire.HtmlReporter.noopTimer.elapsed	jasmine/lib/jasmine-core/jasmine-html.js	/^    start: function() {},$/;"	m
jasmineRequire.HtmlReporter.noopTimer.elapsed	jasmine/src/html/HtmlReporter.js	/^    start: function() {},$/;"	m
jasmineRequire.HtmlReporter.noopTimer.start	jasmine/lib/jasmine-core/jasmine-html.js	/^  var noopTimer = {$/;"	m
jasmineRequire.HtmlReporter.noopTimer.start	jasmine/src/html/HtmlReporter.js	/^  var noopTimer = {$/;"	m
jasmineRequire.HtmlSpecFilter	jasmine/lib/jasmine-core/jasmine-html.js	/^};$/;"	f
jasmineRequire.HtmlSpecFilter	jasmine/src/html/HtmlSpecFilter.js	/^jasmineRequire.HtmlSpecFilter = function() {$/;"	f
jasmineRequire.HtmlSpecFilter.HtmlSpecFilter	jasmine/lib/jasmine-core/jasmine-html.js	/^  function HtmlSpecFilter(options) {$/;"	c
jasmineRequire.HtmlSpecFilter.HtmlSpecFilter	jasmine/src/html/HtmlSpecFilter.js	/^  function HtmlSpecFilter(options) {$/;"	c
jasmineRequire.HtmlSpecFilter.HtmlSpecFilter.matches	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.matches = function(specName) {$/;"	m
jasmineRequire.HtmlSpecFilter.HtmlSpecFilter.matches	jasmine/src/html/HtmlSpecFilter.js	/^    this.matches = function(specName) {$/;"	m
jasmineRequire.QueryString	jasmine/lib/jasmine-core/jasmine-html.js	/^};$/;"	f
jasmineRequire.QueryString	jasmine/src/html/QueryString.js	/^jasmineRequire.QueryString = function() {$/;"	f
jasmineRequire.QueryString.QueryString	jasmine/lib/jasmine-core/jasmine-html.js	/^  function QueryString(options) {$/;"	c
jasmineRequire.QueryString.QueryString	jasmine/src/html/QueryString.js	/^  function QueryString(options) {$/;"	c
jasmineRequire.QueryString.QueryString.navigateWithNewParam	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.navigateWithNewParam = function(key, value) {$/;"	m
jasmineRequire.QueryString.QueryString.navigateWithNewParam	jasmine/src/html/QueryString.js	/^    this.navigateWithNewParam = function(key, value) {$/;"	m
jasmineRequire.ResultsNode	jasmine/lib/jasmine-core/jasmine-html.js	/^};$/;"	f
jasmineRequire.ResultsNode	jasmine/src/html/ResultsNode.js	/^jasmineRequire.ResultsNode = function() {$/;"	f
jasmineRequire.ResultsNode.ResultsNode	jasmine/lib/jasmine-core/jasmine-html.js	/^  function ResultsNode(result, type, parent) {$/;"	c
jasmineRequire.ResultsNode.ResultsNode	jasmine/src/html/ResultsNode.js	/^  function ResultsNode(result, type, parent) {$/;"	c
jasmineRequire.ResultsNode.ResultsNode.addChild	jasmine/lib/jasmine-core/jasmine-html.js	/^    this.addChild = function(result, type) {$/;"	m
jasmineRequire.ResultsNode.ResultsNode.addChild	jasmine/src/html/ResultsNode.js	/^    this.addChild = function(result, type) {$/;"	m
jasmineRequire.html	jasmine/lib/jasmine-core/jasmine-html.js	/^\/*$/;"	f
jasmineRequire.html	jasmine/src/html/requireHtml.js	/^jasmineRequire.html = function(j$) {$/;"	f
js_files	jasmine/lib/jasmine-core.rb	/^      def js_files$/;"	f	class:Jasmine.Core
js_files	jasmine/lib/jasmine-core/core.py	/^    def js_files(cls):$/;"	m	class:Core
js_package	jasmine/lib/jasmine-core/core.py	/^    def js_package(cls):$/;"	m	class:Core
jslibsyntax#load	javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^function! jslibsyntax#load()$/;"	f
json	jasmine/setup.py	/^import json$/;"	i
jumpToChild	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToChild(currentNode, direction)$/;"	f
jumpToFirstChild	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToFirstChild(node)$/;"	f
jumpToLastChild	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToLastChild(node)$/;"	f
jumpToNextHunk	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:jumpToNextHunk(node)$/;"	f
jumpToNextSibling	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToNextSibling(node)$/;"	f
jumpToParent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToParent(node)$/;"	f
jumpToPrevHunk	nerdtree-git/nerdtree_plugin/git_status.vim	/^function! s:jumpToPrevHunk(node)$/;"	f
jumpToPrevSibling	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToPrevSibling(node)$/;"	f
jumpToRoot	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:jumpToSibling(currentNode, forward)$/;"	f
justify_equal_spacing	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:justify_equal_spacing(str, width, ...) abort$/;"	f
k	git-gutter/test/testHunkRevertNearbyHunk.vim	/^normal k$/;"	m
k	git-gutter/test/testHunkStageNearbyHunk.vim	/^normal k$/;"	m
known_files.get	vim-tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) abort dict$/;"	f
known_files.getCurrent	vim-tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent(forcecurrent) abort dict$/;"	f
known_files.has	vim-tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) abort dict$/;"	f
known_files.put	vim-tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) abort dict$/;"	f
known_files.rm	vim-tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) abort dict$/;"	f
known_files.setCurrent	vim-tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) abort dict$/;"	f
known_files.setPaused	vim-tagbar/autoload/tagbar.vim	/^function! s:known_files.setPaused() abort dict$/;"	f
l	vim-easymotion/t/easymotion_spec.vim	/^        let l = line('.')$/;"	v
l	vim-easymotion/t/operator_pending_spec.vim	/^        let l = line('.')$/;"	v
l	vim-easymotion/t/smartsign_spec.vim	/^        let l = line('.')$/;"	v
length	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:length(str)$/;"	f
levenshtein_distance	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:levenshtein_distance(str1, str2) abort$/;"	f
lhs_key_list	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:lhs_key_list(...)$/;"	f
li	jasmine/src/html/_HTMLReporter.scss	/^    li {$/;"	t
libConsole	jasmine/grunt/config/compress.js	/^function libConsole() { return "lib\/console\/" }$/;"	f
libJasmineCore	jasmine/grunt/config/compress.js	/^function libJasmineCore(path) { return root("lib\/jasmine-core\/" + path); }$/;"	f
license	jasmine/grunt/config/concat.js	/^function license() {$/;"	f
license	jasmine/setup.py	/^    license='MIT',$/;"	v
linechars	vim-fugitive/plugin/fugitive.vim	/^function! s:linechars(pattern) abort$/;"	f
lines	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:lines(str) abort$/;"	f
link_file	javascript-libraries-syntax.vim/Makefile	/^link_file = \\$/;"	m
links_to	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:links_to(highlight)$/;"	f
load	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:load(...) dict abort$/;"	f
load	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:load(...) dict abort$/;"	f
load_from_file	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:load_from_file(filename, pattern_file_name, mark, minlen, fileencoding, is_string) "{{{$/;"	f
load_from_tags	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:load_from_tags(filename, pattern_file_name, mark, minlen, fileencoding) "{{{$/;"	f
load_smart_dict	vim-easymotion/autoload/EasyMotion.vim	/^function! s:load_smart_dict() "{{{$/;"	f
loaded_nerd_tree	nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
m	vim-javascript/indent/javascript.vim	/^let m = matchlist(&cinoptions, ':\\(.\\)')$/;"	v
m	vim-javascript/indent/javascript.vim	/^let m = matchlist(&cinoptions, '=\\(.\\)')$/;"	v
main	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main([File]) ->$/;"	f
main	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^main(_) ->$/;"	f
main	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:main(argv) "{{{$/;"	f
main_syntax	vim-haml/syntax/haml.vim	/^  let main_syntax = 'haml'$/;"	v
main_syntax	vim-javascript-syntax/syntax/javascript.vim	/^	let main_syntax = 'javascript'$/;"	v
main_syntax	vim-javascript/syntax/javascript.vim	/^  let main_syntax = 'javascript'$/;"	v
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make(...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^function! s:make(name, ...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^function! s:make(prefix)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:make(...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:make(...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:make(...)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make(chars)$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^function! s:make()$/;"	f
make	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:make(...)$/;"	f
make_cache	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:make_cache(filetype) "{{{$/;"	f
make_cache_buffer	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_buffer(srcname) "{{{$/;"	f
make_cache_current_buffer	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_current_buffer(start, end) "{{{$/;"	f
make_cache_current_buffer	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_current_buffer(start, end) "{{{$/;"	f
make_cache_current_line	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! s:make_cache_current_line() "{{{$/;"	f
make_cache_file	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:make_cache_file(srcname) "{{{$/;"	f
make_cache_lines	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:make_cache_lines(srcname, filetype, lines) "{{{$/;"	f
make_emacs	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_emacs()$/;"	f
make_plain	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^function! s:make_plain()$/;"	f
make_special_chars	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:make_special_chars()$/;"	f
make_vim_cmdline_mapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:make_vim_cmdline_mapping()$/;"	f
map_accum	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
map_accum	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:map_accum(expr, xs, init) abort$/;"	f
mark_window	vim-tagbar/autoload/tagbar.vim	/^function! s:mark_window() abort$/;"	f
match	jasmine/lib/jasmine-core/spec/helpers/BrowserFlags.js	/^    var match = matchFn(userAgent);$/;"	v
match	jasmine/spec/helpers/BrowserFlags.js	/^    var match = matchFn(userAgent);$/;"	v
match	syntastic/syntax_checkers/python/codec.py	/^        match = re.match(r"#\\s*coding\\s*:\\s*(?P<coding>\\w+)", text[0])$/;"	v
match_key	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:match_key(keymapping, key)$/;"	f
matcher.filter	vim-neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	vim-neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
matcher.filter	vim-neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^function! s:matcher.filter(context) "{{{$/;"	f
max_by	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
max_by	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:max_by(list, expr) abort$/;"	f
maximumSpecCallbackDepth	jasmine/src/core/Env.js	/^    var maximumSpecCallbackDepth = 20;$/;"	v
message	jasmine/src/core/matchers/matchersUtil.js	/^      var message = 'Expected ' +$/;"	v
meta."	jasmine/lib/jasmine-core/json2.js	/^            '\\r': '\\\\r',$/;"	p
meta.\	jasmine/lib/jasmine-core/json2.js	/^            '"' : '\\\\"',$/;"	p
meta.b	jasmine/lib/jasmine-core/json2.js	/^        meta = {    \/\/ table of character substitutions$/;"	p
meta.f	jasmine/lib/jasmine-core/json2.js	/^            '\\n': '\\\\n',$/;"	p
meta.n	jasmine/lib/jasmine-core/json2.js	/^            '\\t': '\\\\t',$/;"	p
meta.r	jasmine/lib/jasmine-core/json2.js	/^            '\\f': '\\\\f',$/;"	p
meta.t	jasmine/lib/jasmine-core/json2.js	/^            '\\b': '\\\\b',$/;"	p
min_by	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
min_by	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:min_by(list, expr) abort$/;"	f
module.complete	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.complete(cmdline)$/;"	f
module.exports	jasmine/Gruntfile.js	/^module.exports = function(grunt) {$/;"	f
module.exports	jasmine/lib/jasmine-core/boot/node_boot.js	/^module.exports = function(jasmineRequire) {$/;"	f
module.exports	jasmine/lib/jasmine-core/node_boot.js	/^\/*$/;"	f
module.exports.beforeConcat	jasmine/grunt/config/jshint.js	/^module.exports = {$/;"	p
module.exports.copyToGem	jasmine/grunt/tasks/version.js	/^module.exports = {$/;"	m
module.exports.extend	jasmine/lib/jasmine-core/boot/node_boot.js	/^  function extend(destination, source) {$/;"	f
module.exports.extend	jasmine/lib/jasmine-core/node_boot.js	/^  function extend(destination, source) {$/;"	f
module.exports.files.bootDir	jasmine/lib/jasmine-core.js	/^  path: rootPath,$/;"	p
module.exports.files.bootFiles	jasmine/lib/jasmine-core.js	/^  bootDir: rootPath,$/;"	p
module.exports.files.cssFiles	jasmine/lib/jasmine-core.js	/^  nodeBootFiles: nodeBootFiles,$/;"	p
module.exports.files.jsFiles	jasmine/lib/jasmine-core.js	/^  cssFiles: cssFiles,$/;"	p
module.exports.files.nodeBootFiles	jasmine/lib/jasmine-core.js	/^  bootFiles: bootFiles,$/;"	p
module.exports.files.path	jasmine/lib/jasmine-core.js	/^module.exports.files = {$/;"	p
module.exports.jasmine	jasmine/grunt/config/compass.js	/^module.exports = {$/;"	p
module.exports.jasmine-html	jasmine/grunt/config/concat.js	/^module.exports = {$/;"	p
module.exports.standalone	jasmine/grunt/config/compress.js	/^module.exports = {$/;"	p
module.get_complete_words	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.get_complete_words()$/;"	f
module.histories	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.histories()$/;"	f
module.is_no_insert	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.is_no_insert(char)$/;"	f
module.message	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.message(...)$/;"	f
module.on_char	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_char_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^function! s:module.on_char_pre(cmdline)$/;"	f
module.on_draw	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw(cmdline)$/;"	f
module.on_draw_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_draw_pre(...)$/;"	f
module.on_draw_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_draw_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_draw_pre(cmdline)$/;"	f
module.on_enter	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_enter	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_enter(...)$/;"	f
module.on_exception	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_exception	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_exception(cmdline)$/;"	f
module.on_execute	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute(...)$/;"	f
module.on_execute_failed	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_failed(...)$/;"	f
module.on_execute_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_execute_pre(...)$/;"	f
module.on_execute_pre	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_execute_pre(cmdline)$/;"	f
module.on_leave	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:module.on_leave(...)$/;"	f
module.on_leave	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.on_leave	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.on_leave(cmdline)$/;"	f
module.redraw	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^function! s:module.redraw(cmdline)$/;"	f
module.reset	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:module.reset()$/;"	f
motion_map_helper	vim-easymotion/plugin/EasyMotion.vim	/^function! s:motion_map_helper(motions) "{{{$/;"	f
name	jasmine/setup.py	/^    name="jasmine-core",$/;"	v
neocomplete	vim-neocomplete/plugin/neocomplete.vim	/^  augroup neocomplete$/;"	a
neocomplete#async_cache#main	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^  function! neocomplete#async_cache#main(argv) "{{{$/;"	f
neocomplete#available_sources	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#available_sources() "{{{$/;"	f
neocomplete#cache#async_load_from_file	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_file(cache_dir, filename, pattern, mark) "{{{$/;"	f
neocomplete#cache#async_load_from_tags	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#async_load_from_tags(cache_dir, filename, filetype, pattern, mark) "{{{$/;"	f
neocomplete#cache#check_cache	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_cache(cache_dir, key, async_cache_dictionary, keyword_cache, is_string) "{{{$/;"	f
neocomplete#cache#check_old_cache	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#check_old_cache(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#encode_name	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#encode_name(cache_dir, filename)$/;"	f
neocomplete#cache#filereadable	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#filereadable(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#get_cache_list	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#get_cache_list(cache_dir, async_cache_list) "{{{$/;"	f
neocomplete#cache#getfilename	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#getfilename(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#load_from_cache	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#load_from_cache(cache_dir, filename, ...) "{{{$/;"	f
neocomplete#cache#make_directory	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#make_directory(directory) "{{{$/;"	f
neocomplete#cache#readfile	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#readfile(cache_dir, filename) "{{{$/;"	f
neocomplete#cache#save_cache	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#save_cache(cache_dir, filename, keyword_list) "{{{$/;"	f
neocomplete#cache#writefile	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! neocomplete#cache#writefile(cache_dir, filename, list) "{{{$/;"	f
neocomplete#cancel_popup	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#cancel_popup()$/;"	f
neocomplete#close_popup	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#close_popup()$/;"	f
neocomplete#commands#_clean	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_clean() "{{{$/;"	f
neocomplete#commands#_initialize	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_initialize() "{{{$/;"	f
neocomplete#commands#_lock	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_lock() "{{{$/;"	f
neocomplete#commands#_set_file_type	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_set_file_type(filetype) "{{{$/;"	f
neocomplete#commands#_toggle_lock	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_toggle_lock() "{{{$/;"	f
neocomplete#commands#_unlock	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! neocomplete#commands#_unlock() "{{{$/;"	f
neocomplete#complete#_check_previous_position	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_check_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_get_complete_pos	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_complete_pos(sources) "{{{$/;"	f
neocomplete#complete#_get_results	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_results(cur_text, ...) "{{{$/;"	f
neocomplete#complete#_get_words	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_get_words(sources, complete_pos, complete_str) "{{{$/;"	f
neocomplete#complete#_set_previous_position	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_previous_position(cur_text, complete_pos) abort "{{{$/;"	f
neocomplete#complete#_set_results_pos	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_pos(cur_text, ...) "{{{$/;"	f
neocomplete#complete#_set_results_words	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! neocomplete#complete#_set_results_words(sources) "{{{$/;"	f
neocomplete#complete_check	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#complete_check() "{{{$/;"	f
neocomplete#complete_common_string	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#complete_common_string()$/;"	f
neocomplete#context_filetype#get	vim-neocomplete/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#get(filetype) "{{{$/;"	f
neocomplete#context_filetype#set	vim-neocomplete/autoload/neocomplete/context_filetype.vim	/^function! neocomplete#context_filetype#set() "{{{$/;"	f
neocomplete#custom#get	vim-neocomplete/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#get() "{{{$/;"	f
neocomplete#custom#source	vim-neocomplete/autoload/neocomplete/custom.vim	/^function! neocomplete#custom#source(source_name, option_name, value) "{{{$/;"	f
neocomplete#custom_source	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#custom_source(source_name, option_name, value) "{{{$/;"	f
neocomplete#define_filter	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#define_filter(filter) "{{{$/;"	f
neocomplete#define_source	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#define_source(source) "{{{$/;"	f
neocomplete#disable_default_dictionary	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#disable_default_dictionary(variable) "{{{$/;"	f
neocomplete#dup_filter	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#dup_filter(list) "{{{$/;"	f
neocomplete#escape_match	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#escape_match(str) "{{{$/;"	f
neocomplete#exists_echodoc	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#exists_echodoc() "{{{$/;"	f
neocomplete#filetype_complete	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplete#filters#converter_abbr#define	vim-neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^function! neocomplete#filters#converter_abbr#define() "{{{$/;"	f
neocomplete#filters#converter_case#define	vim-neocomplete/autoload/neocomplete/filters/converter_case.vim	/^function! neocomplete#filters#converter_case#define() "{{{$/;"	f
neocomplete#filters#converter_delimiter#define	vim-neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! neocomplete#filters#converter_delimiter#define() "{{{$/;"	f
neocomplete#filters#converter_disable_abbr#define	vim-neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^function! neocomplete#filters#converter_disable_abbr#define() "{{{$/;"	f
neocomplete#filters#converter_remove_last_paren#define	vim-neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^function! neocomplete#filters#converter_remove_last_paren#define() "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#define	vim-neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#define() "{{{$/;"	f
neocomplete#filters#converter_remove_overlap#length	vim-neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^function! neocomplete#filters#converter_remove_overlap#length(left, right) "{{{$/;"	f
neocomplete#filters#escape	vim-neocomplete/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#escape(string) "{{{$/;"	f
neocomplete#filters#fuzzy_escape	vim-neocomplete/autoload/neocomplete/filters.vim	/^function! neocomplete#filters#fuzzy_escape(string) "{{{$/;"	f
neocomplete#filters#matcher_fuzzy#define	vim-neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^function! neocomplete#filters#matcher_fuzzy#define() "{{{$/;"	f
neocomplete#filters#matcher_head#define	vim-neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^function! neocomplete#filters#matcher_head#define() "{{{$/;"	f
neocomplete#filters#matcher_length#define	vim-neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^function! neocomplete#filters#matcher_length#define() "{{{$/;"	f
neocomplete#filters#sorter_filename#define	vim-neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^function! neocomplete#filters#sorter_filename#define() "{{{$/;"	f
neocomplete#filters#sorter_length#define	vim-neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! neocomplete#filters#sorter_length#define() "{{{$/;"	f
neocomplete#filters#sorter_rank#define	vim-neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^function! neocomplete#filters#sorter_rank#define() "{{{$/;"	f
neocomplete#filters#sorter_word#define	vim-neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! neocomplete#filters#sorter_word#define() "{{{$/;"	f
neocomplete#get_context	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context() "{{{$/;"	f
neocomplete#get_context_filetype	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context_filetype(...) "{{{$/;"	f
neocomplete#get_context_filetype_range	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_context_filetype_range(...) "{{{$/;"	f
neocomplete#get_cur_text	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_cur_text(...) "{{{$/;"	f
neocomplete#get_current_neocomplete	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_current_neocomplete() "{{{$/;"	f
neocomplete#get_data_directory	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_data_directory() "{{{$/;"	f
neocomplete#get_default_matchers	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_default_matchers() "{{{$/;"	f
neocomplete#get_keyword_pattern	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern(...) "{{{$/;"	f
neocomplete#get_keyword_pattern_end	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_keyword_pattern_end(...) "{{{$/;"	f
neocomplete#get_source_filetypes	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#get_source_filetypes(filetype) "{{{$/;"	f
neocomplete#handler#_change_update_time	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_change_update_time() "{{{$/;"	f
neocomplete#handler#_do_auto_complete	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_do_auto_complete(event) "{{{$/;"	f
neocomplete#handler#_on_complete_done	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_complete_done() "{{{$/;"	f
neocomplete#handler#_on_insert_char_pre	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_char_pre() "{{{$/;"	f
neocomplete#handler#_on_insert_enter	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_enter() "{{{$/;"	f
neocomplete#handler#_on_insert_leave	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_insert_leave() "{{{$/;"	f
neocomplete#handler#_on_moved_i	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_moved_i() "{{{$/;"	f
neocomplete#handler#_on_text_changed	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_on_text_changed() "{{{$/;"	f
neocomplete#handler#_restore_update_time	vim-neocomplete/autoload/neocomplete/handler.vim	/^function! neocomplete#handler#_restore_update_time() "{{{$/;"	f
neocomplete#has_vimproc	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#has_vimproc() "{{{$/;"	f
neocomplete#head_match	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#head_match(checkstr, headstr) "{{{$/;"	f
neocomplete#helper#call_filters	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_filters(filters, source, context) "{{{$/;"	f
neocomplete#helper#call_hook	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#call_hook(sources, hook_name, context) "{{{$/;"	f
neocomplete#helper#check_invalid_omnifunc	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#check_invalid_omnifunc(omnifunc) "{{{$/;"	f
neocomplete#helper#clean	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#clean(directory) "{{{$/;"	f
neocomplete#helper#clear_result	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#clear_result() "{{{$/;"	f
neocomplete#helper#complete_check	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_check() "{{{$/;"	f
neocomplete#helper#complete_configure	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#complete_configure() "{{{$/;"	f
neocomplete#helper#filetype_complete	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#filetype_complete(arglead, cmdline, cursorpos) "{{{$/;"	f
neocomplete#helper#ftdictionary2list	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#ftdictionary2list(dictionary, filetype) "{{{$/;"	f
neocomplete#helper#get_cur_text	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_cur_text(...) "{{{$/;"	f
neocomplete#helper#get_force_omni_complete_pos	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_force_omni_complete_pos(cur_text) "{{{$/;"	f
neocomplete#helper#get_source_filetypes	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_source_filetypes(filetype) "{{{$/;"	f
neocomplete#helper#get_sources_list	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_sources_list(...) "{{{$/;"	f
neocomplete#helper#get_syn_name	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#get_syn_name(is_trans) "{{{$/;"	f
neocomplete#helper#indent_current_line	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#indent_current_line() "{{{$/;"	f
neocomplete#helper#is_enabled_source	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#is_enabled_source(source, filetype) "{{{$/;"	f
neocomplete#helper#match_word	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#match_word(cur_text, ...) "{{{$/;"	f
neocomplete#helper#sort_human	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#sort_human(candidates) "{{{$/;"	f
neocomplete#helper#unite_patterns	vim-neocomplete/autoload/neocomplete/helper.vim	/^function! neocomplete#helper#unite_patterns(pattern_var, filetype) "{{{$/;"	f
neocomplete#init#_autocmds	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_autocmds() "{{{$/;"	f
neocomplete#init#_context	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_context(context) "{{{$/;"	f
neocomplete#init#_current_neocomplete	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_current_neocomplete() "{{{$/;"	f
neocomplete#init#_filter	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filter(filter) "{{{$/;"	f
neocomplete#init#_filters	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_filters(names) "{{{$/;"	f
neocomplete#init#_others	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_others() "{{{$/;"	f
neocomplete#init#_source	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_source(source) "{{{$/;"	f
neocomplete#init#_sources	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_sources(names) "{{{$/;"	f
neocomplete#init#_variables	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#_variables() "{{{$/;"	f
neocomplete#init#disable	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#disable() "{{{$/;"	f
neocomplete#init#enable	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#enable() "{{{$/;"	f
neocomplete#init#is_enabled	vim-neocomplete/autoload/neocomplete/init.vim	/^function! neocomplete#init#is_enabled() "{{{$/;"	f
neocomplete#initialize	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#initialize() "{{{$/;"	f
neocomplete#is_auto_complete	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_auto_complete() "{{{$/;"	f
neocomplete#is_auto_select	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_auto_select() "{{{$/;"	f
neocomplete#is_cache_disabled	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_cache_disabled() "{{{$/;"	f
neocomplete#is_enabled	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_enabled() "{{{$/;"	f
neocomplete#is_eskk_convertion	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_eskk_convertion(cur_text) "{{{$/;"	f
neocomplete#is_eskk_enabled	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_eskk_enabled() "{{{$/;"	f
neocomplete#is_locked	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_locked(...) "{{{$/;"	f
neocomplete#is_multibyte_input	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_multibyte_input(cur_text) "{{{$/;"	f
neocomplete#is_prefetch	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_prefetch() "{{{$/;"	f
neocomplete#is_text_mode	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_text_mode() "{{{$/;"	f
neocomplete#is_windows	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#is_windows() "{{{$/;"	f
neocomplete#mappings#auto_complete	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#auto_complete() "{{{$/;"	f
neocomplete#mappings#cancel_popup	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#cancel_popup() "{{{$/;"	f
neocomplete#mappings#close_popup	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#close_popup() "{{{$/;"	f
neocomplete#mappings#complete_common_string	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#complete_common_string() "{{{$/;"	f
neocomplete#mappings#define_default_mappings	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#define_default_mappings() "{{{$/;"	f
neocomplete#mappings#fallback	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#fallback(i) "{{{$/;"	f
neocomplete#mappings#manual_complete	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#manual_complete() "{{{$/;"	f
neocomplete#mappings#popup_post	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#popup_post() "{{{$/;"	f
neocomplete#mappings#smart_close_popup	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#smart_close_popup() "{{{$/;"	f
neocomplete#mappings#start_manual_complete	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#start_manual_complete(...) "{{{$/;"	f
neocomplete#mappings#undo_completion	vim-neocomplete/autoload/neocomplete/mappings.vim	/^function! neocomplete#mappings#undo_completion() "{{{$/;"	f
neocomplete#match_word	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#match_word(...) "{{{$/;"	f
neocomplete#print_debug	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_debug(expr) "{{{$/;"	f
neocomplete#print_error	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_error(string) "{{{$/;"	f
neocomplete#print_warning	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#print_warning(string) "{{{$/;"	f
neocomplete#set_default_matchers	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#set_default_matchers(matchers) "{{{$/;"	f
neocomplete#set_dictionary_helper	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#set_dictionary_helper(variable, keys, value) "{{{$/;"	f
neocomplete#skip_next_complete	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#skip_next_complete() "{{{$/;"	f
neocomplete#smart_close_popup	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#smart_close_popup()$/;"	f
neocomplete#sources#buffer#define	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#define() "{{{$/;"	f
neocomplete#sources#buffer#get_frequencies	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#get_frequencies() "{{{$/;"	f
neocomplete#sources#buffer#make_cache	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache(name) "{{{$/;"	f
neocomplete#sources#buffer#make_cache_current_line	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! neocomplete#sources#buffer#make_cache_current_line() "{{{$/;"	f
neocomplete#sources#dictionary#define	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#define() "{{{$/;"	f
neocomplete#sources#dictionary#get_dictionaries	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#get_dictionaries(filetype) "{{{$/;"	f
neocomplete#sources#dictionary#remake_cache	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! neocomplete#sources#dictionary#remake_cache(filetype) "{{{$/;"	f
neocomplete#sources#file#define	vim-neocomplete/autoload/neocomplete/sources/file.vim	/^function! neocomplete#sources#file#define() "{{{$/;"	f
neocomplete#sources#member#define	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#define() "{{{$/;"	f
neocomplete#sources#member#make_cache_current_buffer	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_buffer() "{{{$/;"	f
neocomplete#sources#member#make_cache_current_line	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#make_cache_current_line() "{{{$/;"	f
neocomplete#sources#member#remake_cache	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! neocomplete#sources#member#remake_cache(filetype) "{{{$/;"	f
neocomplete#sources#omni#define	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! neocomplete#sources#omni#define() "{{{$/;"	f
neocomplete#sources#tag#define	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#define() "{{{$/;"	f
neocomplete#sources#tag#make_cache	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^function! neocomplete#sources#tag#make_cache(force) "{{{$/;"	f
neocomplete#start_manual_complete	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#start_manual_complete(...)$/;"	f
neocomplete#system	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#system(...) "{{{$/;"	f
neocomplete#undo_completion	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#undo_completion()$/;"	f
neocomplete#util#convert2list	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#convert2list(expr) "{{{$/;"	f
neocomplete#util#disable_default_dictionary	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#disable_default_dictionary(variable) "{{{$/;"	f
neocomplete#util#dup_filter	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#dup_filter(list) "{{{$/;"	f
neocomplete#util#escape_pattern	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#escape_pattern(...) "{{{$/;"	f
neocomplete#util#expand	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#expand(path) "{{{$/;"	f
neocomplete#util#get_last_status	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_last_status(...) "{{{$/;"	f
neocomplete#util#get_vital	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#get_vital() "{{{$/;"	f
neocomplete#util#glob	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#glob(pattern, ...) "{{{$/;"	f
neocomplete#util#has_vimproc	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#has_vimproc() "{{{$/;"	f
neocomplete#util#iconv	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#iconv(...) "{{{$/;"	f
neocomplete#util#is_complete_select	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_complete_select() "{{{$/;"	f
neocomplete#util#is_mac	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_mac(...) "{{{$/;"	f
neocomplete#util#is_sudo	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_sudo() "{{{$/;"	f
neocomplete#util#is_text_changed	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_text_changed() "{{{$/;"	f
neocomplete#util#is_windows	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#is_windows(...) "{{{$/;"	f
neocomplete#util#join_rtp	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#join_rtp(list) "{{{$/;"	f
neocomplete#util#mb_strlen	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#mb_strlen(...) "{{{$/;"	f
neocomplete#util#set_default	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default(var, val, ...)  "{{{$/;"	f
neocomplete#util#set_default_dictionary	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_default_dictionary(variable, keys, value) "{{{$/;"	f
neocomplete#util#set_dictionary_helper	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#set_dictionary_helper(variable, keys, pattern) "{{{$/;"	f
neocomplete#util#sort_by	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#sort_by(...) "{{{$/;"	f
neocomplete#util#split_rtp	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#split_rtp(...) "{{{$/;"	f
neocomplete#util#strchars	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strchars(...) "{{{$/;"	f
neocomplete#util#strwidthpart	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart(...) "{{{$/;"	f
neocomplete#util#strwidthpart_reverse	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#strwidthpart_reverse(...) "{{{$/;"	f
neocomplete#util#substitute_path_separator	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#substitute_path_separator(...) "{{{$/;"	f
neocomplete#util#system	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#system(...) "{{{$/;"	f
neocomplete#util#truncate	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate(...) "{{{$/;"	f
neocomplete#util#truncate_smart	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#truncate_smart(...) "{{{$/;"	f
neocomplete#util#uniq	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(...) "{{{$/;"	f
neocomplete#util#uniq	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#uniq(list) "{{{$/;"	f
neocomplete#util#wcswidth	vim-neocomplete/autoload/neocomplete/util.vim	/^function! neocomplete#util#wcswidth(string) "{{{$/;"	f
neocomplete#variables#get_filters	vim-neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_filters() "{{{$/;"	f
neocomplete#variables#get_frequencies	vim-neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_frequencies() "{{{$/;"	f
neocomplete#variables#get_source	vim-neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_source(name) "{{{$/;"	f
neocomplete#variables#get_sources	vim-neocomplete/autoload/neocomplete/variables.vim	/^function! neocomplete#variables#get_sources() "{{{$/;"	f
neocomplete#within_comment	vim-neocomplete/autoload/neocomplete.vim	/^function! neocomplete#within_comment() "{{{$/;"	f
neocomplete_source.gather_candidates	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.gather_candidates(args, context) "{{{$/;"	f
neocomplete_source.hooks.on_init	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:neocomplete_source.hooks.on_init(args, context) "{{{$/;"	f
nerdtree#checkForBrowse	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#checkForBrowse(dir)$/;"	f
nerdtree#compareBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareBookmarks(first, second)$/;"	f
nerdtree#compareNodes	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodes(n1, n2)$/;"	f
nerdtree#compareNodesBySortKey	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#compareNodesBySortKey(n1, n2)$/;"	f
nerdtree#completeBookmarks	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#completeBookmarks(A,L,P)$/;"	f
nerdtree#deprecated	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#deprecated(func, ...)$/;"	f
nerdtree#echo	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echo(msg)$/;"	f
nerdtree#echoError	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoError(msg)$/;"	f
nerdtree#echoWarning	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#echoWarning(msg)$/;"	f
nerdtree#exec	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#exec(cmd)$/;"	f
nerdtree#has_opt	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#has_opt(options, name)$/;"	f
nerdtree#loadClassFiles	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#loadClassFiles()$/;"	f
nerdtree#postSourceActions	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#postSourceActions()$/;"	f
nerdtree#renderView	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#renderView()$/;"	f
nerdtree#runningWindows	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#runningWindows()$/;"	f
nerdtree#ui_glue#bookmarkNode	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#bookmarkNode(...)$/;"	f
nerdtree#ui_glue#chRootCwd	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#chRootCwd()$/;"	f
nerdtree#ui_glue#clearBookmarks	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#clearBookmarks(bookmarks)$/;"	f
nerdtree#ui_glue#createDefaultBindings	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#createDefaultBindings()$/;"	f
nerdtree#ui_glue#invokeKeyMap	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#invokeKeyMap(key)$/;"	f
nerdtree#ui_glue#openBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#openBookmark(name)$/;"	f
nerdtree#ui_glue#revealBookmark	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#revealBookmark(name)$/;"	f
nerdtree#ui_glue#setupCommands	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#setupCommands()$/;"	f
nerdtree#ui_glue#upDir	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! nerdtree#ui_glue#upDir(keepState)$/;"	f
nerdtree#version	nerdtree/autoload/nerdtree.vim	/^function! nerdtree#version()$/;"	f
nerdtreegitplugin	nerdtree-git/nerdtree_plugin/git_status.vim	/^augroup nerdtreegitplugin$/;"	a
nested_app_ebins	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^nested_app_ebins() ->$/;"	f
next.fail	jasmine/src/core/QueueRunner.js	/^        timeoutId;$/;"	f
nodeToRuby	jasmine/grunt/tasks/version.js	/^function nodeToRuby(version) { return version.replace('-', '.'); }$/;"	f
node_boot_files	jasmine/lib/jasmine-core.rb	/^      def node_boot_files$/;"	f	class:Jasmine.Core
node_spec_files	jasmine/lib/jasmine-core.rb	/^      def node_spec_files$/;"	f	class:Jasmine.Core
nr2byte	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2byte(nr) abort$/;"	f
nr2enc_char	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2enc_char(charcode) abort$/;"	f
nr2hex	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nr2hex(nr) abort$/;"	f
nsplit	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:nsplit(expr, n, ...) abort$/;"	f
off_screen_search	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:off_screen_search(re) "{{{$/;"	f
openExplorer	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openExplorer(node)$/;"	f
openHSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openHSplit(target)$/;"	f
openInNewTab	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTab(target)$/;"	f
openInNewTabSilent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openInNewTabSilent(target)$/;"	f
openNodeRecursively	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openNodeRecursively(node)$/;"	f
openVSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:openVSplit(target)$/;"	f
opfunc	vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
options.timeout.clearTimeout	jasmine/src/core/Env.js	/^      options.timeout = {setTimeout: realSetTimeout, clearTimeout: realClearTimeout};$/;"	p
options.timeout.setTimeout	jasmine/src/core/Env.js	/^      options.timeout = {setTimeout: realSetTimeout, clearTimeout: realClearTimeout};$/;"	p
optionsTrigger.onclick	jasmine/lib/jasmine-core/jasmine-html.js	/^          isOpen = \/\\bjasmine-open\\b\/;$/;"	f
optionsTrigger.onclick	jasmine/src/html/HtmlReporter.js	/^          isOpen = \/\\bjasmine-open\\b\/;$/;"	f
or	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:or(xs) abort$/;"	f
or	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:or(xs) abort$/;"	f
origin	vim-easymotion/t/easymotion_spec.vim	/^        let origin = CursorPos()$/;"	v
os	jasmine/setup.py	/^from setuptools import setup, find_packages, os$/;"	i
os	syntastic/syntax_checkers/python/codec.py	/^import os$/;"	i
out	coloresque/after/syntax/css/vim-coloresque.vim	/^      let out = substitute( out, ' \\+xxx \\+', ' ', '' )$/;"	v
out	coloresque/after/syntax/css/vim-coloresque.vim	/^      let out = substitute( out, ' contains=\\zs', '@cssColors,', '' )$/;"	v
p, h1, h2, h3, h4, h5, h6	jasmine/src/html/_HTMLReporter.scss	/^  p, h1, h2, h3, h4, h5, h6 {$/;"	t
package_data	jasmine/setup.py	/^    package_data={'jasmine_core': ['*.js', '*.css'], 'jasmine_core.images': ['*.png']},$/;"	v
package_dir	jasmine/setup.py	/^    package_dir={'jasmine_core': 'lib\/jasmine-core', 'jasmine_core.images': 'images'},$/;"	v
packages	jasmine/setup.py	/^    packages=['jasmine_core', 'jasmine_core.images'],$/;"	v
pad_between_letters	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_between_letters(str, width, ...) abort$/;"	f
pad_both_sides	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_both_sides(str, width, ...) abort$/;"	f
pad_left	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_left(str, width, ...) abort$/;"	f
pad_right	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:pad_right(str, width, ...) abort$/;"	f
padding_by_displaywidth	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:padding_by_displaywidth(expr, width, float) abort$/;"	f
parse	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse(highlight)$/;"	f
parse_lhs	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs(text, ...)$/;"	f
parse_lhs_list	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:parse_lhs_list(...)$/;"	f
parse_to_name	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:parse_to_name(highlight)$/;"	f
partition	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
partition	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:partition(f, xs) abort$/;"	f
pass	jasmine/src/core/matchers/toThrowError.js	/^          fail = {pass: false},$/;"	p
pass.message	jasmine/src/core/matchers/toThrowError.js	/^        if (errorMatcher.matches(thrown)) {$/;"	f
path	jasmine/lib/jasmine-core.js	/^var path = require('path'),$/;"	v
path	jasmine/lib/jasmine-core.rb	/^      def path$/;"	f	class:Jasmine.Core
path	jasmine/lib/jasmine-core/spec/node_suite.js	/^var path = require('path');$/;"	v
path	jasmine/spec/node_suite.js	/^var path = require('path');$/;"	v
path2directory	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2directory(path) abort$/;"	f
path2project_directory	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:path2project_directory(path, ...) abort$/;"	f
pending	jasmine/src/core/Env.js	/^    this.pending = function(message) {$/;"	f
perfSuite	jasmine/lib/jasmine-core/spec/node_suite.js	/^var perfSuite = false;$/;"	v
perfSuite	jasmine/spec/node_suite.js	/^var perfSuite = false;$/;"	v
permutations	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
permutations	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:permutations(list, ...) abort$/;"	f
pkg_resources	jasmine/lib/jasmine-core/core.py	/^import pkg_resources$/;"	i
pop	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:pop(list) abort$/;"	f
pop	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:pop(list) abort$/;"	f
previewNodeCurrent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeCurrent(node)$/;"	f
previewNodeHSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeHSplit(node)$/;"	f
previewNodeVSplit	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:previewNodeVSplit(node)$/;"	f
print_function	syntastic/syntax_checkers/python/codec.py	/^from __future__ import print_function$/;"	i
print_function	syntastic/syntax_checkers/python/compile.py	/^from __future__ import print_function$/;"	i
process	vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
process_delimiter	vim-neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^function! s:process_delimiter(context, candidate, delimiter, delim_cnt)$/;"	f
product	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:product(lists) abort$/;"	f
product	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:product(lists) abort$/;"	f
promptToDelBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToRenameBuffer	nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToRenameBuffer(bufnum, msg, newFileName)$/;"	f
push	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
push	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:push(list, val) abort$/;"	f
queueRunnerFactory	jasmine/src/core/Env.js	/^    var queueRunnerFactory = function(options) {$/;"	f
quote	jasmine/lib/jasmine-core/json2.js	/^    function quote(string) {$/;"	f
rand	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! s:rand(max) "{{{$/;"	f
random	jasmine/lib/jasmine-core/boot.js	/^  var random = queryString.getParam("random");$/;"	v
random	jasmine/lib/jasmine-core/boot/boot.js	/^  var random = queryString.getParam("random");$/;"	v
randomTests	jasmine/src/core/Env.js	/^    this.randomTests = function() {$/;"	f
randomizeTests	jasmine/src/core/Env.js	/^    this.randomizeTests = function(value) {$/;"	f
re	syntastic/syntax_checkers/python/codec.py	/^import re$/;"	i
readfile	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:readfile(cache_dir, filename) abort$/;"	f
rebar_file	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_file(Dir) ->$/;"	f
rebar_opts	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^rebar_opts(RebarFile) ->$/;"	f
recall	vim-fugitive/plugin/fugitive.vim	/^function! s:recall() abort$/;"	f
record_file	javascript-libraries-syntax.vim/Makefile	/^record_file = \\$/;"	m
redraw	vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
refreshCurrent	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshCurrent(node)$/;"	f
refreshRoot	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:refreshRoot()$/;"	f
reindent	vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
reload	vim-emmet/unittest.vim	/^function! s:reload(d)$/;"	f
replace	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace(str, from, to) abort$/;"	f
replace_first	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:replace_first(str, from, to) abort$/;"	f
repo	vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head(...) dict abort$/;"	f
repo_head_ref	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
restore_cursor_state	vim-easymotion/autoload/EasyMotion.vim	/^function! s:restore_cursor_state(visualmode) "{{{$/;"	f
result.id	jasmine/src/core/Spec.js	/^    this.result = {$/;"	p
result.message	jasmine/src/core/matchers/toBeNaN.js	/^        } else {$/;"	f
result.message	jasmine/src/core/matchers/toHaveBeenCalledWith.js	/^        if (!actual.calls.any()) {$/;"	f
result.message	jasmine/src/core/matchers/toThrow.js	/^          result.pass = true;$/;"	f
return	jasmine/lib/jasmine-core/jasmine.js	/^  j$.isA_ = function(typeName, value) {$/;"	c
return	jasmine/src/core/Clock.js	/^      }$/;"	c
return	jasmine/src/core/base.js	/^  j$.isA_ = function(typeName, value) {$/;"	c
return.apply	jasmine/src/core/Clock.js	/^      return Function.prototype.apply.apply(timer.setInterval, [global, arguments]);$/;"	m
return.apply	jasmine/src/core/Clock.js	/^      return Function.prototype.apply.apply(timer.setTimeout, [global, arguments]);$/;"	m
return.call	jasmine/src/core/Clock.js	/^      return Function.prototype.call.apply(timer.clearInterval, [global, id]);$/;"	m
return.call	jasmine/src/core/Clock.js	/^      return Function.prototype.call.apply(timer.clearTimeout, [global, id]);$/;"	m
return.constructor	jasmine/src/core/asymmetric_equality/ObjectContaining.js	/^    }$/;"	c
return.pass	jasmine/src/core/matchers/toEqual.js	/^        var result = {$/;"	p
return.toString	jasmine/lib/jasmine-core/jasmine.js	/^    return Object.prototype.toString.apply(value) === '[object ' + typeName + ']';$/;"	m
return.toString	jasmine/src/core/base.js	/^    return Object.prototype.toString.apply(value) === '[object ' + typeName + ']';$/;"	m
reverse	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:reverse(str) abort$/;"	f
rhs_key_list	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^function! s:rhs_key_list(...)$/;"	f
root	jasmine/grunt/config/compress.js	/^function root(path) { return ".\/" + path; }$/;"	f
rootPath	jasmine/lib/jasmine-core.js	/^var rootPath = path.join(__dirname, "jasmine-core"),$/;"	v
s	vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	vim-easymotion/t/easymotion_spec.vim	/^        map s <Plug>(easymotion-sn)$/;"	m
s	vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s)$/;"	m
s	vim-easymotion/t/smartsign_spec.vim	/^        map s <Plug>(easymotion-s2)$/;"	m
s!1	vim-easymotion/t/smartsign_spec.vim	/^        normal s!1$/;"	m
s"1	vim-easymotion/t/smartsign_spec.vim	/^        normal s"1$/;"	m
s#1	vim-easymotion/t/smartsign_spec.vim	/^        normal s#1$/;"	m
s$1	vim-easymotion/t/smartsign_spec.vim	/^        normal s$1$/;"	m
s%1	vim-easymotion/t/smartsign_spec.vim	/^        normal s%1$/;"	m
s&1	vim-easymotion/t/smartsign_spec.vim	/^        normal s&1$/;"	m
s'1	vim-easymotion/t/smartsign_spec.vim	/^        normal s'1$/;"	m
s'2	vim-easymotion/t/smartsign_spec.vim	/^        normal s'2$/;"	m
s'3	vim-easymotion/t/smartsign_spec.vim	/^        normal s'3$/;"	m
s(1	vim-easymotion/t/smartsign_spec.vim	/^        normal s(1$/;"	m
s)1	vim-easymotion/t/smartsign_spec.vim	/^        normal s)1$/;"	m
s**1	vim-easymotion/t/smartsign_spec.vim	/^        normal s**1$/;"	m
s*1	vim-easymotion/t/smartsign_spec.vim	/^        normal s*1$/;"	m
s*81	vim-easymotion/t/smartsign_spec.vim	/^        normal s*81$/;"	m
s+1	vim-easymotion/t/smartsign_spec.vim	/^        normal s+1$/;"	m
s,	vim-easymotion/t/smartsign_spec.vim	/^        normal s, 1$/;"	m
s,,1	vim-easymotion/t/smartsign_spec.vim	/^        normal s,,1$/;"	m
s,,3	vim-easymotion/t/smartsign_spec.vim	/^        normal s,,3$/;"	m
s,1	vim-easymotion/t/smartsign_spec.vim	/^        normal s,1$/;"	m
s,2	vim-easymotion/t/smartsign_spec.vim	/^        normal s,2$/;"	m
s,3	vim-easymotion/t/smartsign_spec.vim	/^        normal s,3$/;"	m
s,<1	vim-easymotion/t/smartsign_spec.vim	/^        normal s,<1$/;"	m
s-1	vim-easymotion/t/smartsign_spec.vim	/^        normal s-1$/;"	m
s-2	vim-easymotion/t/smartsign_spec.vim	/^        normal s-2$/;"	m
s-3	vim-easymotion/t/smartsign_spec.vim	/^        normal s-3$/;"	m
s.1	vim-easymotion/t/smartsign_spec.vim	/^        normal s.1$/;"	m
s.2	vim-easymotion/t/smartsign_spec.vim	/^        normal s.2$/;"	m
s.3	vim-easymotion/t/smartsign_spec.vim	/^        normal s.3$/;"	m
s/	vim-easymotion/t/easymotion_spec.vim	/^        map s\/ <Plug>(easymotion-sn)$/;"	m
s/1	vim-easymotion/t/smartsign_spec.vim	/^        normal s\/1$/;"	m
s/2	vim-easymotion/t/smartsign_spec.vim	/^        normal s\/2$/;"	m
s/3	vim-easymotion/t/smartsign_spec.vim	/^        normal s\/3$/;"	m
s01	vim-easymotion/t/smartsign_spec.vim	/^        normal s01$/;"	m
s02	vim-easymotion/t/smartsign_spec.vim	/^        normal s02$/;"	m
s03	vim-easymotion/t/smartsign_spec.vim	/^        normal s03$/;"	m
s1*22	vim-easymotion/t/smartsign_spec.vim	/^        normal s1*22$/;"	m
s11	vim-easymotion/t/smartsign_spec.vim	/^        normal s11$/;"	m
s12	vim-easymotion/t/smartsign_spec.vim	/^        normal s12$/;"	m
s13	vim-easymotion/t/smartsign_spec.vim	/^        normal s13$/;"	m
s21	vim-easymotion/t/smartsign_spec.vim	/^        normal s21$/;"	m
s22	vim-easymotion/t/smartsign_spec.vim	/^        normal s22$/;"	m
s23	vim-easymotion/t/smartsign_spec.vim	/^        normal s23$/;"	m
s31	vim-easymotion/t/smartsign_spec.vim	/^        normal s31$/;"	m
s32	vim-easymotion/t/smartsign_spec.vim	/^        normal s32$/;"	m
s33	vim-easymotion/t/smartsign_spec.vim	/^        normal s33$/;"	m
s41	vim-easymotion/t/smartsign_spec.vim	/^        normal s41$/;"	m
s42	vim-easymotion/t/smartsign_spec.vim	/^        normal s42$/;"	m
s43	vim-easymotion/t/smartsign_spec.vim	/^        normal s43$/;"	m
s51	vim-easymotion/t/smartsign_spec.vim	/^        normal s51$/;"	m
s52	vim-easymotion/t/smartsign_spec.vim	/^        normal s52$/;"	m
s53	vim-easymotion/t/smartsign_spec.vim	/^        normal s53$/;"	m
s61	vim-easymotion/t/smartsign_spec.vim	/^        normal s61$/;"	m
s62	vim-easymotion/t/smartsign_spec.vim	/^        normal s62$/;"	m
s63	vim-easymotion/t/smartsign_spec.vim	/^        normal s63$/;"	m
s71	vim-easymotion/t/smartsign_spec.vim	/^        normal s71$/;"	m
s72	vim-easymotion/t/smartsign_spec.vim	/^        normal s72$/;"	m
s73	vim-easymotion/t/smartsign_spec.vim	/^        normal s73$/;"	m
s8*1	vim-easymotion/t/smartsign_spec.vim	/^        normal s8*1$/;"	m
s81	vim-easymotion/t/smartsign_spec.vim	/^        normal s81$/;"	m
s82	vim-easymotion/t/smartsign_spec.vim	/^        normal s82$/;"	m
s83	vim-easymotion/t/smartsign_spec.vim	/^        normal s83$/;"	m
s881	vim-easymotion/t/smartsign_spec.vim	/^        normal s881$/;"	m
s91	vim-easymotion/t/smartsign_spec.vim	/^        normal s91$/;"	m
s92	vim-easymotion/t/smartsign_spec.vim	/^        normal s92$/;"	m
s93	vim-easymotion/t/smartsign_spec.vim	/^        normal s93$/;"	m
s:1	vim-easymotion/t/smartsign_spec.vim	/^        normal s:1$/;"	m
s:BLOCKLEVEL_TAGS	syntastic/syntax_checkers/html/tidy.vim	/^let s:BLOCKLEVEL_TAGS = [$/;"	v
s:BaseTag	vim-tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Bookmark	nerdtree/lib/nerdtree/bookmark.vim	/^let s:Bookmark = {}$/;"	v
s:Cache	vim-neocomplete/autoload/neocomplete/cache.vim	/^let s:Cache = neocomplete#util#get_vital().import('System.Cache')$/;"	v
s:Creator	nerdtree/lib/nerdtree/creator.vim	/^let s:Creator = {}$/;"	v
s:DIRECTION	vim-easymotion/autoload/EasyMotion.vim	/^let s:DIRECTION = { 'forward': 0, 'backward': 1, 'bidirection': 2}$/;"	v
s:EMPTY_TAGS	syntastic/syntax_checkers/html/tidy.vim	/^let s:EMPTY_TAGS = [$/;"	v
s:Event	nerdtree/lib/nerdtree/event.vim	/^let s:Event = {}$/;"	v
s:FALSE	vim-easymotion/autoload/EasyMotion.vim	/^let s:FALSE = 0$/;"	v
s:FileInfo	vim-tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:FlagSet	nerdtree/lib/nerdtree/flag_set.vim	/^let s:FlagSet = {}$/;"	v
s:GitStatusCacheTime	nerdtree-git/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTime = 0$/;"	v
s:GitStatusCacheTimeExpiry	nerdtree-git/nerdtree_plugin/git_status.vim	/^let s:GitStatusCacheTimeExpiry = 2$/;"	v
s:Highlight	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:Highlight = s:V.import("Palette.Highlight")$/;"	v
s:IGNORE_ERRORS	syntastic/syntax_checkers/html/tidy.vim	/^let s:IGNORE_ERRORS = [$/;"	v
s:INLINE_TAGS	syntastic/syntax_checkers/html/tidy.vim	/^let s:INLINE_TAGS = [$/;"	v
s:KeyMap	nerdtree/lib/nerdtree/key_map.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	vim-tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:List	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:List = neocomplete#util#get_vital().import('Data.List')$/;"	v
s:MenuController	nerdtree/lib/nerdtree/menu_controller.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	nerdtree/lib/nerdtree/menu_item.vim	/^let s:MenuItem = {}$/;"	v
s:NERDTree	nerdtree/lib/nerdtree/nerdtree.vim	/^let s:NERDTree = {}$/;"	v
s:NERDTreeIndicatorMap	nerdtree-git/nerdtree_plugin/git_status.vim	/^    let s:NERDTreeIndicatorMap = {$/;"	v
s:NERDTreeSortStarIndex	nerdtree/lib/nerdtree/path.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NormalTag	vim-tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:Notifier	nerdtree/lib/nerdtree/notifier.vim	/^let s:Notifier = {}$/;"	v
s:Opener	nerdtree/lib/nerdtree/opener.vim	/^let s:Opener = {}$/;"	v
s:Path	nerdtree/lib/nerdtree/path.vim	/^let s:Path = {}$/;"	v
s:PseudoTag	vim-tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:TRUE	vim-easymotion/autoload/EasyMotion.vim	/^let s:TRUE = !0$/;"	v
s:TYPE_DICT	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_DICT = type({})$/;"	v
s:TYPE_LIST	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_LIST = type([])$/;"	v
s:TYPE_STRING	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:TYPE_STRING = type("")$/;"	v
s:TreeDirNode	nerdtree/lib/nerdtree/tree_dir_node.vim	/^let s:TreeDirNode = copy(g:NERDTreeFileNode)$/;"	v
s:TreeFileNode	nerdtree/lib/nerdtree/tree_file_node.vim	/^let s:TreeFileNode = {}$/;"	v
s:TypeInfo	vim-tagbar/autoload/tagbar.vim	/^let s:TypeInfo = {}$/;"	v
s:UI	nerdtree/lib/nerdtree/ui.vim	/^let s:UI = {}$/;"	v
s:V	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:V = vital#of('easymotion')$/;"	v
s:V	vim-neocomplete/autoload/neocomplete/util.vim	/^let s:V = vital#of('neocomplete')$/;"	v
s:_DEBUG_DUMP_OPTIONS	syntastic/plugin/syntastic.vim	/^let s:_DEBUG_DUMP_OPTIONS = [$/;"	v
s:_DEFAULT_CHECKERS	syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_CHECKERS = {$/;"	v
s:_DEFAULT_FILETYPE_MAP	syntastic/plugin/syntastic/registry.vim	/^let s:_DEFAULT_FILETYPE_MAP = {$/;"	v
s:_ECLIM_TYPES	syntastic/plugin/syntastic/registry.vim	/^let s:_ECLIM_TYPES = [$/;"	v
s:_FILE_SHORTCUTS	syntastic/syntax_checkers/java/javac.vim	/^let s:_FILE_SHORTCUTS = {$/;"	v
s:_NOTIFIER_TYPES	syntastic/plugin/syntastic/notifiers.vim	/^let s:_NOTIFIER_TYPES = ['signs', 'balloons', 'highlighting', 'cursor', 'autoloclist']$/;"	v
s:_PERSISTENT_NOTIFIERS	syntastic/plugin/syntastic/notifiers.vim	/^let s:_PERSISTENT_NOTIFIERS = ['signs', 'balloons']$/;"	v
s:_YCM_TYPES	syntastic/plugin/syntastic/registry.vim	/^let s:_YCM_TYPES = [$/;"	v
s:_engine	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_engine = exists("+regexpengine") ? '\\%#=2' : ''$/;"	v
s:_float2str	syntastic/autoload/syntastic/util.vim	/^let s:_float2str = function(has('float') ? 's:_float2str_smart' : 's:_float2str_dumb')$/;"	v
s:_isDebugEnabled	syntastic/autoload/syntastic/log.vim	/^let s:_isDebugEnabled = function(exists('*and') ? 's:_isDebugEnabled_smart' : 's:_isDebugEnabled_dumb')$/;"	v
s:_regex	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:_regex = exists("+regexpengine")$/;"	v
s:_running_windows	syntastic/plugin/syntastic.vim	/^let s:_running_windows = syntastic#util#isRunningWindows()$/;"	v
s:_str2float	syntastic/autoload/syntastic/util.vim	/^let s:_str2float = function(exists('*str2float') ? 'str2float' : 'str2nr')$/;"	v
s:_unify_path_cache	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:_unify_path_cache = {}$/;"	v
s:_unify_path_cache	vim-neocomplete/autoload/vital/_neocomplete.vim	/^  let s:_unify_path_cache = {}$/;"	v
s:_vital_files_cache	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache	vim-neocomplete/autoload/vital/_neocomplete.vim	/^let s:_vital_files_cache = []$/;"	v
s:_vital_files_cache_runtimepath	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_vital_files_cache_runtimepath	vim-neocomplete/autoload/vital/_neocomplete.vim	/^let s:_vital_files_cache_runtimepath = ''$/;"	v
s:_width	syntastic/autoload/syntastic/util.vim	/^let s:_width = function(exists('*strwidth') ? 'strwidth' : 'strlen')$/;"	v
s:abstract_prototype	vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:assert	vim-neocomplete/test/neocomplete.vim	/^let s:assert = themis#helper('assert')$/;"	v
s:async_dictionary_list	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_dictionary_list	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^  let s:async_dictionary_list = {}$/;"	v
s:async_tags_list	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^  let s:async_tags_list = {}$/;"	v
s:attributes	vim-haml/indent/haml.vim	/^let s:attributes = '\\%({.\\{-\\}}\\|\\[.\\{-\\}\\]\\)'$/;"	v
s:autocommands_done	vim-tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:b	vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ""$/;"	v
s:b	vim-colors-solarized/colors/solarized.vim	/^    let s:b           = ",bold"$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^        let s:back    = s:base03$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = "NONE"$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:back$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base02$/;"	v
s:back	vim-colors-solarized/colors/solarized.vim	/^    let s:back        = s:base03$/;"	v
s:base	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^	let s:base.variables.modules = s:Signals.make()$/;"	v
s:base	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:base = {$/;"	v
s:base	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:base = {$/;"	v
s:base	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:base = {}$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#808080"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "#839496"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "12"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "244"$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = "LightBlue"     " 4*$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:base1$/;"	v
s:base0	vim-colors-solarized/colors/solarized.vim	/^    let s:base0       = s:temp00$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#585858"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "#657b83"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "11"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "240"$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = "LightYellow"   " 3*$/;"	v
s:base00	vim-colors-solarized/colors/solarized.vim	/^    let s:base00      = s:base0$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#4e4e4e"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "#586e75"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "10"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "239"$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = "LightGreen"    " 2*$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base00$/;"	v
s:base01	vim-colors-solarized/colors/solarized.vim	/^    let s:base01      = s:base1$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#073642"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "#262626"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "0"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "235"$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = "Black"         " 0$/;"	v
s:base02	vim-colors-solarized/colors/solarized.vim	/^    let s:base02      = s:base2$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#002b36"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "#1c1c1c"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "234"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "8"$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = "DarkGray"      " 0*$/;"	v
s:base03	vim-colors-solarized/colors/solarized.vim	/^    let s:base03      = s:base3$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#8a8a8a"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "#93a1a1"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "14"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "245"$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = "LightCyan"     " 6*$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:base2$/;"	v
s:base1	vim-colors-solarized/colors/solarized.vim	/^    let s:base1       = s:temp01$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#d7d7af"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "#eee8d5"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "187"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "7"$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = "LightGray"     " 7$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:base3$/;"	v
s:base2	vim-colors-solarized/colors/solarized.vim	/^    let s:base2       = s:temp02$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#fdf6e3"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "#ffffd7"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "15"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "230"$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = "White"         " 7*$/;"	v
s:base3	vim-colors-solarized/colors/solarized.vim	/^    let s:base3       = s:temp03$/;"	v
s:base_path	syntastic/syntax_checkers/python/python.vim	/^let s:base_path = expand('<sfile>:p:h', 1) . syntastic#util#Slash()$/;"	v
s:bb	vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ""$/;"	v
s:bb	vim-colors-solarized/colors/solarized.vim	/^    let s:bb          = ",bold"$/;"	v
s:black	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:black = 0$/;"	v
s:black	coloresque/after/syntax/css/vim-coloresque.vim	/^let s:black = '#000000'$/;"	v
s:block_regex	vim-javascript/indent/javascript.vim	/^let s:block_regex = '\\%([{[]\\)\\s*\\%(|\\%([*@]\\=\\h\\w*,\\=\\s*\\)\\%(,\\s*[*@]\\=\\h\\w*\\)*|\\)\\=' . s:line_term$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#0087ff"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "#268bd2"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "33"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "4"$/;"	v
s:blue	vim-colors-solarized/colors/solarized.vim	/^    let s:blue        = "DarkBlue"      " 4$/;"	v
s:bright	vim-colors-solarized/colors/solarized.vim	/^    let s:bright      = "* term=bold cterm=bold"$/;"	v
s:browsefilter	vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = b:browsefilter$/;"	v
s:browsefilter	vim-haml/ftplugin/haml.vim	/^  let s:browsefilter = substitute(b:browsefilter,'\\cAll Files (\\*\\.\\*)\\t\\*\\.\\*\\n','','') . s:browsefilter$/;"	v
s:browsefilter	vim-haml/ftplugin/haml.vim	/^let s:browsefilter = "All Files (*.*)\\t*.*\\n"$/;"	v
s:buffer_prototype	vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:buffer_sources	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^  let s:buffer_sources = {}$/;"	v
s:c	vim-colors-solarized/colors/solarized.vim	/^    let s:c               = ",undercurl"$/;"	v
s:cache_command	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:cache_command = {}$/;"	v
s:cache_module_path	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:cache_module_path = {}$/;"	v
s:cache_sid	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:cache_sid = {}$/;"	v
s:cached_files	vim-neocomplete/autoload/neocomplete/sources/file.vim	/^let s:cached_files = {}$/;"	v
s:case_indent	vim-javascript/indent/javascript.vim	/^    let s:case_indent = m[1]$/;"	v
s:case_indent	vim-javascript/indent/javascript.vim	/^let s:case_indent = &sw$/;"	v
s:case_indent_after	vim-javascript/indent/javascript.vim	/^    let s:case_indent_after = m[1]$/;"	v
s:case_indent_after	vim-javascript/indent/javascript.vim	/^let s:case_indent_after = &sw$/;"	v
s:check_file	syntastic/syntax_checkers/erlang/escript.vim	/^let s:check_file = syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'erlang_check_file.erl')$/;"	v
s:checked_ctags	vim-tagbar/autoload/tagbar.vim	/^let s:checked_ctags       = 0$/;"	v
s:checked_ctags_types	vim-tagbar/autoload/tagbar.vim	/^let s:checked_ctags_types = 0$/;"	v
s:cmdheight	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:cmdheight = {}$/;"	v
s:cmdline	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:cmdline = s:V.import('Over.Commandline.Base')$/;"	v
s:color_prefix	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:color_prefix  = 'cterm'$/;"	v
s:color_prefix	coloresque/after/syntax/css/vim-coloresque.vim	/^let s:color_prefix  = 'gui'$/;"	v
s:colorscheme_list	vim-colors-solarized/colors/solarized.vim	/^let s:colorscheme_list=[$/;"	v
s:comma_first	vim-javascript/indent/javascript.vim	/^let s:comma_first = '^\\s*,'$/;"	v
s:comma_last	vim-javascript/indent/javascript.vim	/^let s:comma_last = ',\\s*$'$/;"	v
s:commands	vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:common_efm	vim-fugitive/plugin/fugitive.vim	/^let s:common_efm = ''$/;"	v
s:compare_typeinfo	vim-tagbar/autoload/tagbar.vim	/^let s:compare_typeinfo = {}$/;"	v
s:config	vim-easymotion/autoload/EasyMotion.vim	/^let s:config = {$/;"	v
s:continuation_regex	vim-javascript/indent/javascript.vim	/^let s:continuation_regex = '\\%([\\\\*+\/.:]\\|\\%(<%\\)\\@<![=-]\\|\\W[|&?]\\|||\\|&&\\|[^=]=[^=].*,\\)' . s:line_term$/;"	v
s:converter	vim-neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^let s:converter = {$/;"	v
s:converter	vim-neocomplete/autoload/neocomplete/filters/converter_case.vim	/^let s:converter = {$/;"	v
s:converter	vim-neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:converter = {$/;"	v
s:converter	vim-neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:converter = {$/;"	v
s:converter	vim-neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:converter = {$/;"	v
s:converter	vim-neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:converter = {$/;"	v
s:cpo_save	vim-capslock/plugin/capslock.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-haml/compiler/haml.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-haml/compiler/sass.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	vim-javascript/indent/javascript.vim	/^let s:cpo_save = &cpo$/;"	v
s:ctags_types	vim-tagbar/autoload/tagbar.vim	/^let s:ctags_types         = {}$/;"	v
s:cubergb	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:cubergb = [ 0x00, 0x5F, 0x87, 0xAF, 0xD7, 0xFF ]$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#00afaf"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "#2aa198"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "37"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "6"$/;"	v
s:cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:cyan        = "DarkCyan"      " 6$/;"	v
s:debug	vim-tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debug_file	vim-tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:default_includes	syntastic/autoload/syntastic/c.vim	/^let s:default_includes = [$/;"	v
s:default_libs	javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:default_libs = [$/;"	v
s:defaults_list	vim-colors-solarized/colors/solarized.vim	/^let s:defaults_list=[$/;"	v
s:dictionary_cache	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^  let s:dictionary_cache = {}$/;"	v
s:dirArrows	nerdtree/syntax/nerdtree.vim	/^    let s:dirArrows = escape(g:NERDTreeDirArrowCollapsible, '~').escape(g:NERDTreeDirArrowExpandable, '~')$/;"	v
s:dir_for_worktree	vim-fugitive/plugin/fugitive.vim	/^let s:dir_for_worktree = {}$/;"	v
s:dummy_sign_id	git-gutter/autoload/gitgutter/sign.vim	/^let s:dummy_sign_id = s:first_sign_id - 1$/;"	v
s:emacs	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:emacs = {$/;"	v
s:emmet_settings	vim-emmet/autoload/emmet.vim	/^let s:emmet_settings = {$/;"	v
s:exists	vim-emmet/autoload/emmet/lang.vim	/^let s:exists = {}$/;"	v
s:exists_context_filetype	vim-neocomplete/autoload/neocomplete/context_filetype.vim	/^    let s:exists_context_filetype = 0$/;"	v
s:exists_context_filetype	vim-neocomplete/autoload/neocomplete/context_filetype.vim	/^    let s:exists_context_filetype = 1$/;"	v
s:exit_code	git-gutter/autoload/gitgutter/utility.vim	/^let s:exit_code = 0$/;"	v
s:expand_bufnr	vim-tagbar/autoload/tagbar.vim	/^let s:expand_bufnr = -1$/;"	v
s:expr_case	vim-javascript/indent/javascript.vim	/^let s:expr_case = '^\\s*\\(case\\s\\+[^\\:]*\\|default\\)\\s*:\\s*'$/;"	v
s:extend	vim-haml/indent/sass.vim	/^let s:extend = '^\\s*\\%(@extend\\|@include\\|+\\)'$/;"	v
s:fg_color_calc	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:fg_color_calc = 'let color = s:XTermColorForRGB(a:color)'$/;"	v
s:fg_color_calc	coloresque/after/syntax/css/vim-coloresque.vim	/^let s:fg_color_calc = 'let color = "#" . toupper(a:color)'$/;"	v
s:fg_pdef	vim-colors-solarized/colors/solarized.vim	/^let s:fg_pdef = s:fg_violet$/;"	v
s:fg_phead	vim-colors-solarized/colors/solarized.vim	/^let s:fg_phead = s:fg_orange$/;"	v
s:fg_ptable	vim-colors-solarized/colors/solarized.vim	/^let s:fg_ptable = s:fg_blue$/;"	v
s:file	git-gutter/autoload/gitgutter/utility.vim	/^let s:file = ''$/;"	v
s:filtermx	vim-emmet/autoload/emmet.vim	/^let s:filtermx = '|\\(\\%(bem\\|html\\|haml\\|slim\\|e\\|c\\|s\\|fc\\|xsl\\|t\\|\\\/[^ ]\\+\\)\\s*,\\{0,1}\\s*\\)*$'$/;"	v
s:first_sign_id	git-gutter/autoload/gitgutter/sign.vim	/^let s:first_sign_id = 3000$/;"	v
s:first_sign_id	syntastic/plugin/syntastic/signs.vim	/^let s:first_sign_id = 5000$/;"	v
s:fish	git-gutter/autoload/gitgutter/diff.vim	/^let s:fish = &shell =~# 'fish'$/;"	v
s:fish	git-gutter/autoload/gitgutter/utility.vim	/^let s:fish = &shell =~# 'fish'$/;"	v
s:ghc_mod_new	syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:ghc_mod_new = -1$/;"	v
s:git_versions	vim-fugitive/plugin/fugitive.vim	/^let s:git_versions = {}$/;"	v
s:globpath_third_arg	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:globpath_third_arg	vim-neocomplete/autoload/vital/_neocomplete.vim	/^let s:globpath_third_arg = v:version > 702 || v:version == 702 && has('patch51')$/;"	v
s:glsl_extensions	syntastic/syntax_checkers/glsl/cgc.vim	/^let s:glsl_extensions = {$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#5f8700"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "#719e07" "experimental$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "2"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "64"$/;"	v
s:green	vim-colors-solarized/colors/solarized.vim	/^    let s:green       = "DarkGreen"     " 2$/;"	v
s:grep_available	git-gutter/autoload/gitgutter/diff.vim	/^let s:grep_available = executable('grep')$/;"	v
s:grep_command	git-gutter/autoload/gitgutter/diff.vim	/^    let s:grep_command .= ' --color=never'$/;"	v
s:grep_command	git-gutter/autoload/gitgutter/diff.vim	/^  let s:grep_command .= ' -e '.gitgutter#utility#shellescape('^@@ ')$/;"	v
s:grep_command	git-gutter/autoload/gitgutter/diff.vim	/^  let s:grep_command = ' | '.(g:gitgutter_escape_grep ? '\\grep' : 'grep')$/;"	v
s:grep_help	git-gutter/autoload/gitgutter/diff.vim	/^  let s:grep_help = gitgutter#utility#system('grep --help')$/;"	v
s:grouping_algorithms	vim-easymotion/autoload/EasyMotion.vim	/^let s:grouping_algorithms = {$/;"	v
s:h	vim-easymotion/autoload/EasyMotion/highlight.vim	/^    let s:h.ids[s:group] = []$/;"	v
s:h	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h = {}$/;"	v
s:h	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:h.ids = {}$/;"	v
s:has_highlighting	syntastic/plugin/syntastic/highlighting.vim	/^let s:has_highlighting = v:version > 701 || (v:version == 701 && has('patch040'))$/;"	v
s:has_maven	syntastic/syntax_checkers/java/javac.vim	/^let s:has_maven = 0$/;"	v
s:hash_colors	vim-fugitive/plugin/fugitive.vim	/^let s:hash_colors = {}$/;"	v
s:hex	coloresque/after/syntax/css/vim-coloresque.vim	/^  let s:hex[ printf( '%02x', i ) ] = i$/;"	v
s:hex	coloresque/after/syntax/css/vim-coloresque.vim	/^let s:hex={}$/;"	v
s:hooks	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks = [$/;"	v
s:hooks_camel	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:hooks_camel = [$/;"	v
s:hunk_re	git-gutter/autoload/gitgutter/diff.vim	/^let s:hunk_re = '^@@ -\\(\\d\\+\\),\\?\\(\\d*\\) +\\(\\d\\+\\),\\?\\(\\d*\\) @@'$/;"	v
s:hunks	git-gutter/autoload/gitgutter/hunk.vim	/^let s:hunks = []$/;"	v
s:i	vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ""$/;"	v
s:i	vim-colors-solarized/colors/solarized.vim	/^    let s:i           = ",italic"$/;"	v
s:icon_closed	vim-tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	vim-tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:ics	vim-tagbar/syntax/tagbar.vim	/^let s:ics = escape(join(g:tagbar_iconchars, ''), ']^\\-')$/;"	v
s:imports	syntastic/syntax_checkers/sass/sass.vim	/^    let s:imports = '--compass'$/;"	v
s:imports	syntastic/syntax_checkers/sass/sass.vim	/^let s:imports = ''$/;"	v
s:is_cygwin	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_cygwin = has('win32unix')$/;"	v
s:is_enabled	vim-neocomplete/autoload/neocomplete/init.vim	/^  let s:is_enabled = 0$/;"	v
s:is_mac	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_mac = !s:is_windows && !s:is_cygwin$/;"	v
s:is_maximized	vim-tagbar/autoload/tagbar.vim	/^let s:is_maximized    = 0$/;"	v
s:is_unix	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_unix	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:is_unix = has('unix')$/;"	v
s:is_windows	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:is_windows	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:is_windows = has('win16') || has('win32') || has('win64') || has('win95')$/;"	v
s:js_keywords	vim-javascript/indent/javascript.vim	/^let s:js_keywords = '^\\s*\\(break\\|catch\\|const\\|continue\\|debugger\\|delete\\|do\\|else\\|finally\\|for\\|function\\|if\\|in\\|instanceof\\|let\\|new\\|return\\|switch\\|this\\|throw\\|try\\|typeof\\|var\\|void\\|while\\|with\\)'$/;"	v
s:known_files	vim-tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:last_highlight_tline	vim-tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:lazycat_list	vim-colors-solarized/colors/solarized.vim	/^let s:lazycat_list=[$/;"	v
s:libs	javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:libs = [$/;"	v
s:line_term	vim-javascript/indent/javascript.vim	/^let s:line_term = '\\s*\\%(\\%(\\\/\\\/\\).*\\)\\=$'$/;"	v
s:loaded	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:loaded = {}$/;"	v
s:loaded	vim-neocomplete/autoload/vital/_neocomplete.vim	/^let s:loaded = {}$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#af005f"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "#d33682"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "125"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "5"$/;"	v
s:magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:magenta     = "DarkMagenta"   " 5$/;"	v
s:match_words	vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words . ',' . s:match_words$/;"	v
s:match_words	vim-haml/ftplugin/haml.vim	/^  let s:match_words = b:match_words$/;"	v
s:match_words	vim-haml/ftplugin/haml.vim	/^let s:match_words = ""$/;"	v
s:matcher	vim-neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:matcher = {$/;"	v
s:matcher	vim-neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^let s:matcher = {$/;"	v
s:matcher	vim-neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^let s:matcher = {$/;"	v
s:member_sources	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^  let s:member_sources = {}$/;"	v
s:modemap	syntastic/plugin/syntastic.vim	/^let s:modemap = g:SyntasticModeMap.Instance()$/;"	v
s:modep	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:modep = "[nvoicsxl]"$/;"	v
s:module	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:module = {$/;"	v
s:module	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:module = {$/;"	v
s:modules	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:modules = s:V.import("Over.Commandline.Modules")$/;"	v
s:msl_regex	vim-javascript/indent/javascript.vim	/^let s:msl_regex = s:continuation_regex.'|'.s:expr_case$/;"	v
s:mx	vim-emmet/autoload/emmet/lang/html.vim	/^let s:mx = '\\([+>]\\|[<^]\\+\\)\\{-}\\s*'$/;"	v
s:n	vim-colors-solarized/colors/solarized.vim	/^    let s:n               = "NONE"$/;"	v
s:nearby_disabled	vim-tagbar/autoload/tagbar.vim	/^let s:nearby_disabled = 0$/;"	v
s:need_trans	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:need_trans = v:version < 704 || (v:version == 704 && !has('patch122'))$/;"	v
s:neocomplete_source	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^let s:neocomplete_source = {$/;"	v
s:new_window	vim-tagbar/autoload/tagbar.vim	/^let s:new_window      = 1$/;"	v
s:next_sign_id	git-gutter/autoload/gitgutter/sign.vim	/^let s:next_sign_id  = s:first_sign_id$/;"	v
s:next_sign_id	syntastic/plugin/syntastic/signs.vim	/^let s:next_sign_id = s:first_sign_id$/;"	v
s:node_file	syntastic/syntax_checkers/less/lessc.vim	/^let s:node_file = 'node ' . syntastic#util#shescape(expand('<sfile>:p:h', 1) . syntastic#util#Slash() . 'less-lint.js')$/;"	v
s:none	vim-colors-solarized/colors/solarized.vim	/^    let s:none            = "NONE"$/;"	v
s:notifiers	syntastic/plugin/syntastic.vim	/^let s:notifiers = g:SyntasticNotifiers.Instance()$/;"	v
s:ob	vim-colors-solarized/colors/solarized.vim	/^    let s:ob              = ""$/;"	v
s:ocamlpp	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4o'$/;"	v
s:ocamlpp	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^    let s:ocamlpp='camlp4r'$/;"	v
s:old_cpo	nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:old_width	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:old_width = 0$/;"	v
s:one_line_scope_regex	vim-javascript/indent/javascript.vim	/^let s:one_line_scope_regex = '\\<\\%(if\\|else\\|for\\|while\\)\\>[^{;]*' . s:line_term$/;"	v
s:one_time_notices_issued	syntastic/autoload/syntastic/log.vim	/^let s:one_time_notices_issued = []$/;"	v
s:options_list	vim-colors-solarized/colors/solarized.vim	/^let s:options_list=[$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#cb4b16"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "#d75f00"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "166"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "9"$/;"	v
s:orange	vim-colors-solarized/colors/solarized.vim	/^    let s:orange      = "LightRed"      " 1*$/;"	v
s:ou	vim-colors-solarized/colors/solarized.vim	/^    let s:ou              = ""$/;"	v
s:ou	vim-colors-solarized/colors/solarized.vim	/^    let s:ou          = ",underline"$/;"	v
s:path	javascript-libraries-syntax.vim/autoload/jslibsyntax.vim	/^let s:path = expand('<sfile>:p:h')$/;"	v
s:pattern	vim-tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	vim-tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	vim-tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	vim-tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(\\S\\@<![' . s:ics . '][-+# ]\\?\\)\\@<=[^*(]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:pattern	vim-tagbar/syntax/tagbar.vim	/^let s:pattern = '\\(^[' . s:ics . '] \\?\\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	vim-tagbar/syntax/tagbar.vim	/^let s:pattern = '\\S\\@<![' . s:ics . ']\\([-+# ]\\?\\)\\@='$/;"	v
s:paused	vim-tagbar/autoload/tagbar.vim	/^let s:paused = 0$/;"	v
s:prefix	vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:prefix = printf("vital-over(%s) Exception", s:vname)$/;"	v
s:priorities	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:priorities = {$/;"	v
s:property	vim-haml/indent/sass.vim	/^let s:property = '^\\s*:\\|^\\s*[[:alnum:]#{}-]\\+\\%(:\\|\\s*=\\)'$/;"	v
s:pwin_by_tagbar	vim-tagbar/autoload/tagbar.vim	/^let s:pwin_by_tagbar = 0$/;"	v
s:pylint_new	syntastic/syntax_checkers/python/pylint.vim	/^let s:pylint_new = -1$/;"	v
s:quiet_warnings	syntastic/plugin/syntastic.vim	/^            let s:quiet_warnings = [s:quiet_warnings]$/;"	v
s:quiet_warnings	syntastic/plugin/syntastic.vim	/^        let s:quiet_warnings = get(g:syntastic_quiet_messages, 'type', [])$/;"	v
s:r	vim-colors-solarized/colors/solarized.vim	/^    let s:r               = ",reverse"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#af0000"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "#dc322f"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "1"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "124"$/;"	v
s:red	vim-colors-solarized/colors/solarized.vim	/^    let s:red         = "DarkRed"       " 1$/;"	v
s:registry	syntastic/plugin/syntastic.vim	/^let s:registry = g:SyntasticRegistry.Instance()$/;"	v
s:repo_prototype	vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:root_dir	vim-easymotion/t/easymotion_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	vim-easymotion/t/operator_pending_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:root_dir	vim-easymotion/t/smartsign_spec.vim	/^let s:root_dir = matchstr(system('git rev-parse --show-cdup'), '[^\\n]\\+')$/;"	v
s:rst2pseudoxml	syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:rst2pseudoxml = (executable('rst2pseudoxml.py') && !syntastic#util#isRunningWindows()) ? 'rst2pseudoxml.py' : 'rst2pseudoxml'$/;"	v
s:s	vim-colors-solarized/colors/solarized.vim	/^    let s:s               = ",standout"$/;"	v
s:sass_cache_location	syntastic/syntax_checkers/sass/sass.vim	/^let s:sass_cache_location = syntastic#util#tmpdir()$/;"	v
s:save_cpo	syntastic/autoload/syntastic/c.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/autoload/syntastic/log.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/autoload/syntastic/postprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/autoload/syntastic/preprocess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/autoload/syntastic/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/actionscript/mxmlc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ada/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ansible/ansible_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/apiblueprint/drafter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/applescript/osacompile.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/asciidoc/asciidoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/asm/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/bemhtml/bemhtmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/bro/bro.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/avrgcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/checkpatch.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/clang_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/clang_tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/cppcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/make.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/oclint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/pc_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/sparse.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/c/splint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cabal/cabal.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/chef/foodcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/co/coco.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cobol/cobc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/coffee/coffee.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/coffee/coffeelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/coq/coqtop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cpp/cpplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cpp/verapp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cs/mcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/css/csslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/css/prettycss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/css/stylelint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cucumber/cucumber.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/cuda/nvcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/d/dmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/dart/dartanalyzer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/docbk/igor.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/dustjs/swiffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/elixir/elixir.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/erlang/escript.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/erlang/syntaxerl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/eruby/ruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/glsl/cgc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/go/go.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/go/gofmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/go/golint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/go/gometalinter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/go/gotype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/go/govet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/haml/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/haml/haml_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/handlebars/handlebars.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/haskell/ghc-mod.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/haskell/hdevtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/haskell/hlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/haskell/scan.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/haxe/haxe.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/hss/hss.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/html/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/html/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/html/validator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/html/w3.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/jade/jade_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/java/checkstyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/java/javac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/closurecompiler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/eslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/flow.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/gjslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/jscs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/jshint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/jsl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/jslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/jsxhint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/javascript/standard.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/json/jsonlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/json/jsonval.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/less/lessc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/less/recess.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/lex/flex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/limbo/limbo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/lisp/clisp.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/llvm/llvm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/lua/luac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/lua/luacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/markdown/mdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/matlab/mlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/mercury/mmc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/nasm/nasm.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/nix/nix.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/nroff/mandoc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/objc/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/objcpp/gcc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ocaml/camlp4o.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/perl/perl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/perl/perlcritic.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/php/php.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/php/phpcs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/php/phplint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/php/phpmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/po/msgfmt.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/pod/podchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/puppet/puppet.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/puppet/puppetlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/flake8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/frosted.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/mypy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/pep257.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/pep8.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/prospector.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/py3kwarn.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/pyflakes.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/pylama.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/pylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/python/python.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/qml/qmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/r/lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/r/svtools.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/racket/code-ayatollah.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/racket/racket.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/rnc/rnv.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/rst/rst2pseudoxml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/rst/rstcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/rst/sphinx.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ruby/flog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ruby/jruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ruby/macruby.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ruby/mri.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ruby/reek.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ruby/rubocop.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/ruby/rubylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sass/sass.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sass/sassc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/scala/fsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/scala/scalac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/scala/scalastyle.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/scss/scss_lint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sh/bashate.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sh/checkbashisms.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sh/sh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sh/shellcheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/slim/slimrb.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sml/smlnj.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/spec/rpmlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/sql/sqlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/stylus/stylint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/tcl/nagelfar.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/tex/chktex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/tex/lacheck.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/texinfo/makeinfo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/text/atdtool.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/text/language_check.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/twig/twiglint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/typescript/tsc.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/typescript/tslint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/vala/valac.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/verilog/iverilog.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/verilog/verilator.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/vhdl/ghdl.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/vhdl/vcom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/vim/vimlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/vim/vint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/xhtml/tidy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/xml/plutil.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/xml/xmllint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/xquery/basex.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/yacc/bison.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/yaml/jsyaml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/yaml/yamlxs.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/z80/z80syntaxchecker.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/zpt/zptlint.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	syntastic/syntax_checkers/zsh/zsh.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/cmigemo.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/EasyMotion/sticky_table.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Base.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/BufferComplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Cancel.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/CursorMove.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Delete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Doautocmd.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionExit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Exit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/History.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/NoInsert.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Paste.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/Redraw.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Input.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/Signals.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Palette/Keymapping.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-easymotion/plugin/EasyMotion.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-emmet/autoload/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	vim-emmet/plugin/emmet.vim	/^let s:save_cpo = &cpoptions$/;"	v
s:save_cpo	vim-haml/ftplugin/haml.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/commands.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/complete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/context_filetype.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/custom.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/converter_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/converter_case.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/converter_delimiter.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/converter_disable_abbr.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/converter_remove_last_paren.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/converter_remove_overlap.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/matcher_fuzzy.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/matcher_head.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/matcher_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/handler.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/helper.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/init.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/mappings.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/sources/file.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/util.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/neocomplete/variables.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/unite/sources/file_include.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/plugin/neocomplete.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/plugin/neocomplete/buffer.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/plugin/neocomplete/dictionary.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	vim-neocomplete/plugin/neocomplete/tag.vim	/^let s:save_cpo = &cpo$/;"	v
s:sdir	vim-neocomplete/autoload/neocomplete/cache.vim	/^let s:sdir = neocomplete#util#substitute_path_separator($/;"	v
s:search	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search = s:cmdline.make()$/;"	v
s:search	vim-easymotion/autoload/EasyMotion/command_line.vim	/^let s:search.highlights.prompt = 'Question'$/;"	v
s:seed	vim-emmet/autoload/emmet/util.vim	/^let s:seed = localtime()$/;"	v
s:self_file	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_file	vim-neocomplete/autoload/vital/_neocomplete.vim	/^let s:self_file = expand('<sfile>')$/;"	v
s:self_version	vim-easymotion/autoload/vital/_easymotion.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:self_version	vim-neocomplete/autoload/vital/_neocomplete.vim	/^let s:self_version = expand('<sfile>:t:r')$/;"	v
s:setup_done	syntastic/plugin/syntastic/highlighting.vim	/^let s:setup_done = 0$/;"	v
s:setup_done	syntastic/plugin/syntastic/signs.vim	/^let s:setup_done = 0$/;"	v
s:sfile	vim-emmet/unittest.vim	/^let s:sfile = expand('<sfile>')$/;"	v
s:shade_hl_defaults	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_defaults = {$/;"	v
s:shade_hl_line_defaults	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:shade_hl_line_defaults = {$/;"	v
s:short_help	vim-tagbar/autoload/tagbar.vim	/^let s:short_help      = 1$/;"	v
s:skip_expr	vim-javascript/indent/javascript.vim	/^let s:skip_expr = "synIDattr(synID(line('.'),col('.'),1),'name') =~ '".s:syng_strcom."'"$/;"	v
s:solarized_termtrans_default	vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 0$/;"	v
s:solarized_termtrans_default	vim-colors-solarized/colors/solarized.vim	/^    let s:solarized_termtrans_default = 1$/;"	v
s:sortKeyFormat	nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%0" . float2nr(ceil(log10(len(g:NERDTreeSortOrder)))) . "d"$/;"	v
s:sortKeyFormat	nerdtree/lib/nerdtree/path.vim	/^    let s:sortKeyFormat = "%04d"$/;"	v
s:sorter	vim-neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^let s:sorter = {$/;"	v
s:sorter	vim-neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^let s:sorter = {$/;"	v
s:sorter	vim-neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^let s:sorter = {$/;"	v
s:sorter	vim-neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^let s:sorter = {$/;"	v
s:source	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^let s:source = {$/;"	v
s:source	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^let s:source = {$/;"	v
s:source	vim-neocomplete/autoload/neocomplete/sources/file.vim	/^let s:source = {$/;"	v
s:source	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^let s:source = {$/;"	v
s:source	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^let s:source = {$/;"	v
s:source	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^let s:source = {$/;"	v
s:source	vim-neocomplete/autoload/unite/sources/file_include.vim	/^let s:source = {$/;"	v
s:sp_back	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_back      = ""$/;"	v
s:sp_base0	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base0     = ""$/;"	v
s:sp_base00	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base00    = ""$/;"	v
s:sp_base01	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base01    = ""$/;"	v
s:sp_base02	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base02    = ""$/;"	v
s:sp_base03	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base03    = ""$/;"	v
s:sp_base1	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base1     = ""$/;"	v
s:sp_base2	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base2     = ""$/;"	v
s:sp_base3	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_base3     = ""$/;"	v
s:sp_blue	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_blue      = ""$/;"	v
s:sp_cyan	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_cyan      = ""$/;"	v
s:sp_green	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_green     = ""$/;"	v
s:sp_magenta	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_magenta   = ""$/;"	v
s:sp_none	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_none      = ""$/;"	v
s:sp_orange	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_orange    = ""$/;"	v
s:sp_red	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_red       = ""$/;"	v
s:sp_violet	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_violet    = ""$/;"	v
s:sp_yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:sp_yellow    = ""$/;"	v
s:sphinx_cache_location	syntastic/syntax_checkers/rst/sphinx.vim	/^let s:sphinx_cache_location = syntastic#util#tmpdir()$/;"	v
s:statusline_in_use	vim-tagbar/autoload/tagbar.vim	/^let s:statusline_in_use = 0$/;"	v
s:suite	vim-neocomplete/test/neocomplete.vim	/^let s:suite = themis#suite('parser')$/;"	v
s:summary	git-gutter/autoload/gitgutter/hunk.vim	/^let s:summary = [0, 0, 0]$/;"	v
s:supports_star	git-gutter/autoload/gitgutter/sign.vim	/^let s:supports_star = v:version > 703 || (v:version == 703 && has("patch596"))$/;"	v
s:syng_linecom	vim-javascript/indent/javascript.vim	/^let s:syng_linecom = 'linecomment\\c'$/;"	v
s:syng_multiline	vim-javascript/indent/javascript.vim	/^let s:syng_multiline = 'comment\\c'$/;"	v
s:syng_strcom	vim-javascript/indent/javascript.vim	/^let s:syng_strcom = 'string\\|regex\\|comment\\c'$/;"	v
s:syng_string	vim-javascript/indent/javascript.vim	/^let s:syng_string = 'regex\\c'$/;"	v
s:t_none	vim-colors-solarized/colors/solarized.vim	/^    let s:t_none          = "NONE"$/;"	v
s:tag	vim-haml/indent/haml.vim	/^let s:tag = '\\%([%.#][[:alnum:]_-]\\+\\|'.s:attributes.'\\)*[<>]*'$/;"	v
s:tags_list	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^  let s:tags_list = {}$/;"	v
s:target_hl2_first_defaults	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_first_defaults = {$/;"	v
s:target_hl2_second_defaults	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl2_second_defaults = {$/;"	v
s:target_hl_defaults	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_defaults = {$/;"	v
s:target_hl_inc	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc = {$/;"	v
s:target_hl_inc_cursor	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_inc_cursor = {$/;"	v
s:target_hl_move	vim-easymotion/autoload/EasyMotion/highlight.vim	/^let s:target_hl_move = {$/;"	v
s:temp00	vim-colors-solarized/colors/solarized.vim	/^    let s:temp00      = s:base00$/;"	v
s:temp01	vim-colors-solarized/colors/solarized.vim	/^    let s:temp01      = s:base01$/;"	v
s:temp02	vim-colors-solarized/colors/solarized.vim	/^    let s:temp02      = s:base02$/;"	v
s:temp03	vim-colors-solarized/colors/solarized.vim	/^    let s:temp03      = s:base03$/;"	v
s:temp_files	vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^            let s:terminal_italic=1$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=0 " terminals will be guilty until proven compatible$/;"	v
s:terminal_italic	vim-colors-solarized/colors/solarized.vim	/^    let s:terminal_italic=1 " TODO: could refactor to not require this at all$/;"	v
s:terms_italic	vim-colors-solarized/colors/solarized.vim	/^let s:terms_italic=[$/;"	v
s:terms_noitalic	vim-colors-solarized/colors/solarized.vim	/^let s:terms_noitalic=[$/;"	v
s:ternary	vim-javascript/indent/javascript.vim	/^let s:ternary = '^\\s\\+[?|:]'$/;"	v
s:ternary_q	vim-javascript/indent/javascript.vim	/^let s:ternary_q = '^\\s\\+?'$/;"	v
s:tree_up_dir_line	nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:type_init_done	vim-tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:type_map	syntastic/syntax_checkers/fortran/gfortran.vim	/^let s:type_map = {}$/;"	v
s:u	vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ""$/;"	v
s:u	vim-colors-solarized/colors/solarized.vim	/^    let s:u           = ",underline"$/;"	v
s:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin . " | " . s:undo_ftplugin$/;"	v
s:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^  let s:undo_ftplugin = b:undo_ftplugin$/;"	v
s:undo_ftplugin	vim-haml/ftplugin/haml.vim	/^let s:undo_ftplugin = ""$/;"	v
s:using_xolox_shell	git-gutter/autoload/gitgutter/utility.vim	/^let s:using_xolox_shell = -1$/;"	v
s:var_stmt	vim-javascript/indent/javascript.vim	/^let s:var_stmt = '^\\s*(const\\|let\\|var)'$/;"	v
s:verbosefiles	vim-easymotion/autoload/vital/_easymotion/Palette/Capture.vim	/^let s:verbosefiles = []$/;"	v
s:vim_cmdline_mapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^let s:vim_cmdline_mapping = {$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#5f5faf"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "#6c71c4"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "13"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "61"$/;"	v
s:violet	vim-colors-solarized/colors/solarized.vim	/^    let s:violet      = "LightMagenta"  " 5*$/;"	v
s:visibility_symbols	vim-tagbar/autoload/tagbar.vim	/^let s:visibility_symbols = {$/;"	v
s:vmode	vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "cterm"$/;"	v
s:vmode	vim-colors-solarized/colors/solarized.vim	/^    let s:vmode       = "gui"$/;"	v
s:vname	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/ExceptionMessage.vim	/^let s:vname = expand("<sfile>:h:h:h:h:t")$/;"	v
s:vname	vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^let s:vname = expand("<sfile>:h:h:t")$/;"	v
s:warnings	vim-tagbar/autoload/tagbar.vim	/^let s:warnings = {$/;"	v
s:white	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:white = 15$/;"	v
s:white	coloresque/after/syntax/css/vim-coloresque.vim	/^let s:white = '#ffffff'$/;"	v
s:window_expanded	vim-tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:window_pos	vim-tagbar/autoload/tagbar.vim	/^let s:window_pos = {$/;"	v
s:winrestcmd	vim-tagbar/autoload/tagbar.vim	/^let s:winrestcmd      = ''$/;"	v
s:worktree_for_dir	vim-fugitive/plugin/fugitive.vim	/^let s:worktree_for_dir = {}$/;"	v
s:xtermcolor	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xtermcolor += [$/;"	v
s:xtermcolor	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xtermcolor = [$/;"	v
s:xvquant	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant = repeat([0],48)$/;"	v
s:xvquant	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[2]] = 2$/;"	v
s:xvquant	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[3]] = 3$/;"	v
s:xvquant	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[4]] = 4$/;"	v
s:xvquant	coloresque/after/syntax/css/vim-coloresque.vim	/^    let s:xvquant[s:cubergb[5]] = 5$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#af8700"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "#b58900"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "136"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "3"$/;"	v
s:yellow	vim-colors-solarized/colors/solarized.vim	/^    let s:yellow      = "DarkYellow"    " 3$/;"	v
s;1	vim-easymotion/t/smartsign_spec.vim	/^        normal s;1$/;"	m
s;2	vim-easymotion/t/smartsign_spec.vim	/^        normal s;2$/;"	m
s;3	vim-easymotion/t/smartsign_spec.vim	/^        normal s;3$/;"	m
s<,1	vim-easymotion/t/smartsign_spec.vim	/^        normal s<,1$/;"	m
s<1	vim-easymotion/t/smartsign_spec.vim	/^        normal s<1$/;"	m
s<<1	vim-easymotion/t/smartsign_spec.vim	/^        normal s<<1$/;"	m
s=1	vim-easymotion/t/smartsign_spec.vim	/^        normal s=1$/;"	m
s=2	vim-easymotion/t/smartsign_spec.vim	/^        normal s=2$/;"	m
s=3	vim-easymotion/t/smartsign_spec.vim	/^        normal s=3$/;"	m
s>1	vim-easymotion/t/smartsign_spec.vim	/^        normal s>1$/;"	m
s?1	vim-easymotion/t/smartsign_spec.vim	/^        normal s?1$/;"	m
s@1	vim-easymotion/t/smartsign_spec.vim	/^        normal s@1$/;"	m
s[1	vim-easymotion/t/smartsign_spec.vim	/^        normal s[1$/;"	m
s[2	vim-easymotion/t/smartsign_spec.vim	/^        normal s[2$/;"	m
s[3	vim-easymotion/t/smartsign_spec.vim	/^        normal s[3$/;"	m
s\1	vim-easymotion/t/smartsign_spec.vim	/^        normal s\\1$/;"	m
s\2	vim-easymotion/t/smartsign_spec.vim	/^        normal s\\2$/;"	m
s\3	vim-easymotion/t/smartsign_spec.vim	/^        normal s\\3$/;"	m
s]1	vim-easymotion/t/smartsign_spec.vim	/^        normal s]1$/;"	m
s]2	vim-easymotion/t/smartsign_spec.vim	/^        normal s]2$/;"	m
s]3	vim-easymotion/t/smartsign_spec.vim	/^        normal s]3$/;"	m
s^1	vim-easymotion/t/smartsign_spec.vim	/^        normal s^1$/;"	m
s_1	vim-easymotion/t/smartsign_spec.vim	/^        normal s_1$/;"	m
s`1	vim-easymotion/t/smartsign_spec.vim	/^        normal s`1$/;"	m
s`2	vim-easymotion/t/smartsign_spec.vim	/^        normal s`2$/;"	m
s`3	vim-easymotion/t/smartsign_spec.vim	/^        normal s`3$/;"	m
saa	vim-easymotion/t/easymotion_spec.vim	/^        normal saa$/;"	m
safe_write_file	vim-angular/spec/spec_helper.rb	/^  def safe_write_file(filename)$/;"	f
scan	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:scan(str, pattern) abort$/;"	f
scroll	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:scroll(direction) "{{{$/;"	f
search	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:search(pattern) abort$/;"	f
search	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:search(pattern) abort$/;"	f
search.keymapping	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.keymapping() "{{{$/;"	f
search.on_char	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_char(cmdline) "{{{$/;"	f
search.on_enter	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_enter(cmdline) "{{{$/;"	f
search.on_leave	vim-easymotion/autoload/EasyMotion/command_line.vim	/^function! s:search.on_leave(cmdline) "{{{$/;"	f
search_vim_path	vim-neocomplete/autoload/neocomplete/cache.vim	/^function! s:search_vim_path() "{{{$/;"	f
seed	jasmine/lib/jasmine-core/boot.js	/^  var seed = queryString.getParam("seed");$/;"	v
seed	jasmine/lib/jasmine-core/boot/boot.js	/^  var seed = queryString.getParam("seed");$/;"	v
seed	jasmine/src/core/Env.js	/^    this.seed = function(value) {$/;"	f
segmentChildren.isSegmentBoundary	jasmine/src/core/TreeProcessor.js	/^      function isSegmentBoundary(minIndex) {$/;"	f
self.clearInterval	jasmine/src/core/Clock.js	/^    };$/;"	f
self.clearTimeout	jasmine/src/core/Clock.js	/^    };$/;"	f
self.install	jasmine/src/core/Clock.js	/^      timer;$/;"	f
self.install	jasmine/src/core/MockDate.js	/^    var GlobalDate = global.Date;$/;"	f
self.mockDate	jasmine/src/core/Clock.js	/^    };$/;"	f
self.removeFunctionWithId	jasmine/src/core/DelayedFunctionScheduler.js	/^    };$/;"	f
self.scheduleFunction	jasmine/src/core/DelayedFunctionScheduler.js	/^    };$/;"	f
self.scheduleFunction.funcToSchedule.funcToCall	jasmine/src/core/DelayedFunctionScheduler.js	/^        runAtMillis: runAtMillis,$/;"	p
self.scheduleFunction.funcToSchedule.millis	jasmine/src/core/DelayedFunctionScheduler.js	/^        timeoutKey: timeoutKey,$/;"	p
self.scheduleFunction.funcToSchedule.params	jasmine/src/core/DelayedFunctionScheduler.js	/^        recurring: recurring,$/;"	p
self.scheduleFunction.funcToSchedule.recurring	jasmine/src/core/DelayedFunctionScheduler.js	/^        funcToCall: f,$/;"	p
self.scheduleFunction.funcToSchedule.runAtMillis	jasmine/src/core/DelayedFunctionScheduler.js	/^      var funcToSchedule = {$/;"	p
self.scheduleFunction.funcToSchedule.timeoutKey	jasmine/src/core/DelayedFunctionScheduler.js	/^        params: params,$/;"	p
self.setInterval	jasmine/src/core/Clock.js	/^    };$/;"	f
self.setTimeout	jasmine/src/core/Clock.js	/^    };$/;"	f
self.tick	jasmine/src/core/Clock.js	/^    };$/;"	f
self.tick	jasmine/src/core/MockDate.js	/^      self.install = function() {};$/;"	f
self.uninstall	jasmine/src/core/Clock.js	/^    };$/;"	f
self.uninstall	jasmine/src/core/MockDate.js	/^      self.tick = function() {};$/;"	f
self.withMock	jasmine/src/core/Clock.js	/^    };$/;"	c
set	git-gutter/plugin/gitgutter.vim	/^function! s:set(var, default)$/;"	f
set	vim-easymotion/autoload/vital/_easymotion/Palette/Highlight.vim	/^function! s:set(name, config)$/;"	f
set_auto_completion_length	vim-neocomplete/autoload/neocomplete/commands.vim	/^function! s:set_auto_completion_length(len) "{{{$/;"	f
set_complete_results_pos	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_pos(funcs, cur_text) "{{{$/;"	f
set_complete_results_words	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:set_complete_results_words(complete_results) "{{{$/;"	f
set_default	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:set_default(var, val) abort$/;"	f
set_default_menu	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! s:set_default_menu(words, source) abort "{{{$/;"	f
set_dictionary_helper	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:set_dictionary_helper(variable, keys, pattern) abort$/;"	f
set_prefix	vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:set_prefix(prefix)$/;"	f
setup	jasmine/setup.py	/^from setuptools import setup, find_packages, os$/;"	i
setup_filesystem	vim-angular/spec/spec_helper.rb	/^  def setup_filesystem(*args)$/;"	f
setup_keymaps	vim-tagbar/plugin/tagbar.vim	/^function! s:setup_keymaps() abort$/;"	f
setup_options	vim-tagbar/plugin/tagbar.vim	/^function! s:setup_options() abort$/;"	f
sh	vim-easymotion/t/easymotion_spec.vim	/^        normal sh$/;"	m
sha	vim-easymotion/t/easymotion_spec.vim	/^        normal sha$/;"	m
shb	vim-easymotion/t/easymotion_spec.vim	/^        normal shb$/;"	m
shellesc	vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellescape	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(...) abort$/;"	f
shellescape	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^  function! s:shellescape(command) abort$/;"	f
shellslash	vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path) abort$/;"	f
shift	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:shift(list) abort$/;"	f
shift	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:shift(list) abort$/;"	f
should_alternate_between	vim-angular/spec/alternate_spec.rb	/^  def should_alternate_between(file_a, file_b)$/;"	f
should_alternate_from_a_to_b	vim-angular/spec/alternate_spec.rb	/^  def should_alternate_from_a_to_b(file_a, file_b)$/;"	f
should_create_cache	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:should_create_cache(bufnr) " {{{$/;"	f
should_use_migemo	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_migemo(char) "{{{$/;"	f
should_use_regexp	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_regexp() "{{{$/;"	f
should_use_smartsign	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_smartsign(char) "{{{$/;"	f
should_use_wundo	vim-easymotion/autoload/EasyMotion.vim	/^function! s:should_use_wundo() "{{{$/;"	f
showColors	jasmine/lib/jasmine-core/spec/node_suite.js	/^var showColors = true;$/;"	v
showColors	jasmine/spec/node_suite.js	/^var showColors = true;$/;"	v
showMenu	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:showMenu(node)$/;"	f
show_category	vim-emmet/unittest.vim	/^function! s:show_category(category)$/;"	f
show_done	vim-emmet/unittest.vim	/^function! s:show_done()$/;"	f
show_ng	vim-emmet/unittest.vim	/^function! s:show_ng(no, expect, got)$/;"	f
show_ok	vim-emmet/unittest.vim	/^function! s:show_ok()$/;"	f
show_pass	vim-emmet/unittest.vim	/^function! s:show_pass(pass)$/;"	f
show_skip	vim-emmet/unittest.vim	/^function! s:show_skip(no, title)$/;"	f
show_title	vim-emmet/unittest.vim	/^function! s:show_title(no, title)$/;"	f
show_type	vim-emmet/unittest.vim	/^function! s:show_type(type)$/;"	f
smart_execute_command	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:smart_execute_command(action, word) abort$/;"	f
smartdict_jp	vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_jp = g:EasyMotion#sticky_table#jp$/;"	v
smartdict_us	vim-easymotion/t/smartsign_spec.vim	/^        let smartdict_us = g:EasyMotion#sticky_table#us$/;"	v
sob	vim-easymotion/t/easymotion_spec.vim	/^        normal sob$/;"	m
sort	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort(list, expr) abort$/;"	f
sort_by	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sort_by	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:sort_by(list, expr) abort$/;"	f
sorter.filter	vim-neocomplete/autoload/neocomplete/filters/sorter_filename.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	vim-neocomplete/autoload/neocomplete/filters/sorter_length.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	vim-neocomplete/autoload/neocomplete/filters/sorter_rank.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
sorter.filter	vim-neocomplete/autoload/neocomplete/filters/sorter_word.vim	/^function! s:sorter.filter(context) "{{{$/;"	f
source.gather_candidates	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	vim-neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.gather_candidates(context) "{{{$/;"	f
source.gather_candidates	vim-neocomplete/autoload/unite/sources/file_include.vim	/^function! s:source.gather_candidates(args, context) "{{{$/;"	f
source.get_complete_position	vim-neocomplete/autoload/neocomplete/sources/file.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.get_complete_position	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.get_complete_position(context) "{{{$/;"	f
source.hooks.on_final	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_final	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_final(context) "{{{$/;"	f
source.hooks.on_init	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	vim-neocomplete/autoload/neocomplete/sources/dictionary.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	vim-neocomplete/autoload/neocomplete/sources/member.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	vim-neocomplete/autoload/neocomplete/sources/omni.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	vim-neocomplete/autoload/neocomplete/sources/tag.vim	/^function! s:source.hooks.on_init(context) "{{{$/;"	f
source.hooks.on_init	vim-neocomplete/autoload/unite/sources/file_include.vim	/^function! s:source.hooks.on_init(args, context) "{{{$/;"	f
source.hooks.on_post_filter	vim-neocomplete/autoload/neocomplete/sources/buffer.vim	/^function! s:source.hooks.on_post_filter(context) "{{{$/;"	f
spa	vim-easymotion/t/easymotion_spec.vim	/^        normal spa$/;"	m
span	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
span	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:span(f, xs) abort$/;"	f
spawn	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:spawn(expr, ...) abort$/;"	f
spb	vim-easymotion/t/easymotion_spec.vim	/^        normal spb$/;"	m
spc	vim-easymotion/t/easymotion_spec.vim	/^        normal spc$/;"	m
specFactory	jasmine/src/core/Env.js	/^    var specFactory = function(description, fn, suite, timeout) {$/;"	f
specFactory.specResultCallback	jasmine/src/core/Env.js	/^      function specResultCallback(result) {$/;"	f
specFactory.specStarted	jasmine/src/core/Env.js	/^      function specStarted(spec) {$/;"	f
spec_files	jasmine/lib/jasmine-core.rb	/^      def spec_files(type)$/;"	f	class:Jasmine.Core
split3	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split3(expr, pattern) abort$/;"	f
split_by_displaywidth	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_by_displaywidth(expr, width, float, is_wrap) abort$/;"	f
split_by_keys	vim-easymotion/autoload/vital/_easymotion/Over/String.vim	/^function! s:split_by_keys(str)$/;"	f
split_leftright	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:split_leftright(expr, pattern) abort$/;"	f
spyOn	jasmine/src/core/Env.js	/^    this.spyOn = function() {$/;"	f
stage_info	vim-fugitive/plugin/fugitive.vim	/^function! s:stage_info(lnum) abort$/;"	f
standaloneLibDir	jasmine/grunt/config/compress.js	/^var standaloneLibDir = "lib\/jasmine-" + jasmineVersion;$/;"	v
standaloneTmpDir	jasmine/grunt/tasks/build_standalone.js	/^function standaloneTmpDir(path) {  return "dist\/tmp\/" + path; }$/;"	f
start	vim-neocomplete/test/neocomplete.vim	/^  let start = reltime()$/;"	v
start_complete	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^function! s:start_complete(is_quick_match) "{{{$/;"	f
stats.executable	jasmine/src/core/TreeProcessor.js	/^        stats[node.id] = {$/;"	p
stats.valid	jasmine/src/core/TreeProcessor.js	/^          stats = { valid: false };$/;"	p
str	jasmine/lib/jasmine-core/json2.js	/^    function str(key, holder) {$/;"	f
strchars	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:strchars(str) abort$/;"	f
strwidthpart	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:strwidthpart(str, width) "{{{$/;"	f
strwidthpart	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart(str, width) abort$/;"	f
strwidthpart_reverse	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
strwidthpart_reverse	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:strwidthpart_reverse(str, width) abort$/;"	f
sub	vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
substitute_last	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:substitute_last(expr, pat, sub) abort$/;"	f
substitute_path_separator	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:substitute_path_separator(path) abort$/;"	f
suffix	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/DrawCommandline.vim	/^function! s:suffix(left, suffix)$/;"	f
suite.escape	vim-neocomplete/test/neocomplete.vim	/^function! s:suite.escape()$/;"	f
suite.fuzzy	vim-neocomplete/test/neocomplete.vim	/^function! s:suite.fuzzy()$/;"	f
suite.overlap	vim-neocomplete/test/neocomplete.vim	/^function! s:suite.overlap()$/;"	f
suite.sort	vim-neocomplete/test/neocomplete.vim	/^function! s:suite.sort()$/;"	f
suiteFactory	jasmine/src/core/Env.js	/^    var suiteFactory = function(description) {$/;"	f
syntastic	syntastic/plugin/syntastic.vim	/^    augroup syntastic$/;"	a
syntastic	syntastic/plugin/syntastic.vim	/^augroup syntastic$/;"	a
syntastic	syntastic/syntax_checkers/rst/sphinx.vim	/^augroup syntastic$/;"	a
syntastic	syntastic/syntax_checkers/sass/sass.vim	/^augroup syntastic$/;"	a
syntastic#c#GetLocList	syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#GetLocList(filetype, subchecker, options) abort " {{{2$/;"	f
syntastic#c#NullOutput	syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#NullOutput() abort " {{{2$/;"	f
syntastic#c#ReadConfig	syntastic/autoload/syntastic/c.vim	/^function! syntastic#c#ReadConfig(file) abort " {{{2$/;"	f
syntastic#log#debug	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debug(level, msg, ...) abort " {{{2$/;"	f
syntastic#log#debugDump	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugDump(level) abort " {{{2$/;"	f
syntastic#log#debugShowOptions	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowOptions(level, names) abort " {{{2$/;"	f
syntastic#log#debugShowVariables	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#debugShowVariables(level, names) abort " {{{2$/;"	f
syntastic#log#deprecationWarn	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#deprecationWarn(old, new, ...) abort " {{{2$/;"	f
syntastic#log#error	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#error(msg) abort " {{{2$/;"	f
syntastic#log#info	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#info(msg) abort " {{{2$/;"	f
syntastic#log#ndebug	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#ndebug(level, title, messages) abort " {{{2$/;"	f
syntastic#log#oneTimeWarn	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#oneTimeWarn(msg) abort " {{{2$/;"	f
syntastic#log#warn	syntastic/autoload/syntastic/log.vim	/^function! syntastic#log#warn(msg) abort " {{{2$/;"	f
syntastic#postprocess#compressWhitespace	syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#compressWhitespace(errors) abort " {{{2$/;"	f
syntastic#postprocess#cygwinRemoveCR	syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#cygwinRemoveCR(errors) abort " {{{2$/;"	f
syntastic#postprocess#decodeXMLEntities	syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#decodeXMLEntities(errors) abort " {{{2$/;"	f
syntastic#postprocess#filterForeignErrors	syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#filterForeignErrors(errors) abort " {{{2$/;"	f
syntastic#postprocess#guards	syntastic/autoload/syntastic/postprocess.vim	/^function! syntastic#postprocess#guards(errors) abort " {{{2$/;"	f
syntastic#preprocess#basex	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#basex(errors) abort " {{{2$/;"	f
syntastic#preprocess#bro	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#bro(errors) abort " {{{2$/;"	f
syntastic#preprocess#cabal	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cabal(errors) abort " {{{2$/;"	f
syntastic#preprocess#checkstyle	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#checkstyle(errors) abort " {{{2$/;"	f
syntastic#preprocess#coffeelint	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#coffeelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#cppcheck	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#cppcheck(errors) abort " {{{2$/;"	f
syntastic#preprocess#flow	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#flow(errors) abort " {{{2$/;"	f
syntastic#preprocess#iconv	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#iconv(errors) abort " {{{2$/;"	f
syntastic#preprocess#killEmpty	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#killEmpty(errors) abort " {{{2$/;"	f
syntastic#preprocess#mypy	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#mypy(errors) abort " {{{2$/;"	f
syntastic#preprocess#nix	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#nix(errors) abort " {{{2$/;"	f
syntastic#preprocess#perl	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#perl(errors) abort " {{{2$/;"	f
syntastic#preprocess#prospector	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#prospector(errors) abort " {{{2$/;"	f
syntastic#preprocess#rparse	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#rparse(errors) abort " {{{2$/;"	f
syntastic#preprocess#stylelint	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#stylelint(errors) abort " {{{2$/;"	f
syntastic#preprocess#tslint	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#tslint(errors) abort " {{{2$/;"	f
syntastic#preprocess#validator	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#validator(errors) abort " {{{2$/;"	f
syntastic#preprocess#vint	syntastic/autoload/syntastic/preprocess.vim	/^function! syntastic#preprocess#vint(errors) abort " {{{2$/;"	f
syntastic#util#CygwinPath	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#CygwinPath(path) abort " {{{2$/;"	f
syntastic#util#DevNull	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#DevNull() abort " {{{2$/;"	f
syntastic#util#Slash	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#Slash() abort " {{{2$/;"	f
syntastic#util#argsescape	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#argsescape(opt) abort " {{{2$/;"	f
syntastic#util#bufIsActive	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#bufIsActive(buffer) abort " {{{2$/;"	f
syntastic#util#compareLexi	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#compareLexi(a, b) abort " {{{2$/;"	f
syntastic#util#decodeXMLEntities	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#decodeXMLEntities(string) abort " {{{2$/;"	f
syntastic#util#dictFilter	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#dictFilter(errors, filter) abort " {{{2$/;"	f
syntastic#util#findFileInParent	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findFileInParent(what, where) abort " {{{2$/;"	f
syntastic#util#findGlobInParent	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#findGlobInParent(what, where) abort " {{{2$/;"	f
syntastic#util#float2str	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#float2str(val) abort " {{{2$/;"	f
syntastic#util#isRunningWindows	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#isRunningWindows() abort " {{{2$/;"	f
syntastic#util#parseShebang	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseShebang() abort " {{{2$/;"	f
syntastic#util#parseVersion	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#parseVersion(version, ...) abort " {{{2$/;"	f
syntastic#util#redraw	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#redraw(full) abort " {{{2$/;"	f
syntastic#util#rmrf	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#rmrf(what) abort " {{{2$/;"	f
syntastic#util#screenWidth	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#screenWidth(str, tabstop) abort " {{{2$/;"	f
syntastic#util#shescape	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shescape(string) abort " {{{2$/;"	f
syntastic#util#shexpand	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#shexpand(string, ...) abort " {{{2$/;"	f
syntastic#util#stamp	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#stamp() abort " {{{2$/;"	f
syntastic#util#str2float	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#str2float(val) abort " {{{2$/;"	f
syntastic#util#system	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#system(command) abort " {{{2$/;"	f
syntastic#util#tmpdir	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#tmpdir() abort " {{{2$/;"	f
syntastic#util#unique	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#unique(list) abort " {{{2$/;"	f
syntastic#util#var	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#var(name, ...) abort " {{{2$/;"	f
syntastic#util#versionIsAtLeast	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#versionIsAtLeast(installed, required) abort " {{{2$/;"	f
syntastic#util#wformat	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wformat(format, str) abort " {{{2$/;"	f
syntastic#util#wideMsg	syntastic/autoload/syntastic/util.vim	/^function! syntastic#util#wideMsg(msg) abort " {{{2$/;"	f
system	vim-neocomplete/autoload/vital/_neocomplete/Process.vim	/^function! s:system(str, ...) abort$/;"	f
s{1	vim-easymotion/t/smartsign_spec.vim	/^        normal s{1$/;"	m
s|1	vim-easymotion/t/smartsign_spec.vim	/^        normal s|1$/;"	m
s}1	vim-easymotion/t/smartsign_spec.vim	/^        normal s}1$/;"	m
s~1	vim-easymotion/t/smartsign_spec.vim	/^        normal s~1$/;"	m
t	vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-bd-t)$/;"	m
t	vim-easymotion/t/easymotion_spec.vim	/^        map t <Plug>(easymotion-t)$/;"	m
t/	vim-easymotion/t/easymotion_spec.vim	/^        map t\/ <Plug>(easymotion-tn)$/;"	m
t;	vim-easymotion/t/easymotion_spec.vim	/^        normal t;$/;"	m
t;a	vim-easymotion/t/easymotion_spec.vim	/^        normal t;a$/;"	m
tH	vim-easymotion/t/easymotion_spec.vim	/^        normal tH$/;"	m
tagbar#CloseWindow	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow() abort$/;"	f
tagbar#OpenWindow	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...) abort$/;"	f
tagbar#RestoreSession	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession() abort$/;"	f
tagbar#SetFoldLevel	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(level, force) abort$/;"	f
tagbar#StartDebug	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...) abort$/;"	f
tagbar#StopDebug	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug() abort$/;"	f
tagbar#ToggleWindow	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow() abort$/;"	f
tagbar#autoopen	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen(...) abort$/;"	f
tagbar#currentfile	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#currentfile() abort$/;"	f
tagbar#currenttag	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#currenttag(fmt, default, ...) abort$/;"	f
tagbar#gettypeconfig	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#gettypeconfig(type) abort$/;"	f
tagbar#getusertypes	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#getusertypes() abort$/;"	f
tagbar#highlighttag	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#highlighttag(openfolds, force) abort$/;"	f
tagbar#inspect	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#inspect(var) abort$/;"	f
tagbar#toggle_pause	vim-tagbar/autoload/tagbar.vim	/^function! tagbar#toggle_pause() abort$/;"	f
take_while	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
take_while	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:take_while(f, xs) abort$/;"	f
tb	vim-easymotion/t/easymotion_spec.vim	/^        normal tb$/;"	m
tba	vim-easymotion/t/easymotion_spec.vim	/^        normal tba$/;"	m
test	vim-emmet/unittest.vim	/^function! s:test(...)$/;"	f
text	syntastic/syntax_checkers/python/codec.py	/^            text = codecs.lookup(match.groupdict()["coding"]).incrementaldecoder().decode($/;"	v
text	syntastic/syntax_checkers/python/codec.py	/^        text = ''.join(text).encode('utf-8')$/;"	v
text	syntastic/syntax_checkers/python/codec.py	/^        text = fle.readlines()$/;"	v
tha	vim-easymotion/t/easymotion_spec.vim	/^        normal tha$/;"	m
thb	vim-easymotion/t/easymotion_spec.vim	/^        normal thb$/;"	m
thc	vim-easymotion/t/easymotion_spec.vim	/^        normal thc$/;"	m
throw	vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw(exp, where)$/;"	f
throw	vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
throwOnExpectationFailure	jasmine/src/core/Env.js	/^    this.throwOnExpectationFailure = function(value) {$/;"	f
throw_cmd	vim-easymotion/autoload/vital/_easymotion/Over/Exception.vim	/^function! s:throw_cmd(exp, where)$/;"	f
throwingExpectationFailures	jasmine/lib/jasmine-core/boot.js	/^  var throwingExpectationFailures = queryString.getParam("throwFailures");$/;"	v
throwingExpectationFailures	jasmine/lib/jasmine-core/boot/boot.js	/^  var throwingExpectationFailures = queryString.getParam("throwFailures");$/;"	v
throwingExpectationFailures	jasmine/src/core/Env.js	/^    this.throwingExpectationFailures = function() {$/;"	f
tmpfile	git-gutter/test/testFileAddedToGit.vim	/^let tmpfile = 'fileAddedToGit.tmp'$/;"	v
tmpfile	git-gutter/test/testFollowSymlink.vim	/^let tmpfile = 'symlink'$/;"	v
tmpfile	git-gutter/test/testUntrackedFileOutsideRepo.vim	/^let tmpfile = tempname()$/;"	v
tmpfile	git-gutter/test/testUntrackedFileWithinRepo.vim	/^let tmpfile = 'untrackedFileWithinRepo.tmp'$/;"	v
to_string	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/InsertRegister.vim	/^function! s:to_string(expr)$/;"	f
toggle	vim-capslock/plugin/capslock.vim	/^function! s:toggle(mode, ...) abort$/;"	f
toggleIgnoreFilter	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:toggleZoom()$/;"	f
togglebg#map	vim-colors-solarized/autoload/togglebg.vim	/^function! togglebg#map(mapActivation)$/;"	f
topSuite	jasmine/src/core/Env.js	/^    this.topSuite = function() {$/;"	f
translate_path	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(Dir, {i, Path}) ->$/;"	f
translate_path	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_path(_, Other) -> Other.$/;"	f
translate_paths	syntastic/syntax_checkers/erlang/erlang_check_file.erl	/^translate_paths(Dir, RebarOpts) ->$/;"	f
trim	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:trim(str) abort$/;"	f
truncate	vim-neocomplete/autoload/neocomplete/async_cache.vim	/^function! s:truncate(str, width) "{{{$/;"	f
truncate	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate(str, width) abort$/;"	f
truncate_skipping	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_skipping	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate_skipping(str, max, footer_width, separator) abort$/;"	f
truncate_smart	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^function! s:truncate_smart(str, max, footer_width, separator) abort$/;"	f
turn_off_hl_error	vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_off_hl_error() "{{{$/;"	f
turn_on_hl_error	vim-easymotion/autoload/EasyMotion.vim	/^function! s:turn_on_hl_error() "{{{$/;"	f
u	vim-easymotion/t/operator_pending_spec.vim	/^        normal! u$/;"	m
ul	jasmine/src/html/_HTMLReporter.scss	/^    ul {$/;"	t
unfocusAncestor	jasmine/src/core/Env.js	/^    function unfocusAncestor() {$/;"	f
uniq	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq(list) abort$/;"	f
uniq_by	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
uniq_by	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:uniq_by(list, f) abort$/;"	f
unite#sources#file_include#define	vim-neocomplete/autoload/unite/sources/file_include.vim	/^function! unite#sources#file_include#define()$/;"	f
unite#sources#neocomplete#define	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#define() "{{{$/;"	f
unite#sources#neocomplete#start_complete	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_complete() "{{{$/;"	f
unite#sources#neocomplete#start_quick_match	vim-neocomplete/autoload/unite/sources/neocomplete.vim	/^function! unite#sources#neocomplete#start_quick_match() "{{{$/;"	f
unlink_file	javascript-libraries-syntax.vim/Makefile	/^unlink_file = \\$/;"	m
unload	vim-easymotion/autoload/vital/_easymotion.vim	/^function! s:unload() abort$/;"	f
unload	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! s:unload() abort$/;"	f
unmapping	vim-easymotion/autoload/vital/_easymotion/Over/Keymapping.vim	/^function! s:unmapping(keymapping, key, ...)$/;"	f
unshift	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
unshift	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:unshift(list, val) abort$/;"	f
upDirCurrentRootClosed	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootClosed()$/;"	f
upDirCurrentRootOpen	nerdtree/autoload/nerdtree/ui_glue.vim	/^function! s:upDirCurrentRootOpen()$/;"	f
url	jasmine/setup.py	/^    url="http:\/\/jasmine.github.io",$/;"	v
use_previous_result	vim-neocomplete/autoload/neocomplete/complete.vim	/^function! s:use_previous_result(source, context) abort "{{{$/;"	f
util	jasmine/lib/jasmine-core/spec/node_suite.js	/^var util = require('util');$/;"	v
util	jasmine/spec/node_suite.js	/^var util = require('util');$/;"	v
util.argsToArray	jasmine/src/core/util.js	/^  };$/;"	f
util.arrayContains	jasmine/src/core/util.js	/^  };$/;"	f
util.clone	jasmine/src/core/util.js	/^  };$/;"	f
util.htmlEscape	jasmine/src/core/util.js	/^  };$/;"	f
util.inherit	jasmine/src/core/util.js	/^  var util = {};$/;"	f
util.inherit.Subclass	jasmine/src/core/util.js	/^    var Subclass = function() {$/;"	f
util.isUndefined	jasmine/src/core/util.js	/^  };$/;"	f
valid	jasmine/src/core/TreeProcessor.js	/^        stats = { valid: true },$/;"	p
var.data.actual	jasmine/src/core/Suite.js	/^        expected: '',$/;"	p
var.data.error	jasmine/src/core/Suite.js	/^        actual: '',$/;"	p
var.data.expected	jasmine/src/core/Suite.js	/^        passed: false,$/;"	p
var.data.matcherName	jasmine/src/core/Suite.js	/^      var data = {$/;"	p
var.data.passed	jasmine/src/core/Suite.js	/^        matcherName: '',$/;"	p
version	jasmine/setup.py	/^    version=version,$/;"	v
version	jasmine/setup.py	/^  version = json.load(packageFile)['version']$/;"	v
vfha	vim-easymotion/t/easymotion_spec.vim	/^        normal vfha$/;"	m
vim_cmdline_mapping.keymapping	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.keymapping(cmdline)$/;"	f
vim_cmdline_mapping.on_enter	vim-easymotion/autoload/vital/_easymotion/Over/Commandline/Modules/KeyMapping.vim	/^function! s:vim_cmdline_mapping.on_enter(cmdline)$/;"	f
vimlintOutput	syntastic/syntax_checkers/vim/vimlint.vim	/^function! s:vimlintOutput(filename, pos, ev, eid, mes, obj) " {{{2$/;"	f
vital#	vim-easymotion/autoload/vital/_easymotion.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#	vim-neocomplete/autoload/vital/_neocomplete.vim	/^function! vital#{s:self_version}#new() abort$/;"	f
vital#of	vim-easymotion/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
vital#of	vim-neocomplete/autoload/vital.vim	/^function! vital#of(name) abort$/;"	f
w	vim-easymotion/t/easymotion_spec.vim	/^        map w <Plug>(easymotion-w)$/;"	m
w	vim-easymotion/t/operator_pending_spec.vim	/^        omap w <Plug>(easymotion-w)$/;"	m
w:colorDictRegExp	coloresque/after/syntax/css/vim-coloresque.vim	/^let w:colorDictRegExp=''$/;"	v
warn	vim-easymotion/autoload/vital/_easymotion/Vim/Message.vim	/^function! s:warn(msg) abort$/;"	f
warn	vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str) abort$/;"	f
warning	vim-tagbar/autoload/tagbar.vim	/^function! s:warning(msg) abort$/;"	f
wc	vim-easymotion/t/easymotion_spec.vim	/^        normal wc$/;"	m
wcswidth	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^  function! s:wcswidth(str) abort$/;"	f
wcswidth	vim-neocomplete/autoload/vital/_neocomplete/Prelude.vim	/^  function! s:wcswidth(str) abort$/;"	f
wh	vim-easymotion/t/easymotion_spec.vim	/^        normal wh$/;"	m
window.onload	jasmine/lib/jasmine-core/boot.js	/^  var currentWindowOnload = window.onload;$/;"	f
window.onload	jasmine/lib/jasmine-core/boot/boot.js	/^  var currentWindowOnload = window.onload;$/;"	f
winshell	vim-fugitive/plugin/fugitive.vim	/^function! s:winshell() abort$/;"	f
with_index	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
with_index	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:with_index(list, ...) abort$/;"	f
wrap	vim-neocomplete/autoload/vital/_neocomplete/Data/String.vim	/^function! s:wrap(str,...) abort$/;"	f
wrap	vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,removed,special)$/;"	f
wrapChildren	jasmine/src/core/TreeProcessor.js	/^    function wrapChildren(node, segmentNumber) {$/;"	f
wrapreg	vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,removed,special)$/;"	f
writefile	vim-neocomplete/autoload/vital/_neocomplete/System/Cache.vim	/^function! s:writefile(cache_dir, filename, list) abort$/;"	f
xdescribe	jasmine/src/core/Env.js	/^    this.xdescribe = function(description, specDefinitions) {$/;"	f
xit	jasmine/src/core/Env.js	/^    this.xit = function() {$/;"	f
yS	vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
zip	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip(...) abort$/;"	f
zip_fill	vim-easymotion/autoload/vital/_easymotion/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
zip_fill	vim-neocomplete/autoload/vital/_neocomplete/Data/List.vim	/^function! s:zip_fill(xs, ys, filler) abort$/;"	f
