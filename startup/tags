!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
/	mappings.vim	/^no \/ \/\\v$/;"	m
<BS>	settings.vim	/^inoremap <expr><BS> neocomplete#smart_close_popup()."\\<C-h>"$/;"	m
<C-S-Tab>	mappings.vim	/^imap <C-S-Tab> <ESC>:tabprevious<CR>$/;"	m
<C-S-Tab>	mappings.vim	/^map <C-S-Tab> :tabprevious<CR>$/;"	m
<C-S-Tab>	mappings.vim	/^nmap <C-S-Tab> :tabprevious<CR>$/;"	m
<C-Tab>	mappings.vim	/^imap <C-Tab> <ESC>:tabnext<CR>$/;"	m
<C-Tab>	mappings.vim	/^map <C-Tab> :tabnext<CR>$/;"	m
<C-Tab>	mappings.vim	/^nmap <C-Tab> :tabnext<CR>$/;"	m
<C-\>	mappings.vim	/^map <C-\\> :tab split<CR>:exec("tag ".expand("<cword>"))<CR>$/;"	m
<C-g>	settings.vim	/^inoremap <expr><C-g>     neocomplete#undo_completion()$/;"	m
<C-h>	settings.vim	/^inoremap <expr><C-h> neocomplete#smart_close_popup()."\\<C-h>"$/;"	m
<C-l>	settings.vim	/^inoremap <expr><C-l>     neocomplete#complete_common_string()$/;"	m
<C-n>	mappings.vim	/^nmap <C-n> :noh<CR>$/;"	m
<CR>	settings.vim	/^inoremap <silent> <CR> <C-r>=<SID>my_cr_function()<CR>$/;"	m
<F1>	functions.vim	/^nnoremap <F1> :call ToggleFocusMode()<cr>$/;"	m
<F7>	mappings.vim	/^noremap <F7> :set expandtab!<CR>$/;"	m
<Leader>c"	mappings.vim	/^nmap <Leader>c" "_di"Pa$/;"	m
<Leader>c'	mappings.vim	/^nmap <Leader>c' '_di'Pa$/;"	m
<Leader>h	mappings.vim	/^nmap <Leader>h :tabnew %:h<CR>$/;"	m
<Leader>r"	mappings.vim	/^nmap <Leader>r" "_di"P$/;"	m
<Leader>r'	mappings.vim	/^nmap <Leader>r' '_di'P$/;"	m
<TAB>	settings.vim	/^inoremap <expr><TAB>  pumvisible() ? "\\<C-n>" : "\\<TAB>"$/;"	m
<down>	mappings.vim	/^ino <down> <Nop>$/;"	m
<down>	mappings.vim	/^no <down> ddp$/;"	m
<down>	mappings.vim	/^vno <down> <Nop>$/;"	m
<leader>"	mappings.vim	/^imap <leader>" ""<ESC>i$/;"	m
<leader>'	mappings.vim	/^imap <leader>' ''<ESC>i$/;"	m
<leader>(	mappings.vim	/^imap <leader>( ()<ESC>i$/;"	m
<leader>[	mappings.vim	/^imap <leader>[ []<ESC>i$/;"	m
<left>	mappings.vim	/^ino <left> <Nop>$/;"	m
<left>	mappings.vim	/^no <left> <Nop>$/;"	m
<left>	mappings.vim	/^vno <left> <Nop>$/;"	m
<right>	mappings.vim	/^ino <right> <Nop>$/;"	m
<right>	mappings.vim	/^no <right> <Nop>$/;"	m
<right>	mappings.vim	/^vno <right> <Nop>$/;"	m
<up>	mappings.vim	/^ino <up> <Nop>$/;"	m
<up>	mappings.vim	/^no <up> ddkP$/;"	m
<up>	mappings.vim	/^vno <up> <Nop>$/;"	m
AutoMkdir	commands.vim	/^augroup AutoMkdir$/;"	a
CR	commands.vim	/^command! CR 80vnew +setlocal\\ buftype=nofile\\ bufhidden=hide\\ noswapfile | r !php-cs-fixer fix # --diff --dry-run -vvv$/;"	c
CheckTabs	functions.vim	/^fun! CheckTabs()$/;"	f
DiffOrig	commands.vim	/^command! DiffOrig vert new | set bt=nofile | r # | 0d_ | diffthis | wincmd p | diffthis$/;"	c
EnsureDirExists	functions.vim	/^function! EnsureDirExists ()$/;"	f
Format_Inflection_ToCamelCase	functions.vim	/^fun! Format_Inflection_ToCamelCase()$/;"	f
Format_Inflection_ToUnderscored	functions.vim	/^fun! Format_Inflection_ToUnderscored()$/;"	f
Format_WhiteSpace_RemoveTrailing	functions.vim	/^fun! Format_WhiteSpace_RemoveTrailing()$/;"	f
G	mappings.vim	/^nmap G Gzz$/;"	m
JShint	commands.vim	/^command! JShint 80vnew +setlocal\\ buftype=nofile\\ bufhidden=hide\\ noswapfile | r !jshint # --show-non-errors$/;"	c
N	mappings.vim	/^nmap N Nzz$/;"	m
NERDTreeDirArrows	settings.vim	/^let NERDTreeDirArrows = 1$/;"	v
NERDTreeMinimalUI	settings.vim	/^let NERDTreeMinimalUI = 0$/;"	v
Sinit	commands.vim	/^command! -nargs=0 Sinit :call <SID>Sinit('%:p:h')$/;"	c
Sinit	functions.vim	/^fun! s:Sinit(filen)$/;"	f
ToggleFocusMode	functions.vim	/^function! ToggleFocusMode()$/;"	f
W	commands.vim	/^command! -nargs=? W :w <args>$/;"	c
[c	mappings.vim	/^nmap [c [czz$/;"	m
[h	mappings.vim	/^nmap [h <Plug>GitGutterPrevHunk$/;"	m
]c	mappings.vim	/^nmap ]c ]czz$/;"	m
]h	mappings.vim	/^nmap ]h <Plug>GitGutterNextHunk$/;"	m
cU	mappings.vim	/^nmap cU cf_$/;"	m
ca,	mappings.vim	/^nmap ca, f,ld2F,i,<ESC>a "delete arg and insert$/;"	m
ci,	mappings.vim	/^nmap ci, f,cT,$/;"	m
cs"	mappings.vim	/^noremap cs" F"x,xi$/;"	m
cs'	mappings.vim	/^noremap cs' F'x,xi$/;"	m
cs(	mappings.vim	/^noremap cs( F(xf)xi$/;"	m
cs)	mappings.vim	/^noremap cs) F(xf)xi$/;"	m
cs{	mappings.vim	/^noremap cs{ F{xf}xi$/;"	m
cu	mappings.vim	/^nmap cu ct_$/;"	m
da,	mappings.vim	/^nmap da, f,ld2F,i,<ESC>l "delete argument $/;"	m
di,	mappings.vim	/^nmap di, f,dT,$/;"	m
ds"	mappings.vim	/^noremap ds" F"x,x$/;"	m
ds'	mappings.vim	/^noremap ds' F'x,x$/;"	m
ds(	mappings.vim	/^noremap ds( F(xf)x$/;"	m
ds)	mappings.vim	/^noremap ds) F(xf)x$/;"	m
ds{	mappings.vim	/^noremap ds{ F{xf}x$/;"	m
filetype_html	html.vim	/^augroup filetype_html$/;"	a
g:acp_enableAtStartup	settings.vim	/^let g:acp_enableAtStartup = 0$/;"	v
g:gitgutter_sign_modified	settings.vim	/^let g:gitgutter_sign_modified = '≈ '$/;"	v
g:gitgutter_sign_removed	settings.vim	/^let g:gitgutter_sign_removed = '⌐ '$/;"	v
g:indent_guides_auto_colors	settings.vim	/^let g:indent_guides_auto_colors = 0$/;"	v
g:indent_guides_color_change_percent	settings.vim	/^let g:indent_guides_color_change_percent = 10$/;"	v
g:indent_guides_guide_size	settings.vim	/^let g:indent_guides_guide_size = 1$/;"	v
g:indent_guides_space_guides	settings.vim	/^let g:indent_guides_space_guides = 1$/;"	v
g:neocomplete#enable_at_startup	settings.vim	/^let g:neocomplete#enable_at_startup = 1$/;"	v
g:neocomplete#enable_smart_case	settings.vim	/^let g:neocomplete#enable_smart_case = 1$/;"	v
g:neocomplete#keyword_patterns	settings.vim	/^    let g:neocomplete#keyword_patterns = {}$/;"	v
g:neocomplete#keyword_patterns	settings.vim	/^let g:neocomplete#keyword_patterns['default'] = '\\h\\w*'$/;"	v
g:neocomplete#lock_buffer_name_pattern	settings.vim	/^let g:neocomplete#lock_buffer_name_pattern = '\\*ku\\*'$/;"	v
g:neocomplete#sources#dictionary#dictionaries	settings.vim	/^let g:neocomplete#sources#dictionary#dictionaries = {$/;"	v
g:neocomplete#sources#omni#input_patterns	settings.vim	/^  let g:neocomplete#sources#omni#input_patterns = {}$/;"	v
g:neocomplete#sources#omni#input_patterns	settings.vim	/^let g:neocomplete#sources#omni#input_patterns.perl = '\\h\\w*->\\h\\w*\\|\\h\\w*::'$/;"	v
g:neocomplete#sources#syntax#min_keyword_length	settings.vim	/^let g:neocomplete#sources#syntax#min_keyword_length = 3$/;"	v
g:php_alt_construct_parents	php.vim	/^let g:php_alt_construct_parents=1$/;"	v
g:php_alt_properties	php.vim	/^let g:php_alt_properties=1$/;"	v
g:php_smart_members	php.vim	/^let g:php_smart_members=1$/;"	v
g:php_smart_semicolon	php.vim	/^let g:php_smart_semicolon=1$/;"	v
g:phpcomplete_parse_docblock_comments	settings.vim	/^let g:phpcomplete_parse_docblock_comments = 1$/;"	v
g:vdebug_options	settings.vim	/^let g:vdebug_options= {$/;"	v
g<C-O>	mappings.vim	/^nmap g<C-O> o<ESC>k$/;"	m
gO	mappings.vim	/^nmap gO O<ESC>j$/;"	m
g^	mappings.vim	/^nmap g^ gUiW$/;"	m
gv	mappings.vim	/^nmap gv guiW$/;"	m
mapleader	settings.vim	/^let mapleader='\\'$/;"	v
my_cr_function	settings.vim	/^function! s:my_cr_function()$/;"	f
n	mappings.vim	/^nmap n nzz$/;"	m
sql_type_default	settings.vim	/^let sql_type_default = 'sqlanywhere'$/;"	v
{	mappings.vim	/^nmap { {zz$/;"	m
}	mappings.vim	/^nmap } }zz$/;"	m
